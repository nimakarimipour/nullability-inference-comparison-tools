../original/url3426a97ee4_rtreffer_minidns_tgz-pJ8-de_measite_minidns_minidnsrepl_MiniDnsReplJ8/src/de/measite/minidns/Record.java:173: error: [argument] incompatible argument for parameter dataClass of TYPE constructor.
            this(value, null);
                        ^
  found   : null (NullType)
  required: @Initialized @NonNull Class</*INFERENCE FAILED for:*/ ? extends @Initialized @NonNull Data>
../original/url3426a97ee4_rtreffer_minidns_tgz-pJ8-de_measite_minidns_minidnsrepl_MiniDnsReplJ8/src/de/measite/minidns/Record.java:226: error: [return] incompatible types in return.
            return DATA_LUT.get(dataClass);
                               ^
  type of expression: @Initialized @Nullable TYPE
  method return type: @Initialized @NonNull TYPE
../original/url3426a97ee4_rtreffer_minidns_tgz-pJ8-de_measite_minidns_minidnsrepl_MiniDnsReplJ8/src/de/measite/minidns/Record.java:283: error: [return] incompatible types in return.
            return INVERSE_LUT.get(value);
                                  ^
  type of expression: @Initialized @Nullable CLASS
  method return type: @Initialized @NonNull CLASS
../original/url3426a97ee4_rtreffer_minidns_tgz-pJ8-de_measite_minidns_minidnsrepl_MiniDnsReplJ8/src/de/measite/minidns/Record.java:428: error: [initialization.fields.uninitialized] the constructor does not initialize fields: bytes, hashCodeCache
    private Record(DNSName name, TYPE type, CLASS clazz, int clazzValue, long ttl, D payloadData, boolean unicastQuery) {
            ^
../original/url3426a97ee4_rtreffer_minidns_tgz-pJ8-de_measite_minidns_minidnsrepl_MiniDnsReplJ8/src/de/measite/minidns/Record.java:523: error: [return] incompatible types in return.
            return null;
                   ^
  type of expression: null (NullType)
  method return type: @Initialized @NonNull Question
../original/url3426a97ee4_rtreffer_minidns_tgz-pJ8-de_measite_minidns_minidnsrepl_MiniDnsReplJ8/src/de/measite/minidns/Record.java:535: error: [return] incompatible types in return.
            return null;
                   ^
  type of expression: null (NullType)
  method return type: @Initialized @NonNull Builder
../original/url3426a97ee4_rtreffer_minidns_tgz-pJ8-de_measite_minidns_minidnsrepl_MiniDnsReplJ8/src/de/measite/minidns/Record.java:556: error: [override.param] Incompatible parameter type for other.
    public boolean equals(Object other) {
                                 ^
  found   : @Initialized @NonNull Object
  required: @Initialized @Nullable Object
  Consequence: method in @Initialized @NonNull Record<D extends @Initialized @NonNull Data>
    @Initialized @NonNull boolean equals(@Initialized @NonNull Record<D extends @Initialized @NonNull Data> this, @Initialized @NonNull Object p0)
  cannot override method in @Initialized @NonNull Object
    @Initialized @NonNull boolean equals(@Initialized @NonNull Object this, @Initialized @Nullable Object p0)
../original/url3426a97ee4_rtreffer_minidns_tgz-pJ8-de_measite_minidns_minidnsrepl_MiniDnsReplJ8/src/de/measite/minidns/Record.java:587: error: [return] incompatible types in return.
        return null;
               ^
  type of expression: null (NullType)
  method return type: @Initialized @NonNull Record<E extends @Initialized @NonNull Data>
../original/url3426a97ee4_rtreffer_minidns_tgz-pJ8-de_measite_minidns_minidnsrepl_MiniDnsReplJ8/src/de/measite/minidns/DNSMessage.java:125: error: [return] incompatible types in return.
            return INVERSE_LUT.get(value);
                                  ^
  type of expression: @Initialized @Nullable RESPONSE_CODE
  method return type: @Initialized @NonNull RESPONSE_CODE
../original/url3426a97ee4_rtreffer_minidns_tgz-pJ8-de_measite_minidns_minidnsrepl_MiniDnsReplJ8/src/de/measite/minidns/DNSMessage.java:195: error: [return] incompatible types in return.
                return null;
                       ^
  type of expression: null (NullType)
  method return type: @Initialized @NonNull OPCODE
../original/url3426a97ee4_rtreffer_minidns_tgz-pJ8-de_measite_minidns_minidnsrepl_MiniDnsReplJ8/src/de/measite/minidns/DNSMessage.java:302: error: [initialization.fields.uninitialized] the constructor does not initialize fields: edns, byteCache, toStringCache, terminalOutputCache, normalizedVersionCache, hashCodeCache
    protected DNSMessage(Builder builder) {
              ^
../original/url3426a97ee4_rtreffer_minidns_tgz-pJ8-de_measite_minidns_minidnsrepl_MiniDnsReplJ8/src/de/measite/minidns/DNSMessage.java:381: error: [initialization.fields.uninitialized] the constructor does not initialize fields: edns, byteCache, toStringCache, terminalOutputCache, normalizedVersionCache, hashCodeCache
    public DNSMessage(byte data[]) throws IOException {
           ^
../original/url3426a97ee4_rtreffer_minidns_tgz-pJ8-de_measite_minidns_minidnsrepl_MiniDnsReplJ8/src/de/measite/minidns/DNSMessage.java:424: error: [initialization.fields.uninitialized] the constructor does not initialize fields: edns, byteCache, toStringCache, terminalOutputCache, normalizedVersionCache, hashCodeCache
    private DNSMessage(DNSMessage message) {
            ^
../original/url3426a97ee4_rtreffer_minidns_tgz-pJ8-de_measite_minidns_minidnsrepl_MiniDnsReplJ8/src/de/measite/minidns/DNSMessage.java:614: error: [return] incompatible types in return.
        if (optRecord == null) return null;
                                      ^
  type of expression: null (NullType)
  method return type: @Initialized @NonNull EDNS
../original/url3426a97ee4_rtreffer_minidns_tgz-pJ8-de_measite_minidns_minidnsrepl_MiniDnsReplJ8/src/de/measite/minidns/DNSMessage.java:621: error: [return] incompatible types in return.
        if (optRrPosition == -1) return null;
                                        ^
  type of expression: null (NullType)
  method return type: @Initialized @NonNull Record<@Initialized @NonNull OPT>
../original/url3426a97ee4_rtreffer_minidns_tgz-pJ8-de_measite_minidns_minidnsrepl_MiniDnsReplJ8/src/de/measite/minidns/DNSMessage.java:770: error: [return] incompatible types in return.
        if (responseCode != RESPONSE_CODE.NO_ERROR) return null;
                                                           ^
  type of expression: null (NullType)
  method return type: @Initialized @NonNull Set<D extends @Initialized @NonNull Data>
../original/url3426a97ee4_rtreffer_minidns_tgz-pJ8-de_measite_minidns_minidnsrepl_MiniDnsReplJ8/src/de/measite/minidns/DNSMessage.java:815: error: [override.param] Incompatible parameter type for other.
    public boolean equals(Object other) {
                                 ^
  found   : @Initialized @NonNull Object
  required: @Initialized @Nullable Object
  Consequence: method in @Initialized @NonNull DNSMessage
    @Initialized @NonNull boolean equals(@Initialized @NonNull DNSMessage this, @Initialized @NonNull Object p0)
  cannot override method in @Initialized @NonNull Object
    @Initialized @NonNull boolean equals(@Initialized @NonNull Object this, @Initialized @Nullable Object p0)
../original/url3426a97ee4_rtreffer_minidns_tgz-pJ8-de_measite_minidns_minidnsrepl_MiniDnsReplJ8/src/de/measite/minidns/DNSMessage.java:834: error: [initialization.fields.uninitialized] the constructor does not initialize fields: questions, answers, nameserverRecords, additionalResourceRecords, ednsBuilder
        private Builder() {
                ^
../original/url3426a97ee4_rtreffer_minidns_tgz-pJ8-de_measite_minidns_minidnsrepl_MiniDnsReplJ8/src/de/measite/minidns/DNSMessage.java:837: error: [initialization.fields.uninitialized] the constructor does not initialize fields: ednsBuilder
        private Builder(DNSMessage message) {
                ^
../original/url3426a97ee4_rtreffer_minidns_tgz-pJ8-de_measite_minidns_minidnsrepl_MiniDnsReplJ8/src/de/measite/minidns/record/Data.java:25: error: [initialization.fields.uninitialized] the constructor does not initialize fields: bytes, hashCodeCache
    Data() {
    ^
../original/url3426a97ee4_rtreffer_minidns_tgz-pJ8-de_measite_minidns_minidnsrepl_MiniDnsReplJ8/src/de/measite/minidns/record/Data.java:91: error: [override.param] Incompatible parameter type for other.
    public final boolean equals(Object other) {
                                       ^
  found   : @Initialized @NonNull Object
  required: @Initialized @Nullable Object
  Consequence: method in @Initialized @NonNull Data
    @Initialized @NonNull boolean equals(@Initialized @NonNull Data this, @Initialized @NonNull Object p0)
  cannot override method in @Initialized @NonNull Object
    @Initialized @NonNull boolean equals(@Initialized @NonNull Object this, @Initialized @Nullable Object p0)
../original/url3426a97ee4_rtreffer_minidns_tgz-pJ8-de_measite_minidns_minidnsrepl_MiniDnsReplJ8/src/de/measite/minidns/Question.java:63: error: [initialization.fields.uninitialized] the constructor does not initialize fields: byteArray
    public Question(DNSName name, TYPE type, CLASS clazz, boolean unicastQuery) {
           ^
../original/url3426a97ee4_rtreffer_minidns_tgz-pJ8-de_measite_minidns_minidnsrepl_MiniDnsReplJ8/src/de/measite/minidns/Question.java:117: error: [initialization.fields.uninitialized] the constructor does not initialize fields: byteArray
    public Question(DataInputStream dis, byte[] data) throws IOException {
           ^
../original/url3426a97ee4_rtreffer_minidns_tgz-pJ8-de_measite_minidns_minidnsrepl_MiniDnsReplJ8/src/de/measite/minidns/Question.java:153: error: [override.param] Incompatible parameter type for other.
    public boolean equals(Object other) {
                                 ^
  found   : @Initialized @NonNull Object
  required: @Initialized @Nullable Object
  Consequence: method in @Initialized @NonNull Question
    @Initialized @NonNull boolean equals(@Initialized @NonNull Question this, @Initialized @NonNull Object p0)
  cannot override method in @Initialized @NonNull Object
    @Initialized @NonNull boolean equals(@Initialized @NonNull Object this, @Initialized @Nullable Object p0)
../original/url3426a97ee4_rtreffer_minidns_tgz-pJ8-de_measite_minidns_minidnsrepl_MiniDnsReplJ8/src/de/measite/minidns/EDNS.java:102: error: [initialization.fields.uninitialized] the constructor does not initialize fields: terminalOutputCache
    public EDNS(Record<OPT> optRecord) {
           ^
../original/url3426a97ee4_rtreffer_minidns_tgz-pJ8-de_measite_minidns_minidnsrepl_MiniDnsReplJ8/src/de/measite/minidns/EDNS.java:116: error: [initialization.fields.uninitialized] the constructor does not initialize fields: optRecord, terminalOutputCache
    public EDNS(Builder builder) {
           ^
../original/url3426a97ee4_rtreffer_minidns_tgz-pJ8-de_measite_minidns_minidnsrepl_MiniDnsReplJ8/src/de/measite/minidns/EDNS.java:140: error: [return] incompatible types in return.
        return null;
               ^
  type of expression: null (NullType)
  method return type: O extends @Initialized @NonNull EDNSOption
../original/url3426a97ee4_rtreffer_minidns_tgz-pJ8-de_measite_minidns_minidnsrepl_MiniDnsReplJ8/src/de/measite/minidns/EDNS.java:185: error: [return] incompatible types in return.
        if (record.type != TYPE.OPT) return null;
                                            ^
  type of expression: null (NullType)
  method return type: @Initialized @NonNull EDNS
../original/url3426a97ee4_rtreffer_minidns_tgz-pJ8-de_measite_minidns_minidnsrepl_MiniDnsReplJ8/src/de/measite/minidns/EDNS.java:203: error: [initialization.fields.uninitialized] the constructor does not initialize fields: variablePart
        private Builder() {
                ^
../original/url3426a97ee4_rtreffer_minidns_tgz-pJ8-de_measite_minidns_minidnsrepl_MiniDnsReplJ8/src/de/measite/minidns/edns/EDNSOption.java:25: error: [initialization.fields.uninitialized] the constructor does not initialize fields: toStringCache, terminalOutputCache
    protected EDNSOption(int optionCode, byte[] optionData) {
              ^
../original/url3426a97ee4_rtreffer_minidns_tgz-pJ8-de_measite_minidns_minidnsrepl_MiniDnsReplJ8/src/de/measite/minidns/edns/EDNSOption.java:31: error: [initialization.fields.uninitialized] the constructor does not initialize fields: toStringCache, terminalOutputCache
    protected EDNSOption(byte[] optionData) {
              ^
../original/url3426a97ee4_rtreffer_minidns_tgz-pJ8-de_measite_minidns_minidnsrepl_MiniDnsReplJ8/src/de/measite/minidns/edns/EDNSOption.java:32: error: [method.invocation] call to getOptionCode() not allowed on the given receiver.
        this.optionCode = getOptionCode().asInt;
                                       ^
  found   : @UnderInitialization @NonNull EDNSOption
  required: @Initialized @NonNull EDNSOption
../original/url3426a97ee4_rtreffer_minidns_tgz-pJ8-de_measite_minidns_minidnsrepl_MiniDnsReplJ8/src/de/measite/minidns/DNSName.java:67: error: [initialization.fields.uninitialized] the constructor does not initialize fields: bytes, idn, domainpart, hostpart, labels
    private DNSName(String name, boolean inIdnForm) {
            ^
../original/url3426a97ee4_rtreffer_minidns_tgz-pJ8-de_measite_minidns_minidnsrepl_MiniDnsReplJ8/src/de/measite/minidns/DNSName.java:75: error: [initialization.fields.uninitialized] the constructor does not initialize fields: bytes, idn, domainpart, hostpart
    private DNSName(String[] labels) {
            ^
../original/url3426a97ee4_rtreffer_minidns_tgz-pJ8-de_measite_minidns_minidnsrepl_MiniDnsReplJ8/src/de/measite/minidns/DNSName.java:297: error: [override.param] Incompatible parameter type for other.
    public boolean equals(Object other) {
                                 ^
  found   : @Initialized @NonNull Object
  required: @Initialized @Nullable Object
  Consequence: method in @Initialized @NonNull DNSName
    @Initialized @NonNull boolean equals(@Initialized @NonNull DNSName this, @Initialized @NonNull Object p0)
  cannot override method in @Initialized @NonNull Object
    @Initialized @NonNull boolean equals(@Initialized @NonNull Object this, @Initialized @Nullable Object p0)
../original/url3426a97ee4_rtreffer_minidns_tgz-pJ8-de_measite_minidns_minidnsrepl_MiniDnsReplJ8/src/de/measite/minidns/DNSSECConstants.java:63: error: [return] incompatible types in return.
            return SIGNATURE_ALGORITHM_LUT.get(b);
                                              ^
  type of expression: @Initialized @Nullable SignatureAlgorithm
  method return type: @Initialized @NonNull SignatureAlgorithm
../original/url3426a97ee4_rtreffer_minidns_tgz-pJ8-de_measite_minidns_minidnsrepl_MiniDnsReplJ8/src/de/measite/minidns/DNSSECConstants.java:96: error: [return] incompatible types in return.
            return DELEGATION_DIGEST_LUT.get(b);
                                            ^
  type of expression: @Initialized @Nullable DigestAlgorithm
  method return type: @Initialized @NonNull DigestAlgorithm
../original/url3426a97ee4_rtreffer_minidns_tgz-pJ8-de_measite_minidns_minidnsrepl_MiniDnsReplJ8/src/de/measite/minidns/dane/java7/DaneExtendedTrustManager.java:71: error: [return] incompatible types in return.
        return null;
               ^
  type of expression: null (NullType)
  method return type: @Initialized @NonNull X509TrustManager
../original/url3426a97ee4_rtreffer_minidns_tgz-pJ8-de_measite_minidns_minidnsrepl_MiniDnsReplJ8/src/de/measite/minidns/dane/java7/DaneExtendedTrustManager.java:101: error: [dereference.of.nullable] dereference of possibly-null reference socket.getInetAddress()
        if (!verifier.verifyCertificateChain(chain, socket.getInetAddress().getHostName(), socket.getPort())) {
                                                                         ^
../original/url3426a97ee4_rtreffer_minidns_tgz-pJ8-de_measite_minidns_minidnsrepl_MiniDnsReplJ8/src/de/measite/minidns/dane/DaneVerifier.java:219: error: [argument] incompatible argument for parameter trustManager of DaneVerifier.verifiedConnect.
        return verifiedConnect(conn, null);
                                     ^
  found   : null (NullType)
  required: @Initialized @NonNull X509TrustManager
../original/url3426a97ee4_rtreffer_minidns_tgz-pJ8-de_measite_minidns_minidnsrepl_MiniDnsReplJ8/src/de/measite/minidns/AbstractDNSClient.java:170: error: [return] incompatible types in return.
        if (responseMessage == null) return null;
                                            ^
  type of expression: null (NullType)
  method return type: @Initialized @NonNull DNSMessage
../original/url3426a97ee4_rtreffer_minidns_tgz-pJ8-de_measite_minidns_minidnsrepl_MiniDnsReplJ8/src/de/measite/minidns/cache/LRUCache.java:98: error: [return] incompatible types in return.
            return null;
                   ^
  type of expression: null (NullType)
  method return type: @Initialized @NonNull DNSMessage
../original/url3426a97ee4_rtreffer_minidns_tgz-pJ8-de_measite_minidns_minidnsrepl_MiniDnsReplJ8/src/de/measite/minidns/cache/LRUCache.java:111: error: [return] incompatible types in return.
            return null;
                   ^
  type of expression: null (NullType)
  method return type: @Initialized @NonNull DNSMessage
../original/url3426a97ee4_rtreffer_minidns_tgz-pJ8-de_measite_minidns_minidnsrepl_MiniDnsReplJ8/src/de/measite/minidns/record/InternetAddressRR.java:34: error: [initialization.fields.uninitialized] the constructor does not initialize fields: inetAddress
    protected InternetAddressRR(byte[] ip) {
              ^
../original/url3426a97ee4_rtreffer_minidns_tgz-pJ8-de_measite_minidns_minidnsrepl_MiniDnsReplJ8/src/de/measite/minidns/dane/ExpectingTrustManager.java:32: error: [initialization.fields.uninitialized] the constructor does not initialize fields: exception
    public ExpectingTrustManager(X509TrustManager trustManager) {
           ^
../original/url3426a97ee4_rtreffer_minidns_tgz-pJ8-de_measite_minidns_minidnsrepl_MiniDnsReplJ8/src/de/measite/minidns/dane/ExpectingTrustManager.java:42: error: [assignment] incompatible types in assignment.
        exception = null;
                    ^
  found   : null (NullType)
  required: @Initialized @NonNull CertificateException
../original/url3426a97ee4_rtreffer_minidns_tgz-pJ8-de_measite_minidns_minidnsrepl_MiniDnsReplJ8/src/de/measite/minidns/dane/ExpectingTrustManager.java:80: error: [return] incompatible types in return.
        return null;
               ^
  type of expression: null (NullType)
  method return type: @Initialized @NonNull X509TrustManager
../original/url3426a97ee4_rtreffer_minidns_tgz-pJ8-de_measite_minidns_minidnsrepl_MiniDnsReplJ8/src/de/measite/minidns/record/DS.java:75: error: [initialization.fields.uninitialized] the constructor does not initialize fields: digestBigIntCache, digestHexCache
    private DS(int keyTag, SignatureAlgorithm algorithm, byte algorithmByte, DigestAlgorithm digestType, byte digestTypeByte, byte[] digest) {
            ^
../original/url3426a97ee4_rtreffer_minidns_tgz-pJ8-de_measite_minidns_minidnsrepl_MiniDnsReplJ8/src/de/measite/minidns/record/DS.java:91: error: [argument] incompatible argument for parameter algorithm of DS constructor.
        this(keyTag, null, algorithm, null, digestType, digest);
                     ^
  found   : null (NullType)
  required: @Initialized @NonNull SignatureAlgorithm
../original/url3426a97ee4_rtreffer_minidns_tgz-pJ8-de_measite_minidns_minidnsrepl_MiniDnsReplJ8/src/de/measite/minidns/record/DS.java:91: error: [argument] incompatible argument for parameter digestType of DS constructor.
        this(keyTag, null, algorithm, null, digestType, digest);
                                      ^
  found   : null (NullType)
  required: @Initialized @NonNull DigestAlgorithm
../original/url3426a97ee4_rtreffer_minidns_tgz-pJ8-de_measite_minidns_minidnsrepl_MiniDnsReplJ8/src/de/measite/minidns/record/DS.java:95: error: [argument] incompatible argument for parameter digestType of DS constructor.
        this(keyTag, algorithm, algorithm.number, null, digestType, digest);
                                                  ^
  found   : null (NullType)
  required: @Initialized @NonNull DigestAlgorithm
../original/url3426a97ee4_rtreffer_minidns_tgz-pJ8-de_measite_minidns_minidnsrepl_MiniDnsReplJ8/src/de/measite/minidns/record/DNSKEY.java:91: error: [initialization.fields.uninitialized] the constructor does not initialize fields: keyTag, keyBase64Cache
    private DNSKEY(short flags, byte protocol, SignatureAlgorithm algorithm, byte algorithmByte, byte[] key) {
            ^
../original/url3426a97ee4_rtreffer_minidns_tgz-pJ8-de_measite_minidns_minidnsrepl_MiniDnsReplJ8/src/de/measite/minidns/record/NSEC3.java:61: error: [return] incompatible types in return.
            return HASH_ALGORITHM_LUT.get(b);
                                         ^
  type of expression: @Initialized @Nullable HashAlgorithm
  method return type: @Initialized @NonNull HashAlgorithm
../original/url3426a97ee4_rtreffer_minidns_tgz-pJ8-de_measite_minidns_minidnsrepl_MiniDnsReplJ8/src/de/measite/minidns/record/NSEC3.java:136: error: [argument] incompatible argument for parameter hashAlgorithm of NSEC3 constructor.
        this(null, hashAlgorithm, flags, iterations, salt, nextHashed, types);
             ^
  found   : null (NullType)
  required: @Initialized @NonNull HashAlgorithm
../original/url3426a97ee4_rtreffer_minidns_tgz-pJ8-de_measite_minidns_minidnsrepl_MiniDnsReplJ8/src/de/measite/minidns/record/NSEC3PARAM.java:71: error: [argument] incompatible argument for parameter hashAlgorithm of NSEC3PARAM constructor.
        this(null, hashAlgorithm, flags, iterations, salt);
             ^
  found   : null (NullType)
  required: @Initialized @NonNull HashAlgorithm
../original/url3426a97ee4_rtreffer_minidns_tgz-pJ8-de_measite_minidns_minidnsrepl_MiniDnsReplJ8/src/de/measite/minidns/Assert.java:18: error: [argument] incompatible argument for parameter message of Assert.assertCsEquals.
        assertCsEquals(null, expected, actual);
                       ^
  found   : null (NullType)
  required: @Initialized @NonNull String
../original/url3426a97ee4_rtreffer_minidns_tgz-pJ8-de_measite_minidns_minidnsrepl_MiniDnsReplJ8/src/de/measite/minidns/record/OPENPGPKEY.java:30: error: [initialization.fields.uninitialized] the constructor does not initialize fields: publicKeyPacketBase64Cache
    OPENPGPKEY(byte[] publicKeyPacket) {
    ^
../original/url3426a97ee4_rtreffer_minidns_tgz-pJ8-de_measite_minidns_minidnsrepl_MiniDnsReplJ8/src/de/measite/minidns/record/RRSIG.java:92: error: [argument] incompatible argument for parameter algorithm of RRSIG constructor.
        return new RRSIG(typeCovered, null, algorithm, labels, originalTtl, signatureExpiration, signatureInception, keyTag, signerName,
                                      ^
  found   : null (NullType)
  required: @Initialized @NonNull SignatureAlgorithm
../original/url3426a97ee4_rtreffer_minidns_tgz-pJ8-de_measite_minidns_minidnsrepl_MiniDnsReplJ8/src/de/measite/minidns/record/RRSIG.java:115: error: [argument] incompatible argument for parameter algorithm of RRSIG constructor.
            this(typeCovered, null, (byte) algorithm, labels, originalTtl, signatureExpiration, signatureInception, keyTag, signerName, signature);
                              ^
  found   : null (NullType)
  required: @Initialized @NonNull SignatureAlgorithm
../original/url3426a97ee4_rtreffer_minidns_tgz-pJ8-de_measite_minidns_minidnsrepl_MiniDnsReplJ8/src/de/measite/minidns/record/RRSIG.java:120: error: [argument] incompatible argument for parameter algorithm of RRSIG constructor.
            this(typeCovered, null, (byte) algorithm, labels, originalTtl, signatureExpiration, signatureInception, keyTag, DNSName.from(signerName), signature);
                              ^
  found   : null (NullType)
  required: @Initialized @NonNull SignatureAlgorithm
../original/url3426a97ee4_rtreffer_minidns_tgz-pJ8-de_measite_minidns_minidnsrepl_MiniDnsReplJ8/src/de/measite/minidns/record/NSEC.java:97: error: [argument] incompatible argument for parameter values of NSEC.writeOutBlock.
                    if (windowBlock != -1) writeOutBlock(bitmap, dos);
                                                         ^
  found   : @Initialized @NonNull byte @Initialized @Nullable []
  required: @Initialized @NonNull byte @Initialized @NonNull []
../original/url3426a97ee4_rtreffer_minidns_tgz-pJ8-de_measite_minidns_minidnsrepl_MiniDnsReplJ8/src/de/measite/minidns/record/NSEC.java:104: error: [accessing.nullable] accessing a possibly-null array bitmap
                bitmap[a] |= (128 >> b);
                ^
../original/url3426a97ee4_rtreffer_minidns_tgz-pJ8-de_measite_minidns_minidnsrepl_MiniDnsReplJ8/src/de/measite/minidns/record/NSEC.java:106: error: [argument] incompatible argument for parameter values of NSEC.writeOutBlock.
            if (windowBlock != -1) writeOutBlock(bitmap, dos);
                                                 ^
  found   : @Initialized @NonNull byte @Initialized @Nullable []
  required: @Initialized @NonNull byte @Initialized @NonNull []
../original/url3426a97ee4_rtreffer_minidns_tgz-pJ8-de_measite_minidns_minidnsrepl_MiniDnsReplJ8/src/de/measite/minidns/DNSWorld.java:64: error: [return] incompatible types in return.
        return null;
               ^
  type of expression: null (NullType)
  method return type: @Initialized @NonNull DNSMessage
../original/url3426a97ee4_rtreffer_minidns_tgz-pJ8-de_measite_minidns_minidnsrepl_MiniDnsReplJ8/src/de/measite/minidns/DNSWorld.java:367: error: [argument] incompatible argument for parameter address of Zone constructor.
        return new Zone("", null, records);
                            ^
  found   : null (NullType)
  required: @Initialized @NonNull InetAddress
../original/url3426a97ee4_rtreffer_minidns_tgz-pJ8-de_measite_minidns_minidnsrepl_MiniDnsReplJ8/src/de/measite/minidns/dnssec/VerifierTest.java:34: error: [initialization.field.uninitialized] the default constructor does not initialize field verifier
    private Verifier verifier;
                     ^
../original/url3426a97ee4_rtreffer_minidns_tgz-pJ8-de_measite_minidns_minidnsrepl_MiniDnsReplJ8/src/de/measite/minidns/dnssec/UnverifiedReason.java:37: error: [override.param] Incompatible parameter type for obj.
    public boolean equals(Object obj) {
                                 ^
  found   : @Initialized @NonNull Object
  required: @Initialized @Nullable Object
  Consequence: method in @Initialized @NonNull UnverifiedReason
    @Initialized @NonNull boolean equals(@Initialized @NonNull UnverifiedReason this, @Initialized @NonNull Object p0)
  cannot override method in @Initialized @NonNull Object
    @Initialized @NonNull boolean equals(@Initialized @NonNull Object this, @Initialized @Nullable Object p0)
../original/url3426a97ee4_rtreffer_minidns_tgz-pJ8-de_measite_minidns_minidnsrepl_MiniDnsReplJ8/src/de/measite/minidns/dnssec/Verifier.java:63: error: [return] incompatible types in return.
        return null;
               ^
  type of expression: null (NullType)
  method return type: @Initialized @NonNull UnverifiedReason
../original/url3426a97ee4_rtreffer_minidns_tgz-pJ8-de_measite_minidns_minidnsrepl_MiniDnsReplJ8/src/de/measite/minidns/dnssec/Verifier.java:74: error: [return] incompatible types in return.
            return null;
                   ^
  type of expression: null (NullType)
  method return type: @Initialized @NonNull UnverifiedReason
../original/url3426a97ee4_rtreffer_minidns_tgz-pJ8-de_measite_minidns_minidnsrepl_MiniDnsReplJ8/src/de/measite/minidns/dnssec/Verifier.java:84: error: [return] incompatible types in return.
            return null;
                   ^
  type of expression: null (NullType)
  method return type: @Initialized @NonNull UnverifiedReason
../original/url3426a97ee4_rtreffer_minidns_tgz-pJ8-de_measite_minidns_minidnsrepl_MiniDnsReplJ8/src/de/measite/minidns/dnssec/Verifier.java:86: error: [return] incompatible types in return.
            return null;
                   ^
  type of expression: null (NullType)
  method return type: @Initialized @NonNull UnverifiedReason
../original/url3426a97ee4_rtreffer_minidns_tgz-pJ8-de_measite_minidns_minidnsrepl_MiniDnsReplJ8/src/de/measite/minidns/dnssec/Verifier.java:111: error: [return] incompatible types in return.
            return null;
                   ^
  type of expression: null (NullType)
  method return type: @Initialized @NonNull UnverifiedReason
../original/url3426a97ee4_rtreffer_minidns_tgz-pJ8-de_measite_minidns_minidnsrepl_MiniDnsReplJ8/src/de/measite/minidns/dnssec/Verifier.java:114: error: [return] incompatible types in return.
            return null;
                   ^
  type of expression: null (NullType)
  method return type: @Initialized @NonNull UnverifiedReason
../original/url3426a97ee4_rtreffer_minidns_tgz-pJ8-de_measite_minidns_minidnsrepl_MiniDnsReplJ8/src/de/measite/minidns/dnssec/algorithms/AlgorithmMap.java:105: error: [return] incompatible types in return.
        return dsDigestMap.get(algorithm);
                              ^
  type of expression: @Initialized @Nullable DigestCalculator
  method return type: @Initialized @NonNull DigestCalculator
../original/url3426a97ee4_rtreffer_minidns_tgz-pJ8-de_measite_minidns_minidnsrepl_MiniDnsReplJ8/src/de/measite/minidns/dnssec/algorithms/AlgorithmMap.java:109: error: [return] incompatible types in return.
        return signatureMap.get(algorithm);
                               ^
  type of expression: @Initialized @Nullable SignatureVerifier
  method return type: @Initialized @NonNull SignatureVerifier
../original/url3426a97ee4_rtreffer_minidns_tgz-pJ8-de_measite_minidns_minidnsrepl_MiniDnsReplJ8/src/de/measite/minidns/dnssec/algorithms/AlgorithmMap.java:113: error: [return] incompatible types in return.
        return nsecDigestMap.get(algorithm);
                                ^
  type of expression: @Initialized @Nullable DigestCalculator
  method return type: @Initialized @NonNull DigestCalculator
../original/url3426a97ee4_rtreffer_minidns_tgz-pJ8-de_measite_minidns_minidnsrepl_MiniDnsReplJ8/src/de/measite/minidns/RRSet.java:45: error: [initialization.fields.uninitialized] the constructor does not initialize fields: name, type, clazz
        private Builder() {
                ^
../original/url3426a97ee4_rtreffer_minidns_tgz-pJ8-de_measite_minidns_minidnsrepl_MiniDnsReplJ8/src/de/measite/minidns/dnssec/DNSSECWorld.java:53: error: [argument] incompatible argument for parameter address of Zone constructor.
        return new Zone("", null, merge(rrSets));
                            ^
  found   : null (NullType)
  required: @Initialized @NonNull InetAddress
../original/url3426a97ee4_rtreffer_minidns_tgz-pJ8-de_measite_minidns_minidnsrepl_MiniDnsReplJ8/src/de/measite/minidns/dnssec/DNSSECWorld.java:362: error: [dereference.of.nullable] dereference of possibly-null reference nsecRecord
            return address.equals(this.address) && Verifier.nsecMatches(request.getQuestion().name.ace, nsecRecord.name.ace, ((NSEC) nsecRecord.payloadData).next.ace);
                                                                                                        ^
../original/url3426a97ee4_rtreffer_minidns_tgz-pJ8-de_measite_minidns_minidnsrepl_MiniDnsReplJ8/src/de/measite/minidns/dnssec/DNSSECClient.java:61: error: [initialization.fields.uninitialized] the constructor does not initialize fields: dlv
    public DNSSECClient(DNSCache cache) {
           ^
../original/url3426a97ee4_rtreffer_minidns_tgz-pJ8-de_measite_minidns_minidnsrepl_MiniDnsReplJ8/src/de/measite/minidns/dnssec/DNSSECClient.java:63: error: [method.invocation] call to addSecureEntryPoint(de.measite.minidns.DNSName,byte[]) not allowed on the given receiver.
        addSecureEntryPoint(DNSName.EMPTY, rootEntryKey.toByteArray());
                           ^
  found   : @UnderInitialization(de.measite.minidns.recursive.ReliableDNSClient.class) @NonNull DNSSECClient
  required: @Initialized @NonNull DNSSECClient
../original/url3426a97ee4_rtreffer_minidns_tgz-pJ8-de_measite_minidns_minidnsrepl_MiniDnsReplJ8/src/de/measite/minidns/dnssec/DNSSECClient.java:99: error: [return] incompatible types in return.
        if (dnsMessage == null) return null;
                                       ^
  type of expression: null (NullType)
  method return type: @Initialized @NonNull DNSSECMessage
../original/url3426a97ee4_rtreffer_minidns_tgz-pJ8-de_measite_minidns_minidnsrepl_MiniDnsReplJ8/src/de/measite/minidns/dnssec/DNSSECClient.java:544: error: [argument] incompatible argument for parameter dlv of DNSSECClient.configureLookasideValidation.
        configureLookasideValidation(null);
                                     ^
  found   : null (NullType)
  required: @Initialized @NonNull DNSName
../original/url3426a97ee4_rtreffer_minidns_tgz-pJ8-de_measite_minidns_minidnsrepl_MiniDnsReplJ8/src/de/measite/minidns/recursive/ReliableDNSClient.java:61: error: [method.invocation] call to newQuestion(de.measite.minidns.DNSMessage.Builder) not allowed on the given receiver.
                return ReliableDNSClient.this.newQuestion(questionMessage);
                                                         ^
  found   : @UnderInitialization(de.measite.minidns.AbstractDNSClient.class) @NonNull ReliableDNSClient
  required: @Initialized @NonNull ReliableDNSClient
../original/url3426a97ee4_rtreffer_minidns_tgz-pJ8-de_measite_minidns_minidnsrepl_MiniDnsReplJ8/src/de/measite/minidns/recursive/ReliableDNSClient.java:66: error: [method.invocation] call to isResponseCacheable(de.measite.minidns.Question,de.measite.minidns.DNSMessage) not allowed on the given receiver.
                return ReliableDNSClient.this.isResponseCacheable(q, dnsMessage) && res;
                                                                 ^
  found   : @UnderInitialization(de.measite.minidns.AbstractDNSClient.class) @NonNull ReliableDNSClient
  required: @Initialized @NonNull ReliableDNSClient
../original/url3426a97ee4_rtreffer_minidns_tgz-pJ8-de_measite_minidns_minidnsrepl_MiniDnsReplJ8/src/de/measite/minidns/recursive/ReliableDNSClient.java:73: error: [method.invocation] call to newQuestion(de.measite.minidns.DNSMessage.Builder) not allowed on the given receiver.
                return ReliableDNSClient.this.newQuestion(questionMessage);
                                                         ^
  found   : @UnderInitialization(de.measite.minidns.AbstractDNSClient.class) @NonNull ReliableDNSClient
  required: @Initialized @NonNull ReliableDNSClient
../original/url3426a97ee4_rtreffer_minidns_tgz-pJ8-de_measite_minidns_minidnsrepl_MiniDnsReplJ8/src/de/measite/minidns/recursive/ReliableDNSClient.java:78: error: [method.invocation] call to isResponseCacheable(de.measite.minidns.Question,de.measite.minidns.DNSMessage) not allowed on the given receiver.
                return ReliableDNSClient.this.isResponseCacheable(q, dnsMessage) && res;
                                                                 ^
  found   : @UnderInitialization(de.measite.minidns.AbstractDNSClient.class) @NonNull ReliableDNSClient
  required: @Initialized @NonNull ReliableDNSClient
../original/url3426a97ee4_rtreffer_minidns_tgz-pJ8-de_measite_minidns_minidnsrepl_MiniDnsReplJ8/src/de/measite/minidns/recursive/ReliableDNSClient.java:109: error: [return] incompatible types in return.
        if (mode == Mode.recursiveOnly) return dnsMessage;
                                               ^
  type of expression: @Initialized @Nullable DNSMessage
  method return type: @Initialized @NonNull DNSMessage
../original/url3426a97ee4_rtreffer_minidns_tgz-pJ8-de_measite_minidns_minidnsrepl_MiniDnsReplJ8/src/de/measite/minidns/recursive/ReliableDNSClient.java:137: error: [return] incompatible types in return.
        return dnsMessage;
               ^
  type of expression: @Initialized @Nullable DNSMessage
  method return type: @Initialized @NonNull DNSMessage
../original/url3426a97ee4_rtreffer_minidns_tgz-pJ8-de_measite_minidns_minidnsrepl_MiniDnsReplJ8/src/de/measite/minidns/recursive/ReliableDNSClient.java:159: error: [return] incompatible types in return.
        return null;
               ^
  type of expression: null (NullType)
  method return type: @Initialized @NonNull String
../original/url3426a97ee4_rtreffer_minidns_tgz-pJ8-de_measite_minidns_minidnsrepl_MiniDnsReplJ8/src/de/measite/minidns/recursive/RecursiveDNSClient.java:231: error: [return] incompatible types in return.
        return null;
               ^
  type of expression: null (NullType)
  method return type: @Initialized @NonNull DNSMessage
../original/url3426a97ee4_rtreffer_minidns_tgz-pJ8-de_measite_minidns_minidnsrepl_MiniDnsReplJ8/src/de/measite/minidns/recursive/RecursiveDNSClient.java:241: error: [return] incompatible types in return.
            return null;
                   ^
  type of expression: null (NullType)
  method return type: @Initialized @NonNull DNSMessage
../original/url3426a97ee4_rtreffer_minidns_tgz-pJ8-de_measite_minidns_minidnsrepl_MiniDnsReplJ8/src/de/measite/minidns/recursive/RecursiveDNSClient.java:322: error: [return] incompatible types in return.
        return null;
               ^
  type of expression: null (NullType)
  method return type: @Initialized @NonNull DNSMessage
../original/url3426a97ee4_rtreffer_minidns_tgz-pJ8-de_measite_minidns_minidnsrepl_MiniDnsReplJ8/src/de/measite/minidns/DNSClient.java:131: error: [return] incompatible types in return.
        return null;
               ^
  type of expression: null (NullType)
  method return type: @Initialized @NonNull DNSMessage
../original/url3426a97ee4_rtreffer_minidns_tgz-pJ8-de_measite_minidns_minidnsrepl_MiniDnsReplJ8/src/de/measite/minidns/DNSClient.java:147: error: [return] incompatible types in return.
        return res;
               ^
  type of expression: @Initialized @NonNull String @Initialized @Nullable []
  method return type: @Initialized @NonNull String @Initialized @NonNull []
../original/url3426a97ee4_rtreffer_minidns_tgz-pJ8-de_measite_minidns_minidnsrepl_MiniDnsReplJ8/src/de/measite/minidns/dnssec/DNSSECClientTest.java:62: error: [initialization.static.field.uninitialized] static field rootPrivateKSK not initialized
    private static PrivateKey rootPrivateKSK;
                              ^
../original/url3426a97ee4_rtreffer_minidns_tgz-pJ8-de_measite_minidns_minidnsrepl_MiniDnsReplJ8/src/de/measite/minidns/dnssec/DNSSECClientTest.java:63: error: [initialization.static.field.uninitialized] static field rootKSK not initialized
    private static DNSKEY rootKSK;
                          ^
../original/url3426a97ee4_rtreffer_minidns_tgz-pJ8-de_measite_minidns_minidnsrepl_MiniDnsReplJ8/src/de/measite/minidns/dnssec/DNSSECClientTest.java:64: error: [initialization.static.field.uninitialized] static field rootPrivateZSK not initialized
    private static PrivateKey rootPrivateZSK;
                              ^
../original/url3426a97ee4_rtreffer_minidns_tgz-pJ8-de_measite_minidns_minidnsrepl_MiniDnsReplJ8/src/de/measite/minidns/dnssec/DNSSECClientTest.java:65: error: [initialization.static.field.uninitialized] static field rootZSK not initialized
    private static DNSKEY rootZSK;
                          ^
../original/url3426a97ee4_rtreffer_minidns_tgz-pJ8-de_measite_minidns_minidnsrepl_MiniDnsReplJ8/src/de/measite/minidns/dnssec/DNSSECClientTest.java:66: error: [initialization.static.field.uninitialized] static field comKSK not initialized
    private static DNSKEY comKSK;
                          ^
../original/url3426a97ee4_rtreffer_minidns_tgz-pJ8-de_measite_minidns_minidnsrepl_MiniDnsReplJ8/src/de/measite/minidns/dnssec/DNSSECClientTest.java:67: error: [initialization.static.field.uninitialized] static field comZSK not initialized
    private static DNSKEY comZSK;
                          ^
../original/url3426a97ee4_rtreffer_minidns_tgz-pJ8-de_measite_minidns_minidnsrepl_MiniDnsReplJ8/src/de/measite/minidns/dnssec/DNSSECClientTest.java:68: error: [initialization.static.field.uninitialized] static field comPrivateZSK not initialized
    private static PrivateKey comPrivateZSK;
                              ^
../original/url3426a97ee4_rtreffer_minidns_tgz-pJ8-de_measite_minidns_minidnsrepl_MiniDnsReplJ8/src/de/measite/minidns/dnssec/DNSSECClientTest.java:69: error: [initialization.static.field.uninitialized] static field comPrivateKSK not initialized
    private static PrivateKey comPrivateKSK;
                              ^
../original/url3426a97ee4_rtreffer_minidns_tgz-pJ8-de_measite_minidns_minidnsrepl_MiniDnsReplJ8/src/de/measite/minidns/dnssec/DNSSECClientTest.java:70: error: [initialization.field.uninitialized] the default constructor does not initialize field client
    private DNSSECClient client;
                         ^
../original/url3426a97ee4_rtreffer_minidns_tgz-pJ8-de_measite_minidns_minidnsrepl_MiniDnsReplJ8/src/de/measite/minidns/dnssec/algorithms/AlgorithmTest.java:16: error: [initialization.field.uninitialized] the default constructor does not initialize field algorithmMap
    protected AlgorithmMap algorithmMap;
                           ^
../original/url3426a97ee4_rtreffer_minidns_tgz-pJ8-de_measite_minidns_minidnsrepl_MiniDnsReplJ8/src/de/measite/minidns/dnssec/algorithms/SignatureVerifierTest.java:28: error: [initialization.field.uninitialized] the default constructor does not initialize field sample
    protected byte[] sample;
                     ^
../original/url3426a97ee4_rtreffer_minidns_tgz-pJ8-de_measite_minidns_minidnsrepl_MiniDnsReplJ8/src/de/measite/minidns/integrationtest/NSIDTest.java:31: error: [argument] incompatible argument for parameter dnsCache of  constructor.
        DNSClient client = new DNSClient(null) {
                                         ^
  found   : null (NullType)
  required: @Initialized @NonNull DNSCache
../original/url3426a97ee4_rtreffer_minidns_tgz-pJ8-de_measite_minidns_minidnsrepl_MiniDnsReplJ8/src/de/measite/minidns/integrationtest/NSIDTest.java:48: error: [dereference.of.nullable] dereference of possibly-null reference response
        NSID nsid = response.getEdns().getEdnsOption(OptionCode.NSID);
                    ^
../original/url3426a97ee4_rtreffer_minidns_tgz-pJ8-de_measite_minidns_minidnsrepl_MiniDnsReplJ8/src/de/measite/minidns/integrationtest/IntegrationTestHelper.java:105: error: [dereference.of.nullable] dereference of possibly-null reference method.getAnnotation(IntegrationTest.class)
        Class<?> expected = method.getAnnotation(IntegrationTest.class).expected();
                                                ^
../original/url3426a97ee4_rtreffer_minidns_tgz-pJ8-de_measite_minidns_minidnsrepl_MiniDnsReplJ8/src/de/measite/minidns/integrationtest/IntegrationTestHelper.java:113: error: [argument] incompatible argument for parameter obj of Method.invoke.
            method.invoke(null);
                          ^
  found   : null (NullType)
  required: @Initialized @NonNull Object
../original/url3426a97ee4_rtreffer_minidns_tgz-pJ8-de_measite_minidns_minidnsrepl_MiniDnsReplJ8/src/de/measite/minidns/integrationtest/IntegrationTestHelper.java:123: error: [dereference.of.nullable] dereference of possibly-null reference e.getTargetException()
            if (expected != null && expected.isAssignableFrom(e.getTargetException().getClass())) {
                                                                                  ^
../original/url3426a97ee4_rtreffer_minidns_tgz-pJ8-de_measite_minidns_minidnsrepl_MiniDnsReplJ8/src/de/measite/minidns/integrationtest/IntegrationTestTools.java:48: error: [argument] incompatible argument for parameter cache of DNSSECClient constructor.
        DNSSECClient client = new DNSSECClient(cache);
                                               ^
  found   : @Initialized @Nullable DNSCache
  required: @Initialized @NonNull DNSCache
../original/url3426a97ee4_rtreffer_minidns_tgz-pJ8-de_measite_minidns_minidnsrepl_MiniDnsReplJ8/src/de/measite/minidns/util/PlatformDetection.java:15: error: [initialization.static.field.uninitialized] static field android not initialized
    private static Boolean android;
                           ^
../original/url3426a97ee4_rtreffer_minidns_tgz-pJ8-de_measite_minidns_minidnsrepl_MiniDnsReplJ8/src/de/measite/minidns/util/NameUtilTest.java:22: error: [argument] incompatible argument for parameter name1 of NameUtil.idnEquals.
        assertTrue(NameUtil.idnEquals(null, null));
                                      ^
  found   : null (NullType)
  required: @Initialized @NonNull String
../original/url3426a97ee4_rtreffer_minidns_tgz-pJ8-de_measite_minidns_minidnsrepl_MiniDnsReplJ8/src/de/measite/minidns/util/NameUtilTest.java:22: error: [argument] incompatible argument for parameter name2 of NameUtil.idnEquals.
        assertTrue(NameUtil.idnEquals(null, null));
                                            ^
  found   : null (NullType)
  required: @Initialized @NonNull String
../original/url3426a97ee4_rtreffer_minidns_tgz-pJ8-de_measite_minidns_minidnsrepl_MiniDnsReplJ8/src/de/measite/minidns/util/NameUtilTest.java:27: error: [argument] incompatible argument for parameter name2 of NameUtil.idnEquals.
        assertFalse(NameUtil.idnEquals("dömäin.example", null));
                                                         ^
  found   : null (NullType)
  required: @Initialized @NonNull String
../original/url3426a97ee4_rtreffer_minidns_tgz-pJ8-de_measite_minidns_minidnsrepl_MiniDnsReplJ8/src/de/measite/minidns/util/NameUtilTest.java:28: error: [argument] incompatible argument for parameter name1 of NameUtil.idnEquals.
        assertFalse(NameUtil.idnEquals(null, "domain.example"));
                                       ^
  found   : null (NullType)
  required: @Initialized @NonNull String
../original/url3426a97ee4_rtreffer_minidns_tgz-pJ8-de_measite_minidns_minidnsrepl_MiniDnsReplJ8/src/de/measite/minidns/minidnsrepl/MiniDnsRepl.java:34: error: [argument] incompatible argument for parameter obj of Field.get.
            cache = (LRUCache) defaultCacheField.get(null);
                                                     ^
  found   : null (NullType)
  required: @Initialized @NonNull Object
../original/url3426a97ee4_rtreffer_minidns_tgz-pJ8-de_measite_minidns_minidnsrepl_MiniDnsReplJ8/src/de/measite/minidns/minidnsrepl/MiniDnsRepl.java:38: error: [assignment] incompatible types in assignment.
        DEFAULT_CACHE = cache;
                        ^
  found   : @Initialized @Nullable LRUCache
  required: @Initialized @NonNull LRUCache
../original/url3426a97ee4_rtreffer_minidns_tgz-pJ8-de_measite_minidns_minidnsrepl_MiniDnsReplJ8/src/de/measite/minidns/source/NetworkDataSource.java:58: error: [return] incompatible types in return.
        return dnsMessage;
               ^
  type of expression: @Initialized @Nullable DNSMessage
  method return type: @Initialized @NonNull DNSMessage
../original/url3426a97ee4_rtreffer_minidns_tgz-pJ8-de_measite_minidns_minidnsrepl_MiniDnsReplJ8/src/de/measite/minidns/source/NetworkDataSourceTest.java:43: error: [return] incompatible types in return.
                return null;
                       ^
  type of expression: null (NullType)
  method return type: @Initialized @NonNull DNSMessage
../original/url3426a97ee4_rtreffer_minidns_tgz-pJ8-de_measite_minidns_minidnsrepl_MiniDnsReplJ8/src/de/measite/minidns/source/NetworkDataSourceTest.java:47: error: [argument] incompatible argument for parameter address of NetworkDataSource.query.
        assertNull(world.query(DNSMessage.builder().build(), null, 53));
                                                             ^
  found   : null (NullType)
  required: @Initialized @NonNull InetAddress
../original/url3426a97ee4_rtreffer_minidns_tgz-pJ8-de_measite_minidns_minidnsrepl_MiniDnsReplJ8/src/de/measite/minidns/source/NetworkDataSourceWithAccounting.java:89: error: [return] incompatible types in return.
        return null;
               ^
  type of expression: null (NullType)
  method return type: @Initialized @NonNull NetworkDataSourceWithAccounting
../original/url3426a97ee4_rtreffer_minidns_tgz-pJ8-de_measite_minidns_minidnsrepl_MiniDnsReplJ8/src/de/measite/minidns/source/NetworkDataSourceWithAccounting.java:110: error: [initialization.fields.uninitialized] the constructor does not initialize fields: stringCache
        private Stats(NetworkDataSourceWithAccounting ndswa) {
                ^
../original/url3426a97ee4_rtreffer_minidns_tgz-pJ8-de_measite_minidns_minidnsrepl_MiniDnsReplJ8/src/de/measite/minidns/MiniDNSInitialization.java:30: error: [dereference.of.nullable] dereference of possibly-null reference MiniDNSInitialization.class.getClassLoader()
            InputStream is = MiniDNSInitialization.class.getClassLoader().getResourceAsStream("de.measite.minidns/version");
                                                                       ^
../original/url3426a97ee4_rtreffer_minidns_tgz-pJ8-de_measite_minidns_minidnsrepl_MiniDnsReplJ8/src/de/measite/minidns/MiniDNSInitialization.java:31: error: [argument] incompatible argument for parameter in of InputStreamReader constructor.
            reader = new BufferedReader(new InputStreamReader(is));
                                                              ^
  found   : @Initialized @Nullable InputStream
  required: @Initialized @NonNull InputStream
../original/url3426a97ee4_rtreffer_minidns_tgz-pJ8-de_measite_minidns_minidnsrepl_MiniDnsReplJ8/src/de/measite/minidns/MiniDNSInitialization.java:45: error: [assignment] incompatible types in assignment.
        VERSION = miniDnsVersion;
                  ^
  found   : @Initialized @Nullable String
  required: @Initialized @NonNull String
../original/url3426a97ee4_rtreffer_minidns_tgz-pJ8-de_measite_minidns_minidnsrepl_MiniDnsReplJ8/src/de/measite/minidns/DNSClientTest.java:72: error: [return] incompatible types in return.
            return null;
                   ^
  type of expression: null (NullType)
  method return type: @Initialized @NonNull String @Initialized @NonNull []
../original/url3426a97ee4_rtreffer_minidns_tgz-pJ8-de_measite_minidns_minidnsrepl_MiniDnsReplJ8/src/de/measite/minidns/DNSClientTest.java:100: error: [return] incompatible types in return.
                return null;
                       ^
  type of expression: null (NullType)
  method return type: @Initialized @NonNull DNSMessage
../original/url3426a97ee4_rtreffer_minidns_tgz-pJ8-de_measite_minidns_minidnsrepl_MiniDnsReplJ8/src/de/measite/minidns/jul/MiniDnsJul.java:81: error: [dereference.of.nullable] dereference of possibly-null reference loggerName
                    String[] parts = loggerName.split("\\.");
                                     ^
../original/url3426a97ee4_rtreffer_minidns_tgz-pJ8-de_measite_minidns_minidnsrepl_MiniDnsReplJ8/src/de/measite/minidns/jul/MiniDnsJul.java:99: error: [dereference.of.nullable] dereference of possibly-null reference logRecord.getThrown()
                    logRecord.getThrown().printStackTrace(pw);
                                       ^
../original/url3426a97ee4_rtreffer_minidns_tgz-pJ8-de_measite_minidns_minidnsrepl_MiniDnsReplJ8/src/de/measite/minidns/dnsserverlookup/UnixUsingEtcResolvConf.java:37: error: [initialization.static.field.uninitialized] static field cached not initialized
    private static String[] cached;
                            ^
../original/url3426a97ee4_rtreffer_minidns_tgz-pJ8-de_measite_minidns_minidnsrepl_MiniDnsReplJ8/src/de/measite/minidns/dnsserverlookup/UnixUsingEtcResolvConf.java:49: error: [return] incompatible types in return.
            return null;
                   ^
  type of expression: null (NullType)
  method return type: @Initialized @NonNull String @Initialized @NonNull []
../original/url3426a97ee4_rtreffer_minidns_tgz-pJ8-de_measite_minidns_minidnsrepl_MiniDnsReplJ8/src/de/measite/minidns/dnsserverlookup/UnixUsingEtcResolvConf.java:65: error: [dereference.of.nullable] dereference of possibly-null reference matcher.group(1)
                    servers.add(matcher.group(1).trim());
                                             ^
../original/url3426a97ee4_rtreffer_minidns_tgz-pJ8-de_measite_minidns_minidnsrepl_MiniDnsReplJ8/src/de/measite/minidns/dnsserverlookup/UnixUsingEtcResolvConf.java:70: error: [return] incompatible types in return.
            return null;
                   ^
  type of expression: null (NullType)
  method return type: @Initialized @NonNull String @Initialized @NonNull []
../original/url3426a97ee4_rtreffer_minidns_tgz-pJ8-de_measite_minidns_minidnsrepl_MiniDnsReplJ8/src/de/measite/minidns/dnsserverlookup/UnixUsingEtcResolvConf.java:81: error: [return] incompatible types in return.
            return null;
                   ^
  type of expression: null (NullType)
  method return type: @Initialized @NonNull String @Initialized @NonNull []
../original/url3426a97ee4_rtreffer_minidns_tgz-pJ8-de_measite_minidns_minidnsrepl_MiniDnsReplJ8/src/de/measite/minidns/dnsserverlookup/AndroidUsingReflection.java:45: error: [argument] incompatible argument for parameter obj of Method.invoke.
                String value = (String)method.invoke(null, propKey);
                                                     ^
  found   : null (NullType)
  required: @Initialized @NonNull Object
../original/url3426a97ee4_rtreffer_minidns_tgz-pJ8-de_measite_minidns_minidnsrepl_MiniDnsReplJ8/src/de/measite/minidns/dnsserverlookup/AndroidUsingReflection.java:71: error: [return] incompatible types in return.
        return null;
               ^
  type of expression: null (NullType)
  method return type: @Initialized @NonNull String @Initialized @NonNull []
../original/url3426a97ee4_rtreffer_minidns_tgz-pJ8-de_measite_minidns_minidnsrepl_MiniDnsReplJ8/src/de/measite/minidns/dnsserverlookup/AndroidUsingExec.java:75: error: [return] incompatible types in return.
        return null;
               ^
  type of expression: null (NullType)
  method return type: @Initialized @NonNull String @Initialized @NonNull []
../original/url3426a97ee4_rtreffer_minidns_tgz-pJ8-de_measite_minidns_minidnsrepl_MiniDnsReplJ8/src/de/measite/minidns/cache/ExtendedLRUCache.java:47: error: [argument] incompatible argument for parameter authoritativeZone of ExtendedLRUCache.gather.
        gather(extraCaches, q, message.answerSection, null);
                                                      ^
  found   : null (NullType)
  required: @Initialized @NonNull DNSName
../original/url3426a97ee4_rtreffer_minidns_tgz-pJ8-de_measite_minidns_minidnsrepl_MiniDnsReplJ8/src/de/measite/minidns/cache/ExtendedLRUCache.java:48: error: [argument] incompatible argument for parameter authoritativeZone of ExtendedLRUCache.gather.
        gather(extraCaches, q, message.authoritySection, null);
                                                         ^
  found   : null (NullType)
  required: @Initialized @NonNull DNSName
../original/url3426a97ee4_rtreffer_minidns_tgz-pJ8-de_measite_minidns_minidnsrepl_MiniDnsReplJ8/src/de/measite/minidns/cache/ExtendedLRUCache.java:49: error: [argument] incompatible argument for parameter authoritativeZone of ExtendedLRUCache.gather.
        gather(extraCaches, q, message.additionalSection, null);
                                                          ^
  found   : null (NullType)
  required: @Initialized @NonNull DNSName
../original/url3426a97ee4_rtreffer_minidns_tgz-pJ8-de_measite_minidns_minidnsrepl_MiniDnsReplJ8/src/de/measite/minidns/hla/ResolverApi.java:59: error: [assignment] incompatible types in assignment.
            this.dnsClient = null;
                             ^
  found   : null (NullType)
  required: @Initialized @NonNull AbstractDNSClient
../original/url3426a97ee4_rtreffer_minidns_tgz-pJ8-de_measite_minidns_minidnsrepl_MiniDnsReplJ8/src/de/measite/minidns/hla/ResolverApi.java:61: error: [assignment] incompatible types in assignment.
            this.dnssecClient = null;
                                ^
  found   : null (NullType)
  required: @Initialized @NonNull DNSSECClient
../original/url3426a97ee4_rtreffer_minidns_tgz-pJ8-de_measite_minidns_minidnsrepl_MiniDnsReplJ8/src/de/measite/minidns/hla/ResolverApi.java:87: error: [argument] incompatible argument for parameter unverifiedReasons of ResolverResult constructor.
        return new ResolverResult<D>(question, dnsMessage, unverifiedReasons);
                                                           ^
  found   : @Initialized @Nullable Set<@Initialized @NonNull UnverifiedReason>
  required: @Initialized @NonNull Set<@Initialized @NonNull UnverifiedReason>
../original/url3426a97ee4_rtreffer_minidns_tgz-pJ8-de_measite_minidns_minidnsrepl_MiniDnsReplJ8/src/de/measite/minidns/hla/ResolverResult.java:31: error: [initialization.fields.uninitialized] the constructor does not initialize fields: resolutionUnsuccessfulException, dnssecResultNotAuthenticException
    ResolverResult(Question question , DNSMessage answer, Set<UnverifiedReason> unverifiedReasons) {
    ^
../original/url3426a97ee4_rtreffer_minidns_tgz-pJ8-de_measite_minidns_minidnsrepl_MiniDnsReplJ8/src/de/measite/minidns/hla/ResolverResult.java:43: error: [assignment] incompatible types in assignment.
            this.unverifiedReasons = null;
                                     ^
  found   : null (NullType)
  required: @Initialized @NonNull Set<@Initialized @NonNull UnverifiedReason>
../original/url3426a97ee4_rtreffer_minidns_tgz-pJ8-de_measite_minidns_minidnsrepl_MiniDnsReplJ8/src/de/measite/minidns/hla/ResolverResult.java:86: error: [return] incompatible types in return.
        if (wasSuccessful()) return null;
                                    ^
  type of expression: null (NullType)
  method return type: @Initialized @NonNull ResolutionUnsuccessfulException
../original/url3426a97ee4_rtreffer_minidns_tgz-pJ8-de_measite_minidns_minidnsrepl_MiniDnsReplJ8/src/de/measite/minidns/hla/ResolverResult.java:99: error: [return] incompatible types in return.
            return null;
                   ^
  type of expression: null (NullType)
  method return type: @Initialized @NonNull DNSSECResultNotAuthenticException
../original/url3426a97ee4_rtreffer_minidns_tgz-pJ8-de_measite_minidns_minidnsrepl_MiniDnsReplJ8/src/de/measite/minidns/hla/ResolverResult.java:101: error: [return] incompatible types in return.
            return null;
                   ^
  type of expression: null (NullType)
  method return type: @Initialized @NonNull DNSSECResultNotAuthenticException
../original/url3426a97ee4_rtreffer_minidns_tgz-pJ8-de_measite_minidns_minidnsrepl_MiniDnsReplJ8/src/de/measite/minidns/DNSMessageTest.java:66: error: [dereference.of.nullable] dereference of possibly-null reference inputStream
        for(int readBytes = inputStream.read();
                            ^
../original/url3426a97ee4_rtreffer_minidns_tgz-pJ8-de_measite_minidns_minidnsrepl_MiniDnsReplJ8/src/de/measite/minidns/DNSMessageTest.java:132: error: [argument] incompatible argument for parameter actual of Assert.assertCsEquals.
        assertCsEquals("gmail-smtp-in.l.google.com", mxes.get(5));
                                                             ^
  found   : @Initialized @Nullable DNSName
  required: @Initialized @NonNull CharSequence
../original/url3426a97ee4_rtreffer_minidns_tgz-pJ8-de_measite_minidns_minidnsrepl_MiniDnsReplJ8/src/de/measite/minidns/DNSMessageTest.java:133: error: [argument] incompatible argument for parameter actual of Assert.assertCsEquals.
        assertCsEquals("alt1.gmail-smtp-in.l.google.com", mxes.get(10));
                                                                  ^
  found   : @Initialized @Nullable DNSName
  required: @Initialized @NonNull CharSequence
../original/url3426a97ee4_rtreffer_minidns_tgz-pJ8-de_measite_minidns_minidnsrepl_MiniDnsReplJ8/src/de/measite/minidns/DNSMessageTest.java:134: error: [argument] incompatible argument for parameter actual of Assert.assertCsEquals.
        assertCsEquals("alt2.gmail-smtp-in.l.google.com", mxes.get(20));
                                                                  ^
  found   : @Initialized @Nullable DNSName
  required: @Initialized @NonNull CharSequence
../original/url3426a97ee4_rtreffer_minidns_tgz-pJ8-de_measite_minidns_minidnsrepl_MiniDnsReplJ8/src/de/measite/minidns/DNSMessageTest.java:135: error: [argument] incompatible argument for parameter actual of Assert.assertCsEquals.
        assertCsEquals("alt3.gmail-smtp-in.l.google.com", mxes.get(30));
                                                                  ^
  found   : @Initialized @Nullable DNSName
  required: @Initialized @NonNull CharSequence
../original/url3426a97ee4_rtreffer_minidns_tgz-pJ8-de_measite_minidns_minidnsrepl_MiniDnsReplJ8/src/de/measite/minidns/DNSMessageTest.java:136: error: [argument] incompatible argument for parameter actual of Assert.assertCsEquals.
        assertCsEquals("alt4.gmail-smtp-in.l.google.com", mxes.get(40));
                                                                  ^
  found   : @Initialized @Nullable DNSName
  required: @Initialized @NonNull CharSequence
../original/url3426a97ee4_rtreffer_minidns_tgz-pJ8-de_measite_minidns_minidnsrepl_MiniDnsReplJ8/src/de/measite/minidns/LRUCacheTest.java:25: error: [initialization.field.uninitialized] the default constructor does not initialize field lruCache
    private LRUCache lruCache;
                     ^
Note: ../original/url3426a97ee4_rtreffer_minidns_tgz-pJ8-de_measite_minidns_minidnsrepl_MiniDnsReplJ8/src/de/measite/minidns/dane/DaneVerifier.java uses or overrides a deprecated API.
Note: Recompile with -Xlint:deprecation for details.
157 errors
