../annotator/url1a41b8e9f2_mr1azl_INF345_tgz-pJ8-TestParserJ8/src/yyy/NodeTest.java:24: error: [initialization.field.uninitialized] the default constructor does not initialize field steps
	private Step[] steps;
	               ^
../annotator/url1a41b8e9f2_mr1azl_INF345_tgz-pJ8-TestParserJ8/src/yyy/NodeTest.java:25: error: [assignment] incompatible types in assignment.
	private String nodeValue=null;
	                         ^
  found   : null (NullType)
  required: @Initialized @NonNull String
../annotator/url1a41b8e9f2_mr1azl_INF345_tgz-pJ8-TestParserJ8/src/yyy/NodeTest.java:26: error: [initialization.field.uninitialized] the default constructor does not initialize field context
	private List<Node> context;
	                   ^
../annotator/url1a41b8e9f2_mr1azl_INF345_tgz-pJ8-TestParserJ8/src/yyy/NodeTest.java:53: error: [return] incompatible types in return.
		return null;
		       ^
  type of expression: null (NullType)
  method return type: @Initialized @NonNull String
../annotator/url1a41b8e9f2_mr1azl_INF345_tgz-pJ8-TestParserJ8/src/yyy/NodeTest.java:120: error: [return] incompatible types in return.
		return null;
		       ^
  type of expression: null (NullType)
  method return type: @Initialized @NonNull Node
../annotator/url1a41b8e9f2_mr1azl_INF345_tgz-pJ8-TestParserJ8/src/yyy/NodeTest.java:131: error: [return] incompatible types in return.
		return null;
		       ^
  type of expression: null (NullType)
  method return type: @Initialized @NonNull NodeList
../annotator/url1a41b8e9f2_mr1azl_INF345_tgz-pJ8-TestParserJ8/src/yyy/NodeTest.java:142: error: [return] incompatible types in return.
		return null;
		       ^
  type of expression: null (NullType)
  method return type: @Initialized @NonNull Node
../annotator/url1a41b8e9f2_mr1azl_INF345_tgz-pJ8-TestParserJ8/src/yyy/NodeTest.java:153: error: [return] incompatible types in return.
		return null;
		       ^
  type of expression: null (NullType)
  method return type: @Initialized @NonNull Node
../annotator/url1a41b8e9f2_mr1azl_INF345_tgz-pJ8-TestParserJ8/src/yyy/NodeTest.java:164: error: [return] incompatible types in return.
		return null;
		       ^
  type of expression: null (NullType)
  method return type: @Initialized @NonNull Node
../annotator/url1a41b8e9f2_mr1azl_INF345_tgz-pJ8-TestParserJ8/src/yyy/NodeTest.java:175: error: [return] incompatible types in return.
		return null;
		       ^
  type of expression: null (NullType)
  method return type: @Initialized @NonNull Node
../annotator/url1a41b8e9f2_mr1azl_INF345_tgz-pJ8-TestParserJ8/src/yyy/NodeTest.java:186: error: [return] incompatible types in return.
		return null;
		       ^
  type of expression: null (NullType)
  method return type: @Initialized @NonNull NamedNodeMap
../annotator/url1a41b8e9f2_mr1azl_INF345_tgz-pJ8-TestParserJ8/src/yyy/NodeTest.java:197: error: [return] incompatible types in return.
		return null;
		       ^
  type of expression: null (NullType)
  method return type: @Initialized @NonNull Document
../annotator/url1a41b8e9f2_mr1azl_INF345_tgz-pJ8-TestParserJ8/src/yyy/NodeTest.java:209: error: [override.param] Incompatible parameter type for refChild.
	public Node insertBefore(Node newChild, Node refChild) throws DOMException {
	                                             ^
  found   : @Initialized @NonNull Node
  required: @Initialized @Nullable Node
  Consequence: method in @Initialized @NonNull NodeTest
    @Initialized @NonNull Node insertBefore(@Initialized @NonNull NodeTest this, @Initialized @NonNull Node p0, @Initialized @NonNull Node p1) throws @Initialized @NonNull DOMException
  cannot override method in @Initialized @NonNull Node
    @Initialized @NonNull Node insertBefore(@Initialized @NonNull Node this, @Initialized @NonNull Node p0, @Initialized @Nullable Node p1) throws @Initialized @NonNull DOMException
../annotator/url1a41b8e9f2_mr1azl_INF345_tgz-pJ8-TestParserJ8/src/yyy/NodeTest.java:211: error: [return] incompatible types in return.
		return null;
		       ^
  type of expression: null (NullType)
  method return type: @Initialized @NonNull Node
../annotator/url1a41b8e9f2_mr1azl_INF345_tgz-pJ8-TestParserJ8/src/yyy/NodeTest.java:225: error: [return] incompatible types in return.
		return null;
		       ^
  type of expression: null (NullType)
  method return type: @Initialized @NonNull Node
../annotator/url1a41b8e9f2_mr1azl_INF345_tgz-pJ8-TestParserJ8/src/yyy/NodeTest.java:238: error: [return] incompatible types in return.
		return null;
		       ^
  type of expression: null (NullType)
  method return type: @Initialized @NonNull Node
../annotator/url1a41b8e9f2_mr1azl_INF345_tgz-pJ8-TestParserJ8/src/yyy/NodeTest.java:251: error: [return] incompatible types in return.
		return null;
		       ^
  type of expression: null (NullType)
  method return type: @Initialized @NonNull Node
../annotator/url1a41b8e9f2_mr1azl_INF345_tgz-pJ8-TestParserJ8/src/yyy/NodeTest.java:274: error: [return] incompatible types in return.
		return null;
		       ^
  type of expression: null (NullType)
  method return type: @Initialized @NonNull Node
../annotator/url1a41b8e9f2_mr1azl_INF345_tgz-pJ8-TestParserJ8/src/yyy/NodeTest.java:295: error: [override.param] Incompatible parameter type for version.
	public boolean isSupported(String feature, String version) {
	                                                  ^
  found   : @Initialized @NonNull String
  required: @Initialized @Nullable String
  Consequence: method in @Initialized @NonNull NodeTest
    @Initialized @NonNull boolean isSupported(@Initialized @NonNull NodeTest this, @Initialized @NonNull String p0, @Initialized @NonNull String p1)
  cannot override method in @Initialized @NonNull Node
    @Initialized @NonNull boolean isSupported(@Initialized @NonNull Node this, @Initialized @NonNull String p0, @Initialized @Nullable String p1)
../annotator/url1a41b8e9f2_mr1azl_INF345_tgz-pJ8-TestParserJ8/src/yyy/NodeTest.java:308: error: [return] incompatible types in return.
		return null;
		       ^
  type of expression: null (NullType)
  method return type: @Initialized @NonNull String
../annotator/url1a41b8e9f2_mr1azl_INF345_tgz-pJ8-TestParserJ8/src/yyy/NodeTest.java:319: error: [return] incompatible types in return.
		return null;
		       ^
  type of expression: null (NullType)
  method return type: @Initialized @NonNull String
../annotator/url1a41b8e9f2_mr1azl_INF345_tgz-pJ8-TestParserJ8/src/yyy/NodeTest.java:329: error: [override.param] Incompatible parameter type for prefix.
	public void setPrefix(String prefix) throws DOMException {
	                             ^
  found   : @Initialized @NonNull String
  required: @Initialized @Nullable String
  Consequence: method in @Initialized @NonNull NodeTest
    @NonNull void setPrefix(@Initialized @NonNull NodeTest this, @Initialized @NonNull String p0) throws @Initialized @NonNull DOMException
  cannot override method in @Initialized @NonNull Node
    @NonNull void setPrefix(@Initialized @NonNull Node this, @Initialized @Nullable String p0) throws @Initialized @NonNull DOMException
../annotator/url1a41b8e9f2_mr1azl_INF345_tgz-pJ8-TestParserJ8/src/yyy/NodeTest.java:342: error: [return] incompatible types in return.
		return null;
		       ^
  type of expression: null (NullType)
  method return type: @Initialized @NonNull String
../annotator/url1a41b8e9f2_mr1azl_INF345_tgz-pJ8-TestParserJ8/src/yyy/NodeTest.java:364: error: [return] incompatible types in return.
		return null;
		       ^
  type of expression: null (NullType)
  method return type: @Initialized @NonNull String
../annotator/url1a41b8e9f2_mr1azl_INF345_tgz-pJ8-TestParserJ8/src/yyy/NodeTest.java:389: error: [return] incompatible types in return.
		return null;
		       ^
  type of expression: null (NullType)
  method return type: @Initialized @NonNull String
../annotator/url1a41b8e9f2_mr1azl_INF345_tgz-pJ8-TestParserJ8/src/yyy/NodeTest.java:423: error: [override.param] Incompatible parameter type for namespaceURI.
	public String lookupPrefix(String namespaceURI) {
	                                  ^
  found   : @Initialized @NonNull String
  required: @Initialized @Nullable String
  Consequence: method in @Initialized @NonNull NodeTest
    @Initialized @NonNull String lookupPrefix(@Initialized @NonNull NodeTest this, @Initialized @NonNull String p0)
  cannot override method in @Initialized @NonNull Node
    @Initialized @Nullable String lookupPrefix(@Initialized @NonNull Node this, @Initialized @Nullable String p0)
../annotator/url1a41b8e9f2_mr1azl_INF345_tgz-pJ8-TestParserJ8/src/yyy/NodeTest.java:425: error: [return] incompatible types in return.
		return null;
		       ^
  type of expression: null (NullType)
  method return type: @Initialized @NonNull String
../annotator/url1a41b8e9f2_mr1azl_INF345_tgz-pJ8-TestParserJ8/src/yyy/NodeTest.java:435: error: [override.param] Incompatible parameter type for namespaceURI.
	public boolean isDefaultNamespace(String namespaceURI) {
	                                         ^
  found   : @Initialized @NonNull String
  required: @Initialized @Nullable String
  Consequence: method in @Initialized @NonNull NodeTest
    @Initialized @NonNull boolean isDefaultNamespace(@Initialized @NonNull NodeTest this, @Initialized @NonNull String p0)
  cannot override method in @Initialized @NonNull Node
    @Initialized @NonNull boolean isDefaultNamespace(@Initialized @NonNull Node this, @Initialized @Nullable String p0)
../annotator/url1a41b8e9f2_mr1azl_INF345_tgz-pJ8-TestParserJ8/src/yyy/NodeTest.java:447: error: [override.param] Incompatible parameter type for prefix.
	public String lookupNamespaceURI(String prefix) {
	                                        ^
  found   : @Initialized @NonNull String
  required: @Initialized @Nullable String
  Consequence: method in @Initialized @NonNull NodeTest
    @Initialized @NonNull String lookupNamespaceURI(@Initialized @NonNull NodeTest this, @Initialized @NonNull String p0)
  cannot override method in @Initialized @NonNull Node
    @Initialized @Nullable String lookupNamespaceURI(@Initialized @NonNull Node this, @Initialized @Nullable String p0)
../annotator/url1a41b8e9f2_mr1azl_INF345_tgz-pJ8-TestParserJ8/src/yyy/NodeTest.java:449: error: [return] incompatible types in return.
		return null;
		       ^
  type of expression: null (NullType)
  method return type: @Initialized @NonNull String
../annotator/url1a41b8e9f2_mr1azl_INF345_tgz-pJ8-TestParserJ8/src/yyy/NodeTest.java:472: error: [override.param] Incompatible parameter type for version.
	public Object getFeature(String feature, String version) {
	                                                ^
  found   : @Initialized @NonNull String
  required: @Initialized @Nullable String
  Consequence: method in @Initialized @NonNull NodeTest
    @Initialized @NonNull Object getFeature(@Initialized @NonNull NodeTest this, @Initialized @NonNull String p0, @Initialized @NonNull String p1)
  cannot override method in @Initialized @NonNull Node
    @Initialized @Nullable Object getFeature(@Initialized @NonNull Node this, @Initialized @NonNull String p0, @Initialized @Nullable String p1)
../annotator/url1a41b8e9f2_mr1azl_INF345_tgz-pJ8-TestParserJ8/src/yyy/NodeTest.java:474: error: [return] incompatible types in return.
		return null;
		       ^
  type of expression: null (NullType)
  method return type: @Initialized @NonNull Object
../annotator/url1a41b8e9f2_mr1azl_INF345_tgz-pJ8-TestParserJ8/src/yyy/NodeTest.java:486: error: [override.param] Incompatible parameter type for data.
	public Object setUserData(String key, Object data, UserDataHandler handler) {
	                                             ^
  found   : @Initialized @NonNull Object
  required: @Initialized @Nullable Object
  Consequence: method in @Initialized @NonNull NodeTest
    @Initialized @NonNull Object setUserData(@Initialized @NonNull NodeTest this, @Initialized @NonNull String p0, @Initialized @NonNull Object p1, @Initialized @NonNull UserDataHandler p2)
  cannot override method in @Initialized @NonNull Node
    @Initialized @Nullable Object setUserData(@Initialized @NonNull Node this, @Initialized @NonNull String p0, @Initialized @Nullable Object p1, @Initialized @Nullable UserDataHandler p2)
../annotator/url1a41b8e9f2_mr1azl_INF345_tgz-pJ8-TestParserJ8/src/yyy/NodeTest.java:486: error: [override.param] Incompatible parameter type for handler.
	public Object setUserData(String key, Object data, UserDataHandler handler) {
	                                                                   ^
  found   : @Initialized @NonNull UserDataHandler
  required: @Initialized @Nullable UserDataHandler
  Consequence: method in @Initialized @NonNull NodeTest
    @Initialized @NonNull Object setUserData(@Initialized @NonNull NodeTest this, @Initialized @NonNull String p0, @Initialized @NonNull Object p1, @Initialized @NonNull UserDataHandler p2)
  cannot override method in @Initialized @NonNull Node
    @Initialized @Nullable Object setUserData(@Initialized @NonNull Node this, @Initialized @NonNull String p0, @Initialized @Nullable Object p1, @Initialized @Nullable UserDataHandler p2)
../annotator/url1a41b8e9f2_mr1azl_INF345_tgz-pJ8-TestParserJ8/src/yyy/NodeTest.java:488: error: [return] incompatible types in return.
		return null;
		       ^
  type of expression: null (NullType)
  method return type: @Initialized @NonNull Object
../annotator/url1a41b8e9f2_mr1azl_INF345_tgz-pJ8-TestParserJ8/src/yyy/NodeTest.java:500: error: [return] incompatible types in return.
		return null;
		       ^
  type of expression: null (NullType)
  method return type: @Initialized @NonNull Object
../annotator/url1a41b8e9f2_mr1azl_INF345_tgz-pJ8-TestParserJ8/src/yyy/NodeTest.java:511: error: [return] incompatible types in return.
		return null;
		       ^
  type of expression: null (NullType)
  method return type: @Initialized @NonNull String
../annotator/url1a41b8e9f2_mr1azl_INF345_tgz-pJ8-TestParserJ8/src/yyy/NodeTest.java:523: error: [return] incompatible types in return.
		return null;
		       ^
  type of expression: null (NullType)
  method return type: @Initialized @NonNull String
../annotator/url1a41b8e9f2_mr1azl_INF345_tgz-pJ8-TestParserJ8/src/yyy/NodeTest.java:560: error: [return] incompatible types in return.
		return null;
		       ^
  type of expression: null (NullType)
  method return type: @Initialized @NonNull Attr
../annotator/url1a41b8e9f2_mr1azl_INF345_tgz-pJ8-TestParserJ8/src/yyy/NodeTest.java:573: error: [return] incompatible types in return.
		return null;
		       ^
  type of expression: null (NullType)
  method return type: @Initialized @NonNull Attr
../annotator/url1a41b8e9f2_mr1azl_INF345_tgz-pJ8-TestParserJ8/src/yyy/NodeTest.java:586: error: [return] incompatible types in return.
		return null;
		       ^
  type of expression: null (NullType)
  method return type: @Initialized @NonNull Attr
../annotator/url1a41b8e9f2_mr1azl_INF345_tgz-pJ8-TestParserJ8/src/yyy/NodeTest.java:598: error: [return] incompatible types in return.
		return null;
		       ^
  type of expression: null (NullType)
  method return type: @Initialized @NonNull NodeList
../annotator/url1a41b8e9f2_mr1azl_INF345_tgz-pJ8-TestParserJ8/src/yyy/NodeTest.java:610: error: [override.param] Incompatible parameter type for namespaceURI.
	public String getAttributeNS(String namespaceURI, String localName)
	                                    ^
  found   : @Initialized @NonNull String
  required: @Initialized @Nullable String
  Consequence: method in @Initialized @NonNull NodeTest
    @Initialized @NonNull String getAttributeNS(@Initialized @NonNull NodeTest this, @Initialized @NonNull String p0, @Initialized @NonNull String p1) throws @Initialized @NonNull DOMException
  cannot override method in @Initialized @NonNull Element
    @Initialized @NonNull String getAttributeNS(@Initialized @NonNull Element this, @Initialized @Nullable String p0, @Initialized @NonNull String p1) throws @Initialized @NonNull DOMException
../annotator/url1a41b8e9f2_mr1azl_INF345_tgz-pJ8-TestParserJ8/src/yyy/NodeTest.java:613: error: [return] incompatible types in return.
		return null;
		       ^
  type of expression: null (NullType)
  method return type: @Initialized @NonNull String
../annotator/url1a41b8e9f2_mr1azl_INF345_tgz-pJ8-TestParserJ8/src/yyy/NodeTest.java:625: error: [override.param] Incompatible parameter type for namespaceURI.
	public void setAttributeNS(String namespaceURI, String qualifiedName,
	                                  ^
  found   : @Initialized @NonNull String
  required: @Initialized @Nullable String
  Consequence: method in @Initialized @NonNull NodeTest
    @NonNull void setAttributeNS(@Initialized @NonNull NodeTest this, @Initialized @NonNull String p0, @Initialized @NonNull String p1, @Initialized @NonNull String p2) throws @Initialized @NonNull DOMException
  cannot override method in @Initialized @NonNull Element
    @NonNull void setAttributeNS(@Initialized @NonNull Element this, @Initialized @Nullable String p0, @Initialized @NonNull String p1, @Initialized @NonNull String p2) throws @Initialized @NonNull DOMException
../annotator/url1a41b8e9f2_mr1azl_INF345_tgz-pJ8-TestParserJ8/src/yyy/NodeTest.java:639: error: [override.param] Incompatible parameter type for namespaceURI.
	public void removeAttributeNS(String namespaceURI, String localName)
	                                     ^
  found   : @Initialized @NonNull String
  required: @Initialized @Nullable String
  Consequence: method in @Initialized @NonNull NodeTest
    @NonNull void removeAttributeNS(@Initialized @NonNull NodeTest this, @Initialized @NonNull String p0, @Initialized @NonNull String p1) throws @Initialized @NonNull DOMException
  cannot override method in @Initialized @NonNull Element
    @NonNull void removeAttributeNS(@Initialized @NonNull Element this, @Initialized @Nullable String p0, @Initialized @NonNull String p1) throws @Initialized @NonNull DOMException
../annotator/url1a41b8e9f2_mr1azl_INF345_tgz-pJ8-TestParserJ8/src/yyy/NodeTest.java:654: error: [override.param] Incompatible parameter type for namespaceURI.
	public Attr getAttributeNodeNS(String namespaceURI, String localName)
	                                      ^
  found   : @Initialized @NonNull String
  required: @Initialized @Nullable String
  Consequence: method in @Initialized @NonNull NodeTest
    @Initialized @NonNull Attr getAttributeNodeNS(@Initialized @NonNull NodeTest this, @Initialized @NonNull String p0, @Initialized @NonNull String p1) throws @Initialized @NonNull DOMException
  cannot override method in @Initialized @NonNull Element
    @Initialized @Nullable Attr getAttributeNodeNS(@Initialized @NonNull Element this, @Initialized @Nullable String p0, @Initialized @NonNull String p1) throws @Initialized @NonNull DOMException
../annotator/url1a41b8e9f2_mr1azl_INF345_tgz-pJ8-TestParserJ8/src/yyy/NodeTest.java:657: error: [return] incompatible types in return.
		return null;
		       ^
  type of expression: null (NullType)
  method return type: @Initialized @NonNull Attr
../annotator/url1a41b8e9f2_mr1azl_INF345_tgz-pJ8-TestParserJ8/src/yyy/NodeTest.java:670: error: [return] incompatible types in return.
		return null;
		       ^
  type of expression: null (NullType)
  method return type: @Initialized @NonNull Attr
../annotator/url1a41b8e9f2_mr1azl_INF345_tgz-pJ8-TestParserJ8/src/yyy/NodeTest.java:682: error: [override.param] Incompatible parameter type for namespaceURI.
	public NodeList getElementsByTagNameNS(String namespaceURI, String localName)
	                                              ^
  found   : @Initialized @NonNull String
  required: @Initialized @Nullable String
  Consequence: method in @Initialized @NonNull NodeTest
    @Initialized @NonNull NodeList getElementsByTagNameNS(@Initialized @NonNull NodeTest this, @Initialized @NonNull String p0, @Initialized @NonNull String p1) throws @Initialized @NonNull DOMException
  cannot override method in @Initialized @NonNull Element
    @Initialized @NonNull NodeList getElementsByTagNameNS(@Initialized @NonNull Element this, @Initialized @Nullable String p0, @Initialized @NonNull String p1) throws @Initialized @NonNull DOMException
../annotator/url1a41b8e9f2_mr1azl_INF345_tgz-pJ8-TestParserJ8/src/yyy/NodeTest.java:685: error: [return] incompatible types in return.
		return null;
		       ^
  type of expression: null (NullType)
  method return type: @Initialized @NonNull NodeList
../annotator/url1a41b8e9f2_mr1azl_INF345_tgz-pJ8-TestParserJ8/src/yyy/NodeTest.java:709: error: [override.param] Incompatible parameter type for namespaceURI.
	public boolean hasAttributeNS(String namespaceURI, String localName)
	                                     ^
  found   : @Initialized @NonNull String
  required: @Initialized @Nullable String
  Consequence: method in @Initialized @NonNull NodeTest
    @Initialized @NonNull boolean hasAttributeNS(@Initialized @NonNull NodeTest this, @Initialized @NonNull String p0, @Initialized @NonNull String p1) throws @Initialized @NonNull DOMException
  cannot override method in @Initialized @NonNull Element
    @Initialized @NonNull boolean hasAttributeNS(@Initialized @NonNull Element this, @Initialized @Nullable String p0, @Initialized @NonNull String p1) throws @Initialized @NonNull DOMException
../annotator/url1a41b8e9f2_mr1azl_INF345_tgz-pJ8-TestParserJ8/src/yyy/NodeTest.java:723: error: [return] incompatible types in return.
		return null;
		       ^
  type of expression: null (NullType)
  method return type: @Initialized @NonNull TypeInfo
../annotator/url1a41b8e9f2_mr1azl_INF345_tgz-pJ8-TestParserJ8/src/yyy/NodeTest.java:748: error: [override.param] Incompatible parameter type for namespaceURI.
	public void setIdAttributeNS(String namespaceURI, String localName,
	                                    ^
  found   : @Initialized @NonNull String
  required: @Initialized @Nullable String
  Consequence: method in @Initialized @NonNull NodeTest
    @NonNull void setIdAttributeNS(@Initialized @NonNull NodeTest this, @Initialized @NonNull String p0, @Initialized @NonNull String p1, @Initialized @NonNull boolean p2) throws @Initialized @NonNull DOMException
  cannot override method in @Initialized @NonNull Element
    @NonNull void setIdAttributeNS(@Initialized @NonNull Element this, @Initialized @Nullable String p0, @Initialized @NonNull String p1, @Initialized @NonNull boolean p2) throws @Initialized @NonNull DOMException
../annotator/url1a41b8e9f2_mr1azl_INF345_tgz-pJ8-TestParserJ8/src/yyy/NodeNameTest.java:27: error: [initialization.fields.uninitialized] the constructor does not initialize fields: namespaceURI
    public NodeNameTest(QName qname) {
           ^
../annotator/url1a41b8e9f2_mr1azl_INF345_tgz-pJ8-TestParserJ8/src/yyy/NodeNameTest.java:85: error: [return] incompatible types in return.
		return null;
		       ^
  type of expression: null (NullType)
  method return type: @Initialized @NonNull String
../annotator/url1a41b8e9f2_mr1azl_INF345_tgz-pJ8-TestParserJ8/src/yyy/NodeNameTest.java:97: error: [return] incompatible types in return.
		return null;
		       ^
  type of expression: null (NullType)
  method return type: @Initialized @NonNull String
../annotator/url1a41b8e9f2_mr1azl_INF345_tgz-pJ8-TestParserJ8/src/yyy/NodeNameTest.java:131: error: [return] incompatible types in return.
		return null;
		       ^
  type of expression: null (NullType)
  method return type: @Initialized @NonNull Node
../annotator/url1a41b8e9f2_mr1azl_INF345_tgz-pJ8-TestParserJ8/src/yyy/NodeNameTest.java:142: error: [return] incompatible types in return.
		return null;
		       ^
  type of expression: null (NullType)
  method return type: @Initialized @NonNull NodeList
../annotator/url1a41b8e9f2_mr1azl_INF345_tgz-pJ8-TestParserJ8/src/yyy/NodeNameTest.java:153: error: [return] incompatible types in return.
		return null;
		       ^
  type of expression: null (NullType)
  method return type: @Initialized @NonNull Node
../annotator/url1a41b8e9f2_mr1azl_INF345_tgz-pJ8-TestParserJ8/src/yyy/NodeNameTest.java:164: error: [return] incompatible types in return.
		return null;
		       ^
  type of expression: null (NullType)
  method return type: @Initialized @NonNull Node
../annotator/url1a41b8e9f2_mr1azl_INF345_tgz-pJ8-TestParserJ8/src/yyy/NodeNameTest.java:175: error: [return] incompatible types in return.
		return null;
		       ^
  type of expression: null (NullType)
  method return type: @Initialized @NonNull Node
../annotator/url1a41b8e9f2_mr1azl_INF345_tgz-pJ8-TestParserJ8/src/yyy/NodeNameTest.java:186: error: [return] incompatible types in return.
		return null;
		       ^
  type of expression: null (NullType)
  method return type: @Initialized @NonNull Node
../annotator/url1a41b8e9f2_mr1azl_INF345_tgz-pJ8-TestParserJ8/src/yyy/NodeNameTest.java:197: error: [return] incompatible types in return.
		return null;
		       ^
  type of expression: null (NullType)
  method return type: @Initialized @NonNull NamedNodeMap
../annotator/url1a41b8e9f2_mr1azl_INF345_tgz-pJ8-TestParserJ8/src/yyy/NodeNameTest.java:208: error: [return] incompatible types in return.
		return null;
		       ^
  type of expression: null (NullType)
  method return type: @Initialized @NonNull Document
../annotator/url1a41b8e9f2_mr1azl_INF345_tgz-pJ8-TestParserJ8/src/yyy/NodeNameTest.java:220: error: [override.param] Incompatible parameter type for refChild.
	public Node insertBefore(Node newChild, Node refChild) throws DOMException {
	                                             ^
  found   : @Initialized @NonNull Node
  required: @Initialized @Nullable Node
  Consequence: method in @Initialized @NonNull NodeNameTest
    @Initialized @NonNull Node insertBefore(@Initialized @NonNull NodeNameTest this, @Initialized @NonNull Node p0, @Initialized @NonNull Node p1) throws @Initialized @NonNull DOMException
  cannot override method in @Initialized @NonNull Node
    @Initialized @NonNull Node insertBefore(@Initialized @NonNull Node this, @Initialized @NonNull Node p0, @Initialized @Nullable Node p1) throws @Initialized @NonNull DOMException
../annotator/url1a41b8e9f2_mr1azl_INF345_tgz-pJ8-TestParserJ8/src/yyy/NodeNameTest.java:222: error: [return] incompatible types in return.
		return null;
		       ^
  type of expression: null (NullType)
  method return type: @Initialized @NonNull Node
../annotator/url1a41b8e9f2_mr1azl_INF345_tgz-pJ8-TestParserJ8/src/yyy/NodeNameTest.java:236: error: [return] incompatible types in return.
		return null;
		       ^
  type of expression: null (NullType)
  method return type: @Initialized @NonNull Node
../annotator/url1a41b8e9f2_mr1azl_INF345_tgz-pJ8-TestParserJ8/src/yyy/NodeNameTest.java:249: error: [return] incompatible types in return.
		return null;
		       ^
  type of expression: null (NullType)
  method return type: @Initialized @NonNull Node
../annotator/url1a41b8e9f2_mr1azl_INF345_tgz-pJ8-TestParserJ8/src/yyy/NodeNameTest.java:262: error: [return] incompatible types in return.
		return null;
		       ^
  type of expression: null (NullType)
  method return type: @Initialized @NonNull Node
../annotator/url1a41b8e9f2_mr1azl_INF345_tgz-pJ8-TestParserJ8/src/yyy/NodeNameTest.java:285: error: [return] incompatible types in return.
		return null;
		       ^
  type of expression: null (NullType)
  method return type: @Initialized @NonNull Node
../annotator/url1a41b8e9f2_mr1azl_INF345_tgz-pJ8-TestParserJ8/src/yyy/NodeNameTest.java:306: error: [override.param] Incompatible parameter type for version.
	public boolean isSupported(String feature, String version) {
	                                                  ^
  found   : @Initialized @NonNull String
  required: @Initialized @Nullable String
  Consequence: method in @Initialized @NonNull NodeNameTest
    @Initialized @NonNull boolean isSupported(@Initialized @NonNull NodeNameTest this, @Initialized @NonNull String p0, @Initialized @NonNull String p1)
  cannot override method in @Initialized @NonNull Node
    @Initialized @NonNull boolean isSupported(@Initialized @NonNull Node this, @Initialized @NonNull String p0, @Initialized @Nullable String p1)
../annotator/url1a41b8e9f2_mr1azl_INF345_tgz-pJ8-TestParserJ8/src/yyy/NodeNameTest.java:319: error: [return] incompatible types in return.
		return null;
		       ^
  type of expression: null (NullType)
  method return type: @Initialized @NonNull String
../annotator/url1a41b8e9f2_mr1azl_INF345_tgz-pJ8-TestParserJ8/src/yyy/NodeNameTest.java:329: error: [override.param] Incompatible parameter type for prefix.
	public void setPrefix(String prefix) throws DOMException {
	                             ^
  found   : @Initialized @NonNull String
  required: @Initialized @Nullable String
  Consequence: method in @Initialized @NonNull NodeNameTest
    @NonNull void setPrefix(@Initialized @NonNull NodeNameTest this, @Initialized @NonNull String p0) throws @Initialized @NonNull DOMException
  cannot override method in @Initialized @NonNull Node
    @NonNull void setPrefix(@Initialized @NonNull Node this, @Initialized @Nullable String p0) throws @Initialized @NonNull DOMException
../annotator/url1a41b8e9f2_mr1azl_INF345_tgz-pJ8-TestParserJ8/src/yyy/NodeNameTest.java:342: error: [return] incompatible types in return.
		return null;
		       ^
  type of expression: null (NullType)
  method return type: @Initialized @NonNull String
../annotator/url1a41b8e9f2_mr1azl_INF345_tgz-pJ8-TestParserJ8/src/yyy/NodeNameTest.java:364: error: [return] incompatible types in return.
		return null;
		       ^
  type of expression: null (NullType)
  method return type: @Initialized @NonNull String
../annotator/url1a41b8e9f2_mr1azl_INF345_tgz-pJ8-TestParserJ8/src/yyy/NodeNameTest.java:389: error: [return] incompatible types in return.
		return null;
		       ^
  type of expression: null (NullType)
  method return type: @Initialized @NonNull String
../annotator/url1a41b8e9f2_mr1azl_INF345_tgz-pJ8-TestParserJ8/src/yyy/NodeNameTest.java:423: error: [override.param] Incompatible parameter type for namespaceURI.
	public String lookupPrefix(String namespaceURI) {
	                                  ^
  found   : @Initialized @NonNull String
  required: @Initialized @Nullable String
  Consequence: method in @Initialized @NonNull NodeNameTest
    @Initialized @NonNull String lookupPrefix(@Initialized @NonNull NodeNameTest this, @Initialized @NonNull String p0)
  cannot override method in @Initialized @NonNull Node
    @Initialized @Nullable String lookupPrefix(@Initialized @NonNull Node this, @Initialized @Nullable String p0)
../annotator/url1a41b8e9f2_mr1azl_INF345_tgz-pJ8-TestParserJ8/src/yyy/NodeNameTest.java:425: error: [return] incompatible types in return.
		return null;
		       ^
  type of expression: null (NullType)
  method return type: @Initialized @NonNull String
../annotator/url1a41b8e9f2_mr1azl_INF345_tgz-pJ8-TestParserJ8/src/yyy/NodeNameTest.java:435: error: [override.param] Incompatible parameter type for namespaceURI.
	public boolean isDefaultNamespace(String namespaceURI) {
	                                         ^
  found   : @Initialized @NonNull String
  required: @Initialized @Nullable String
  Consequence: method in @Initialized @NonNull NodeNameTest
    @Initialized @NonNull boolean isDefaultNamespace(@Initialized @NonNull NodeNameTest this, @Initialized @NonNull String p0)
  cannot override method in @Initialized @NonNull Node
    @Initialized @NonNull boolean isDefaultNamespace(@Initialized @NonNull Node this, @Initialized @Nullable String p0)
../annotator/url1a41b8e9f2_mr1azl_INF345_tgz-pJ8-TestParserJ8/src/yyy/NodeNameTest.java:447: error: [override.param] Incompatible parameter type for prefix.
	public String lookupNamespaceURI(String prefix) {
	                                        ^
  found   : @Initialized @NonNull String
  required: @Initialized @Nullable String
  Consequence: method in @Initialized @NonNull NodeNameTest
    @Initialized @NonNull String lookupNamespaceURI(@Initialized @NonNull NodeNameTest this, @Initialized @NonNull String p0)
  cannot override method in @Initialized @NonNull Node
    @Initialized @Nullable String lookupNamespaceURI(@Initialized @NonNull Node this, @Initialized @Nullable String p0)
../annotator/url1a41b8e9f2_mr1azl_INF345_tgz-pJ8-TestParserJ8/src/yyy/NodeNameTest.java:449: error: [return] incompatible types in return.
		return null;
		       ^
  type of expression: null (NullType)
  method return type: @Initialized @NonNull String
../annotator/url1a41b8e9f2_mr1azl_INF345_tgz-pJ8-TestParserJ8/src/yyy/NodeNameTest.java:472: error: [override.param] Incompatible parameter type for version.
	public Object getFeature(String feature, String version) {
	                                                ^
  found   : @Initialized @NonNull String
  required: @Initialized @Nullable String
  Consequence: method in @Initialized @NonNull NodeNameTest
    @Initialized @NonNull Object getFeature(@Initialized @NonNull NodeNameTest this, @Initialized @NonNull String p0, @Initialized @NonNull String p1)
  cannot override method in @Initialized @NonNull Node
    @Initialized @Nullable Object getFeature(@Initialized @NonNull Node this, @Initialized @NonNull String p0, @Initialized @Nullable String p1)
../annotator/url1a41b8e9f2_mr1azl_INF345_tgz-pJ8-TestParserJ8/src/yyy/NodeNameTest.java:474: error: [return] incompatible types in return.
		return null;
		       ^
  type of expression: null (NullType)
  method return type: @Initialized @NonNull Object
../annotator/url1a41b8e9f2_mr1azl_INF345_tgz-pJ8-TestParserJ8/src/yyy/NodeNameTest.java:486: error: [override.param] Incompatible parameter type for data.
	public Object setUserData(String key, Object data, UserDataHandler handler) {
	                                             ^
  found   : @Initialized @NonNull Object
  required: @Initialized @Nullable Object
  Consequence: method in @Initialized @NonNull NodeNameTest
    @Initialized @NonNull Object setUserData(@Initialized @NonNull NodeNameTest this, @Initialized @NonNull String p0, @Initialized @NonNull Object p1, @Initialized @NonNull UserDataHandler p2)
  cannot override method in @Initialized @NonNull Node
    @Initialized @Nullable Object setUserData(@Initialized @NonNull Node this, @Initialized @NonNull String p0, @Initialized @Nullable Object p1, @Initialized @Nullable UserDataHandler p2)
../annotator/url1a41b8e9f2_mr1azl_INF345_tgz-pJ8-TestParserJ8/src/yyy/NodeNameTest.java:486: error: [override.param] Incompatible parameter type for handler.
	public Object setUserData(String key, Object data, UserDataHandler handler) {
	                                                                   ^
  found   : @Initialized @NonNull UserDataHandler
  required: @Initialized @Nullable UserDataHandler
  Consequence: method in @Initialized @NonNull NodeNameTest
    @Initialized @NonNull Object setUserData(@Initialized @NonNull NodeNameTest this, @Initialized @NonNull String p0, @Initialized @NonNull Object p1, @Initialized @NonNull UserDataHandler p2)
  cannot override method in @Initialized @NonNull Node
    @Initialized @Nullable Object setUserData(@Initialized @NonNull Node this, @Initialized @NonNull String p0, @Initialized @Nullable Object p1, @Initialized @Nullable UserDataHandler p2)
../annotator/url1a41b8e9f2_mr1azl_INF345_tgz-pJ8-TestParserJ8/src/yyy/NodeNameTest.java:488: error: [return] incompatible types in return.
		return null;
		       ^
  type of expression: null (NullType)
  method return type: @Initialized @NonNull Object
../annotator/url1a41b8e9f2_mr1azl_INF345_tgz-pJ8-TestParserJ8/src/yyy/NodeNameTest.java:500: error: [return] incompatible types in return.
		return null;
		       ^
  type of expression: null (NullType)
  method return type: @Initialized @NonNull Object
../annotator/url1a41b8e9f2_mr1azl_INF345_tgz-pJ8-TestParserJ8/src/yyy/NodeNameTest.java:511: error: [return] incompatible types in return.
		return null;
		       ^
  type of expression: null (NullType)
  method return type: @Initialized @NonNull String
../annotator/url1a41b8e9f2_mr1azl_INF345_tgz-pJ8-TestParserJ8/src/yyy/NodeNameTest.java:523: error: [return] incompatible types in return.
		return null;
		       ^
  type of expression: null (NullType)
  method return type: @Initialized @NonNull String
../annotator/url1a41b8e9f2_mr1azl_INF345_tgz-pJ8-TestParserJ8/src/yyy/NodeNameTest.java:560: error: [return] incompatible types in return.
		return null;
		       ^
  type of expression: null (NullType)
  method return type: @Initialized @NonNull Attr
../annotator/url1a41b8e9f2_mr1azl_INF345_tgz-pJ8-TestParserJ8/src/yyy/NodeNameTest.java:573: error: [return] incompatible types in return.
		return null;
		       ^
  type of expression: null (NullType)
  method return type: @Initialized @NonNull Attr
../annotator/url1a41b8e9f2_mr1azl_INF345_tgz-pJ8-TestParserJ8/src/yyy/NodeNameTest.java:586: error: [return] incompatible types in return.
		return null;
		       ^
  type of expression: null (NullType)
  method return type: @Initialized @NonNull Attr
../annotator/url1a41b8e9f2_mr1azl_INF345_tgz-pJ8-TestParserJ8/src/yyy/NodeNameTest.java:598: error: [return] incompatible types in return.
		return null;
		       ^
  type of expression: null (NullType)
  method return type: @Initialized @NonNull NodeList
../annotator/url1a41b8e9f2_mr1azl_INF345_tgz-pJ8-TestParserJ8/src/yyy/NodeNameTest.java:610: error: [override.param] Incompatible parameter type for namespaceURI.
	public String getAttributeNS(String namespaceURI, String localName)
	                                    ^
  found   : @Initialized @NonNull String
  required: @Initialized @Nullable String
  Consequence: method in @Initialized @NonNull NodeNameTest
    @Initialized @NonNull String getAttributeNS(@Initialized @NonNull NodeNameTest this, @Initialized @NonNull String p0, @Initialized @NonNull String p1) throws @Initialized @NonNull DOMException
  cannot override method in @Initialized @NonNull Element
    @Initialized @NonNull String getAttributeNS(@Initialized @NonNull Element this, @Initialized @Nullable String p0, @Initialized @NonNull String p1) throws @Initialized @NonNull DOMException
../annotator/url1a41b8e9f2_mr1azl_INF345_tgz-pJ8-TestParserJ8/src/yyy/NodeNameTest.java:613: error: [return] incompatible types in return.
		return null;
		       ^
  type of expression: null (NullType)
  method return type: @Initialized @NonNull String
../annotator/url1a41b8e9f2_mr1azl_INF345_tgz-pJ8-TestParserJ8/src/yyy/NodeNameTest.java:625: error: [override.param] Incompatible parameter type for namespaceURI.
	public void setAttributeNS(String namespaceURI, String qualifiedName,
	                                  ^
  found   : @Initialized @NonNull String
  required: @Initialized @Nullable String
  Consequence: method in @Initialized @NonNull NodeNameTest
    @NonNull void setAttributeNS(@Initialized @NonNull NodeNameTest this, @Initialized @NonNull String p0, @Initialized @NonNull String p1, @Initialized @NonNull String p2) throws @Initialized @NonNull DOMException
  cannot override method in @Initialized @NonNull Element
    @NonNull void setAttributeNS(@Initialized @NonNull Element this, @Initialized @Nullable String p0, @Initialized @NonNull String p1, @Initialized @NonNull String p2) throws @Initialized @NonNull DOMException
../annotator/url1a41b8e9f2_mr1azl_INF345_tgz-pJ8-TestParserJ8/src/yyy/NodeNameTest.java:639: error: [override.param] Incompatible parameter type for namespaceURI.
	public void removeAttributeNS(String namespaceURI, String localName)
	                                     ^
  found   : @Initialized @NonNull String
  required: @Initialized @Nullable String
  Consequence: method in @Initialized @NonNull NodeNameTest
    @NonNull void removeAttributeNS(@Initialized @NonNull NodeNameTest this, @Initialized @NonNull String p0, @Initialized @NonNull String p1) throws @Initialized @NonNull DOMException
  cannot override method in @Initialized @NonNull Element
    @NonNull void removeAttributeNS(@Initialized @NonNull Element this, @Initialized @Nullable String p0, @Initialized @NonNull String p1) throws @Initialized @NonNull DOMException
../annotator/url1a41b8e9f2_mr1azl_INF345_tgz-pJ8-TestParserJ8/src/yyy/NodeNameTest.java:654: error: [override.param] Incompatible parameter type for namespaceURI.
	public Attr getAttributeNodeNS(String namespaceURI, String localName)
	                                      ^
  found   : @Initialized @NonNull String
  required: @Initialized @Nullable String
  Consequence: method in @Initialized @NonNull NodeNameTest
    @Initialized @NonNull Attr getAttributeNodeNS(@Initialized @NonNull NodeNameTest this, @Initialized @NonNull String p0, @Initialized @NonNull String p1) throws @Initialized @NonNull DOMException
  cannot override method in @Initialized @NonNull Element
    @Initialized @Nullable Attr getAttributeNodeNS(@Initialized @NonNull Element this, @Initialized @Nullable String p0, @Initialized @NonNull String p1) throws @Initialized @NonNull DOMException
../annotator/url1a41b8e9f2_mr1azl_INF345_tgz-pJ8-TestParserJ8/src/yyy/NodeNameTest.java:657: error: [return] incompatible types in return.
		return null;
		       ^
  type of expression: null (NullType)
  method return type: @Initialized @NonNull Attr
../annotator/url1a41b8e9f2_mr1azl_INF345_tgz-pJ8-TestParserJ8/src/yyy/NodeNameTest.java:670: error: [return] incompatible types in return.
		return null;
		       ^
  type of expression: null (NullType)
  method return type: @Initialized @NonNull Attr
../annotator/url1a41b8e9f2_mr1azl_INF345_tgz-pJ8-TestParserJ8/src/yyy/NodeNameTest.java:682: error: [override.param] Incompatible parameter type for namespaceURI.
	public NodeList getElementsByTagNameNS(String namespaceURI, String localName)
	                                              ^
  found   : @Initialized @NonNull String
  required: @Initialized @Nullable String
  Consequence: method in @Initialized @NonNull NodeNameTest
    @Initialized @NonNull NodeList getElementsByTagNameNS(@Initialized @NonNull NodeNameTest this, @Initialized @NonNull String p0, @Initialized @NonNull String p1) throws @Initialized @NonNull DOMException
  cannot override method in @Initialized @NonNull Element
    @Initialized @NonNull NodeList getElementsByTagNameNS(@Initialized @NonNull Element this, @Initialized @Nullable String p0, @Initialized @NonNull String p1) throws @Initialized @NonNull DOMException
../annotator/url1a41b8e9f2_mr1azl_INF345_tgz-pJ8-TestParserJ8/src/yyy/NodeNameTest.java:685: error: [return] incompatible types in return.
		return null;
		       ^
  type of expression: null (NullType)
  method return type: @Initialized @NonNull NodeList
../annotator/url1a41b8e9f2_mr1azl_INF345_tgz-pJ8-TestParserJ8/src/yyy/NodeNameTest.java:709: error: [override.param] Incompatible parameter type for namespaceURI.
	public boolean hasAttributeNS(String namespaceURI, String localName)
	                                     ^
  found   : @Initialized @NonNull String
  required: @Initialized @Nullable String
  Consequence: method in @Initialized @NonNull NodeNameTest
    @Initialized @NonNull boolean hasAttributeNS(@Initialized @NonNull NodeNameTest this, @Initialized @NonNull String p0, @Initialized @NonNull String p1) throws @Initialized @NonNull DOMException
  cannot override method in @Initialized @NonNull Element
    @Initialized @NonNull boolean hasAttributeNS(@Initialized @NonNull Element this, @Initialized @Nullable String p0, @Initialized @NonNull String p1) throws @Initialized @NonNull DOMException
../annotator/url1a41b8e9f2_mr1azl_INF345_tgz-pJ8-TestParserJ8/src/yyy/NodeNameTest.java:723: error: [return] incompatible types in return.
		return null;
		       ^
  type of expression: null (NullType)
  method return type: @Initialized @NonNull TypeInfo
../annotator/url1a41b8e9f2_mr1azl_INF345_tgz-pJ8-TestParserJ8/src/yyy/NodeNameTest.java:748: error: [override.param] Incompatible parameter type for namespaceURI.
	public void setIdAttributeNS(String namespaceURI, String localName,
	                                    ^
  found   : @Initialized @NonNull String
  required: @Initialized @Nullable String
  Consequence: method in @Initialized @NonNull NodeNameTest
    @NonNull void setIdAttributeNS(@Initialized @NonNull NodeNameTest this, @Initialized @NonNull String p0, @Initialized @NonNull String p1, @Initialized @NonNull boolean p2) throws @Initialized @NonNull DOMException
  cannot override method in @Initialized @NonNull Element
    @NonNull void setIdAttributeNS(@Initialized @NonNull Element this, @Initialized @Nullable String p0, @Initialized @NonNull String p1, @Initialized @NonNull boolean p2) throws @Initialized @NonNull DOMException
../annotator/url1a41b8e9f2_mr1azl_INF345_tgz-pJ8-TestParserJ8/src/yyy/NodeTypeTest.java:93: error: [return] incompatible types in return.
		return null;
		       ^
  type of expression: null (NullType)
  method return type: @Initialized @NonNull String
../annotator/url1a41b8e9f2_mr1azl_INF345_tgz-pJ8-TestParserJ8/src/yyy/NodeTypeTest.java:129: error: [return] incompatible types in return.
		return null;
		       ^
  type of expression: null (NullType)
  method return type: @Initialized @NonNull Node
../annotator/url1a41b8e9f2_mr1azl_INF345_tgz-pJ8-TestParserJ8/src/yyy/NodeTypeTest.java:140: error: [return] incompatible types in return.
		return null;
		       ^
  type of expression: null (NullType)
  method return type: @Initialized @NonNull NodeList
../annotator/url1a41b8e9f2_mr1azl_INF345_tgz-pJ8-TestParserJ8/src/yyy/NodeTypeTest.java:151: error: [return] incompatible types in return.
		return null;
		       ^
  type of expression: null (NullType)
  method return type: @Initialized @NonNull Node
../annotator/url1a41b8e9f2_mr1azl_INF345_tgz-pJ8-TestParserJ8/src/yyy/NodeTypeTest.java:162: error: [return] incompatible types in return.
		return null;
		       ^
  type of expression: null (NullType)
  method return type: @Initialized @NonNull Node
../annotator/url1a41b8e9f2_mr1azl_INF345_tgz-pJ8-TestParserJ8/src/yyy/NodeTypeTest.java:173: error: [return] incompatible types in return.
		return null;
		       ^
  type of expression: null (NullType)
  method return type: @Initialized @NonNull Node
../annotator/url1a41b8e9f2_mr1azl_INF345_tgz-pJ8-TestParserJ8/src/yyy/NodeTypeTest.java:184: error: [return] incompatible types in return.
		return null;
		       ^
  type of expression: null (NullType)
  method return type: @Initialized @NonNull Node
../annotator/url1a41b8e9f2_mr1azl_INF345_tgz-pJ8-TestParserJ8/src/yyy/NodeTypeTest.java:195: error: [return] incompatible types in return.
		return null;
		       ^
  type of expression: null (NullType)
  method return type: @Initialized @NonNull NamedNodeMap
../annotator/url1a41b8e9f2_mr1azl_INF345_tgz-pJ8-TestParserJ8/src/yyy/NodeTypeTest.java:206: error: [return] incompatible types in return.
		return null;
		       ^
  type of expression: null (NullType)
  method return type: @Initialized @NonNull Document
../annotator/url1a41b8e9f2_mr1azl_INF345_tgz-pJ8-TestParserJ8/src/yyy/NodeTypeTest.java:218: error: [override.param] Incompatible parameter type for refChild.
	public Node insertBefore(Node newChild, Node refChild) throws DOMException {
	                                             ^
  found   : @Initialized @NonNull Node
  required: @Initialized @Nullable Node
  Consequence: method in @Initialized @NonNull NodeTypeTest
    @Initialized @NonNull Node insertBefore(@Initialized @NonNull NodeTypeTest this, @Initialized @NonNull Node p0, @Initialized @NonNull Node p1) throws @Initialized @NonNull DOMException
  cannot override method in @Initialized @NonNull Node
    @Initialized @NonNull Node insertBefore(@Initialized @NonNull Node this, @Initialized @NonNull Node p0, @Initialized @Nullable Node p1) throws @Initialized @NonNull DOMException
../annotator/url1a41b8e9f2_mr1azl_INF345_tgz-pJ8-TestParserJ8/src/yyy/NodeTypeTest.java:220: error: [return] incompatible types in return.
		return null;
		       ^
  type of expression: null (NullType)
  method return type: @Initialized @NonNull Node
../annotator/url1a41b8e9f2_mr1azl_INF345_tgz-pJ8-TestParserJ8/src/yyy/NodeTypeTest.java:234: error: [return] incompatible types in return.
		return null;
		       ^
  type of expression: null (NullType)
  method return type: @Initialized @NonNull Node
../annotator/url1a41b8e9f2_mr1azl_INF345_tgz-pJ8-TestParserJ8/src/yyy/NodeTypeTest.java:247: error: [return] incompatible types in return.
		return null;
		       ^
  type of expression: null (NullType)
  method return type: @Initialized @NonNull Node
../annotator/url1a41b8e9f2_mr1azl_INF345_tgz-pJ8-TestParserJ8/src/yyy/NodeTypeTest.java:260: error: [return] incompatible types in return.
		return null;
		       ^
  type of expression: null (NullType)
  method return type: @Initialized @NonNull Node
../annotator/url1a41b8e9f2_mr1azl_INF345_tgz-pJ8-TestParserJ8/src/yyy/NodeTypeTest.java:283: error: [return] incompatible types in return.
		return null;
		       ^
  type of expression: null (NullType)
  method return type: @Initialized @NonNull Node
../annotator/url1a41b8e9f2_mr1azl_INF345_tgz-pJ8-TestParserJ8/src/yyy/NodeTypeTest.java:304: error: [override.param] Incompatible parameter type for version.
	public boolean isSupported(String feature, String version) {
	                                                  ^
  found   : @Initialized @NonNull String
  required: @Initialized @Nullable String
  Consequence: method in @Initialized @NonNull NodeTypeTest
    @Initialized @NonNull boolean isSupported(@Initialized @NonNull NodeTypeTest this, @Initialized @NonNull String p0, @Initialized @NonNull String p1)
  cannot override method in @Initialized @NonNull Node
    @Initialized @NonNull boolean isSupported(@Initialized @NonNull Node this, @Initialized @NonNull String p0, @Initialized @Nullable String p1)
../annotator/url1a41b8e9f2_mr1azl_INF345_tgz-pJ8-TestParserJ8/src/yyy/NodeTypeTest.java:317: error: [return] incompatible types in return.
		return null;
		       ^
  type of expression: null (NullType)
  method return type: @Initialized @NonNull String
../annotator/url1a41b8e9f2_mr1azl_INF345_tgz-pJ8-TestParserJ8/src/yyy/NodeTypeTest.java:328: error: [return] incompatible types in return.
		return null;
		       ^
  type of expression: null (NullType)
  method return type: @Initialized @NonNull String
../annotator/url1a41b8e9f2_mr1azl_INF345_tgz-pJ8-TestParserJ8/src/yyy/NodeTypeTest.java:338: error: [override.param] Incompatible parameter type for prefix.
	public void setPrefix(String prefix) throws DOMException {
	                             ^
  found   : @Initialized @NonNull String
  required: @Initialized @Nullable String
  Consequence: method in @Initialized @NonNull NodeTypeTest
    @NonNull void setPrefix(@Initialized @NonNull NodeTypeTest this, @Initialized @NonNull String p0) throws @Initialized @NonNull DOMException
  cannot override method in @Initialized @NonNull Node
    @NonNull void setPrefix(@Initialized @NonNull Node this, @Initialized @Nullable String p0) throws @Initialized @NonNull DOMException
../annotator/url1a41b8e9f2_mr1azl_INF345_tgz-pJ8-TestParserJ8/src/yyy/NodeTypeTest.java:351: error: [return] incompatible types in return.
		return null;
		       ^
  type of expression: null (NullType)
  method return type: @Initialized @NonNull String
../annotator/url1a41b8e9f2_mr1azl_INF345_tgz-pJ8-TestParserJ8/src/yyy/NodeTypeTest.java:373: error: [return] incompatible types in return.
		return null;
		       ^
  type of expression: null (NullType)
  method return type: @Initialized @NonNull String
../annotator/url1a41b8e9f2_mr1azl_INF345_tgz-pJ8-TestParserJ8/src/yyy/NodeTypeTest.java:398: error: [return] incompatible types in return.
		return null;
		       ^
  type of expression: null (NullType)
  method return type: @Initialized @NonNull String
../annotator/url1a41b8e9f2_mr1azl_INF345_tgz-pJ8-TestParserJ8/src/yyy/NodeTypeTest.java:432: error: [override.param] Incompatible parameter type for namespaceURI.
	public String lookupPrefix(String namespaceURI) {
	                                  ^
  found   : @Initialized @NonNull String
  required: @Initialized @Nullable String
  Consequence: method in @Initialized @NonNull NodeTypeTest
    @Initialized @NonNull String lookupPrefix(@Initialized @NonNull NodeTypeTest this, @Initialized @NonNull String p0)
  cannot override method in @Initialized @NonNull Node
    @Initialized @Nullable String lookupPrefix(@Initialized @NonNull Node this, @Initialized @Nullable String p0)
../annotator/url1a41b8e9f2_mr1azl_INF345_tgz-pJ8-TestParserJ8/src/yyy/NodeTypeTest.java:434: error: [return] incompatible types in return.
		return null;
		       ^
  type of expression: null (NullType)
  method return type: @Initialized @NonNull String
../annotator/url1a41b8e9f2_mr1azl_INF345_tgz-pJ8-TestParserJ8/src/yyy/NodeTypeTest.java:444: error: [override.param] Incompatible parameter type for namespaceURI.
	public boolean isDefaultNamespace(String namespaceURI) {
	                                         ^
  found   : @Initialized @NonNull String
  required: @Initialized @Nullable String
  Consequence: method in @Initialized @NonNull NodeTypeTest
    @Initialized @NonNull boolean isDefaultNamespace(@Initialized @NonNull NodeTypeTest this, @Initialized @NonNull String p0)
  cannot override method in @Initialized @NonNull Node
    @Initialized @NonNull boolean isDefaultNamespace(@Initialized @NonNull Node this, @Initialized @Nullable String p0)
../annotator/url1a41b8e9f2_mr1azl_INF345_tgz-pJ8-TestParserJ8/src/yyy/NodeTypeTest.java:456: error: [override.param] Incompatible parameter type for prefix.
	public String lookupNamespaceURI(String prefix) {
	                                        ^
  found   : @Initialized @NonNull String
  required: @Initialized @Nullable String
  Consequence: method in @Initialized @NonNull NodeTypeTest
    @Initialized @NonNull String lookupNamespaceURI(@Initialized @NonNull NodeTypeTest this, @Initialized @NonNull String p0)
  cannot override method in @Initialized @NonNull Node
    @Initialized @Nullable String lookupNamespaceURI(@Initialized @NonNull Node this, @Initialized @Nullable String p0)
../annotator/url1a41b8e9f2_mr1azl_INF345_tgz-pJ8-TestParserJ8/src/yyy/NodeTypeTest.java:458: error: [return] incompatible types in return.
		return null;
		       ^
  type of expression: null (NullType)
  method return type: @Initialized @NonNull String
../annotator/url1a41b8e9f2_mr1azl_INF345_tgz-pJ8-TestParserJ8/src/yyy/NodeTypeTest.java:481: error: [override.param] Incompatible parameter type for version.
	public Object getFeature(String feature, String version) {
	                                                ^
  found   : @Initialized @NonNull String
  required: @Initialized @Nullable String
  Consequence: method in @Initialized @NonNull NodeTypeTest
    @Initialized @NonNull Object getFeature(@Initialized @NonNull NodeTypeTest this, @Initialized @NonNull String p0, @Initialized @NonNull String p1)
  cannot override method in @Initialized @NonNull Node
    @Initialized @Nullable Object getFeature(@Initialized @NonNull Node this, @Initialized @NonNull String p0, @Initialized @Nullable String p1)
../annotator/url1a41b8e9f2_mr1azl_INF345_tgz-pJ8-TestParserJ8/src/yyy/NodeTypeTest.java:483: error: [return] incompatible types in return.
		return null;
		       ^
  type of expression: null (NullType)
  method return type: @Initialized @NonNull Object
../annotator/url1a41b8e9f2_mr1azl_INF345_tgz-pJ8-TestParserJ8/src/yyy/NodeTypeTest.java:495: error: [override.param] Incompatible parameter type for data.
	public Object setUserData(String key, Object data, UserDataHandler handler) {
	                                             ^
  found   : @Initialized @NonNull Object
  required: @Initialized @Nullable Object
  Consequence: method in @Initialized @NonNull NodeTypeTest
    @Initialized @NonNull Object setUserData(@Initialized @NonNull NodeTypeTest this, @Initialized @NonNull String p0, @Initialized @NonNull Object p1, @Initialized @NonNull UserDataHandler p2)
  cannot override method in @Initialized @NonNull Node
    @Initialized @Nullable Object setUserData(@Initialized @NonNull Node this, @Initialized @NonNull String p0, @Initialized @Nullable Object p1, @Initialized @Nullable UserDataHandler p2)
../annotator/url1a41b8e9f2_mr1azl_INF345_tgz-pJ8-TestParserJ8/src/yyy/NodeTypeTest.java:495: error: [override.param] Incompatible parameter type for handler.
	public Object setUserData(String key, Object data, UserDataHandler handler) {
	                                                                   ^
  found   : @Initialized @NonNull UserDataHandler
  required: @Initialized @Nullable UserDataHandler
  Consequence: method in @Initialized @NonNull NodeTypeTest
    @Initialized @NonNull Object setUserData(@Initialized @NonNull NodeTypeTest this, @Initialized @NonNull String p0, @Initialized @NonNull Object p1, @Initialized @NonNull UserDataHandler p2)
  cannot override method in @Initialized @NonNull Node
    @Initialized @Nullable Object setUserData(@Initialized @NonNull Node this, @Initialized @NonNull String p0, @Initialized @Nullable Object p1, @Initialized @Nullable UserDataHandler p2)
../annotator/url1a41b8e9f2_mr1azl_INF345_tgz-pJ8-TestParserJ8/src/yyy/NodeTypeTest.java:497: error: [return] incompatible types in return.
		return null;
		       ^
  type of expression: null (NullType)
  method return type: @Initialized @NonNull Object
../annotator/url1a41b8e9f2_mr1azl_INF345_tgz-pJ8-TestParserJ8/src/yyy/NodeTypeTest.java:509: error: [return] incompatible types in return.
		return null;
		       ^
  type of expression: null (NullType)
  method return type: @Initialized @NonNull Object
../annotator/url1a41b8e9f2_mr1azl_INF345_tgz-pJ8-TestParserJ8/src/yyy/NodeTypeTest.java:520: error: [return] incompatible types in return.
		return null;
		       ^
  type of expression: null (NullType)
  method return type: @Initialized @NonNull String
../annotator/url1a41b8e9f2_mr1azl_INF345_tgz-pJ8-TestParserJ8/src/yyy/NodeTypeTest.java:532: error: [return] incompatible types in return.
		return null;
		       ^
  type of expression: null (NullType)
  method return type: @Initialized @NonNull String
../annotator/url1a41b8e9f2_mr1azl_INF345_tgz-pJ8-TestParserJ8/src/yyy/NodeTypeTest.java:569: error: [return] incompatible types in return.
		return null;
		       ^
  type of expression: null (NullType)
  method return type: @Initialized @NonNull Attr
../annotator/url1a41b8e9f2_mr1azl_INF345_tgz-pJ8-TestParserJ8/src/yyy/NodeTypeTest.java:582: error: [return] incompatible types in return.
		return null;
		       ^
  type of expression: null (NullType)
  method return type: @Initialized @NonNull Attr
../annotator/url1a41b8e9f2_mr1azl_INF345_tgz-pJ8-TestParserJ8/src/yyy/NodeTypeTest.java:595: error: [return] incompatible types in return.
		return null;
		       ^
  type of expression: null (NullType)
  method return type: @Initialized @NonNull Attr
../annotator/url1a41b8e9f2_mr1azl_INF345_tgz-pJ8-TestParserJ8/src/yyy/NodeTypeTest.java:607: error: [return] incompatible types in return.
		return null;
		       ^
  type of expression: null (NullType)
  method return type: @Initialized @NonNull NodeList
../annotator/url1a41b8e9f2_mr1azl_INF345_tgz-pJ8-TestParserJ8/src/yyy/NodeTypeTest.java:619: error: [override.param] Incompatible parameter type for namespaceURI.
	public String getAttributeNS(String namespaceURI, String localName)
	                                    ^
  found   : @Initialized @NonNull String
  required: @Initialized @Nullable String
  Consequence: method in @Initialized @NonNull NodeTypeTest
    @Initialized @NonNull String getAttributeNS(@Initialized @NonNull NodeTypeTest this, @Initialized @NonNull String p0, @Initialized @NonNull String p1) throws @Initialized @NonNull DOMException
  cannot override method in @Initialized @NonNull Element
    @Initialized @NonNull String getAttributeNS(@Initialized @NonNull Element this, @Initialized @Nullable String p0, @Initialized @NonNull String p1) throws @Initialized @NonNull DOMException
../annotator/url1a41b8e9f2_mr1azl_INF345_tgz-pJ8-TestParserJ8/src/yyy/NodeTypeTest.java:622: error: [return] incompatible types in return.
		return null;
		       ^
  type of expression: null (NullType)
  method return type: @Initialized @NonNull String
../annotator/url1a41b8e9f2_mr1azl_INF345_tgz-pJ8-TestParserJ8/src/yyy/NodeTypeTest.java:634: error: [override.param] Incompatible parameter type for namespaceURI.
	public void setAttributeNS(String namespaceURI, String qualifiedName,
	                                  ^
  found   : @Initialized @NonNull String
  required: @Initialized @Nullable String
  Consequence: method in @Initialized @NonNull NodeTypeTest
    @NonNull void setAttributeNS(@Initialized @NonNull NodeTypeTest this, @Initialized @NonNull String p0, @Initialized @NonNull String p1, @Initialized @NonNull String p2) throws @Initialized @NonNull DOMException
  cannot override method in @Initialized @NonNull Element
    @NonNull void setAttributeNS(@Initialized @NonNull Element this, @Initialized @Nullable String p0, @Initialized @NonNull String p1, @Initialized @NonNull String p2) throws @Initialized @NonNull DOMException
../annotator/url1a41b8e9f2_mr1azl_INF345_tgz-pJ8-TestParserJ8/src/yyy/NodeTypeTest.java:648: error: [override.param] Incompatible parameter type for namespaceURI.
	public void removeAttributeNS(String namespaceURI, String localName)
	                                     ^
  found   : @Initialized @NonNull String
  required: @Initialized @Nullable String
  Consequence: method in @Initialized @NonNull NodeTypeTest
    @NonNull void removeAttributeNS(@Initialized @NonNull NodeTypeTest this, @Initialized @NonNull String p0, @Initialized @NonNull String p1) throws @Initialized @NonNull DOMException
  cannot override method in @Initialized @NonNull Element
    @NonNull void removeAttributeNS(@Initialized @NonNull Element this, @Initialized @Nullable String p0, @Initialized @NonNull String p1) throws @Initialized @NonNull DOMException
../annotator/url1a41b8e9f2_mr1azl_INF345_tgz-pJ8-TestParserJ8/src/yyy/NodeTypeTest.java:663: error: [override.param] Incompatible parameter type for namespaceURI.
	public Attr getAttributeNodeNS(String namespaceURI, String localName)
	                                      ^
  found   : @Initialized @NonNull String
  required: @Initialized @Nullable String
  Consequence: method in @Initialized @NonNull NodeTypeTest
    @Initialized @NonNull Attr getAttributeNodeNS(@Initialized @NonNull NodeTypeTest this, @Initialized @NonNull String p0, @Initialized @NonNull String p1) throws @Initialized @NonNull DOMException
  cannot override method in @Initialized @NonNull Element
    @Initialized @Nullable Attr getAttributeNodeNS(@Initialized @NonNull Element this, @Initialized @Nullable String p0, @Initialized @NonNull String p1) throws @Initialized @NonNull DOMException
../annotator/url1a41b8e9f2_mr1azl_INF345_tgz-pJ8-TestParserJ8/src/yyy/NodeTypeTest.java:666: error: [return] incompatible types in return.
		return null;
		       ^
  type of expression: null (NullType)
  method return type: @Initialized @NonNull Attr
../annotator/url1a41b8e9f2_mr1azl_INF345_tgz-pJ8-TestParserJ8/src/yyy/NodeTypeTest.java:679: error: [return] incompatible types in return.
		return null;
		       ^
  type of expression: null (NullType)
  method return type: @Initialized @NonNull Attr
../annotator/url1a41b8e9f2_mr1azl_INF345_tgz-pJ8-TestParserJ8/src/yyy/NodeTypeTest.java:691: error: [override.param] Incompatible parameter type for namespaceURI.
	public NodeList getElementsByTagNameNS(String namespaceURI, String localName)
	                                              ^
  found   : @Initialized @NonNull String
  required: @Initialized @Nullable String
  Consequence: method in @Initialized @NonNull NodeTypeTest
    @Initialized @NonNull NodeList getElementsByTagNameNS(@Initialized @NonNull NodeTypeTest this, @Initialized @NonNull String p0, @Initialized @NonNull String p1) throws @Initialized @NonNull DOMException
  cannot override method in @Initialized @NonNull Element
    @Initialized @NonNull NodeList getElementsByTagNameNS(@Initialized @NonNull Element this, @Initialized @Nullable String p0, @Initialized @NonNull String p1) throws @Initialized @NonNull DOMException
../annotator/url1a41b8e9f2_mr1azl_INF345_tgz-pJ8-TestParserJ8/src/yyy/NodeTypeTest.java:694: error: [return] incompatible types in return.
		return null;
		       ^
  type of expression: null (NullType)
  method return type: @Initialized @NonNull NodeList
../annotator/url1a41b8e9f2_mr1azl_INF345_tgz-pJ8-TestParserJ8/src/yyy/NodeTypeTest.java:718: error: [override.param] Incompatible parameter type for namespaceURI.
	public boolean hasAttributeNS(String namespaceURI, String localName)
	                                     ^
  found   : @Initialized @NonNull String
  required: @Initialized @Nullable String
  Consequence: method in @Initialized @NonNull NodeTypeTest
    @Initialized @NonNull boolean hasAttributeNS(@Initialized @NonNull NodeTypeTest this, @Initialized @NonNull String p0, @Initialized @NonNull String p1) throws @Initialized @NonNull DOMException
  cannot override method in @Initialized @NonNull Element
    @Initialized @NonNull boolean hasAttributeNS(@Initialized @NonNull Element this, @Initialized @Nullable String p0, @Initialized @NonNull String p1) throws @Initialized @NonNull DOMException
../annotator/url1a41b8e9f2_mr1azl_INF345_tgz-pJ8-TestParserJ8/src/yyy/NodeTypeTest.java:732: error: [return] incompatible types in return.
		return null;
		       ^
  type of expression: null (NullType)
  method return type: @Initialized @NonNull TypeInfo
../annotator/url1a41b8e9f2_mr1azl_INF345_tgz-pJ8-TestParserJ8/src/yyy/NodeTypeTest.java:757: error: [override.param] Incompatible parameter type for namespaceURI.
	public void setIdAttributeNS(String namespaceURI, String localName,
	                                    ^
  found   : @Initialized @NonNull String
  required: @Initialized @Nullable String
  Consequence: method in @Initialized @NonNull NodeTypeTest
    @NonNull void setIdAttributeNS(@Initialized @NonNull NodeTypeTest this, @Initialized @NonNull String p0, @Initialized @NonNull String p1, @Initialized @NonNull boolean p2) throws @Initialized @NonNull DOMException
  cannot override method in @Initialized @NonNull Element
    @NonNull void setIdAttributeNS(@Initialized @NonNull Element this, @Initialized @Nullable String p0, @Initialized @NonNull String p1, @Initialized @NonNull boolean p2) throws @Initialized @NonNull DOMException
../annotator/url1a41b8e9f2_mr1azl_INF345_tgz-pJ8-TestParserJ8/src/xx/XPathParser.java:307: error: [argument] incompatible argument for parameter prefix of Compiler.qname.
            {if (true) return compiler.qname(null, nc1);}
                                             ^
  found   : null (NullType)
  required: @Initialized @NonNull String
../annotator/url1a41b8e9f2_mr1azl_INF345_tgz-pJ8-TestParserJ8/src/xx/XPathParser.java:337: error: [argument] incompatible argument for parameter prefix of Compiler.qname.
            {if (true) return compiler.qname(null, nc1);}
                                             ^
  found   : null (NullType)
  required: @Initialized @NonNull String
../annotator/url1a41b8e9f2_mr1azl_INF345_tgz-pJ8-TestParserJ8/src/xx/XPathParser.java:503: error: [argument] incompatible argument for parameter predicates of Compiler.step.
            steps.add(compiler.step(Compiler.AXIS_DESCENDANT_OR_SELF, t, null));
                                                                         ^
  found   : null (NullType)
  required: @Initialized @NonNull Object @Initialized @NonNull []
../annotator/url1a41b8e9f2_mr1azl_INF345_tgz-pJ8-TestParserJ8/src/xx/XPathParser.java:932: error: [argument] incompatible argument for parameter args of Compiler.function.
            {if (true) return compiler.function(name, null);}
                                                      ^
  found   : null (NullType)
  required: @Initialized @NonNull Object @Initialized @NonNull []
../annotator/url1a41b8e9f2_mr1azl_INF345_tgz-pJ8-TestParserJ8/src/xx/XPathParser.java:946: error: [argument] incompatible argument for parameter args of Compiler.function.
            {if (true) return compiler.function(code, null);}
                                                      ^
  found   : null (NullType)
  required: @Initialized @NonNull Object @Initialized @NonNull []
../annotator/url1a41b8e9f2_mr1azl_INF345_tgz-pJ8-TestParserJ8/src/xx/XPathParser.java:1044: error: [return] incompatible types in return.
        {if (true) return args;}
                          ^
  type of expression: @Initialized @Nullable ArrayList</*RAW*/>
  method return type: @Initialized @NonNull ArrayList</*RAW*/>
../annotator/url1a41b8e9f2_mr1azl_INF345_tgz-pJ8-TestParserJ8/src/xx/XPathParser.java:1709: error: [argument] incompatible argument for parameter prefix of Compiler.qname.
            qn = compiler.qname(null, nc1);
                                ^
  found   : null (NullType)
  required: @Initialized @NonNull String
../annotator/url1a41b8e9f2_mr1azl_INF345_tgz-pJ8-TestParserJ8/src/xx/XPathParser.java:2983: error: [initialization.static.field.uninitialized] static field jj_la1_0 not initialized
  static private int[] jj_la1_0;
                       ^
../annotator/url1a41b8e9f2_mr1azl_INF345_tgz-pJ8-TestParserJ8/src/xx/XPathParser.java:2984: error: [initialization.static.field.uninitialized] static field jj_la1_1 not initialized
  static private int[] jj_la1_1;
                       ^
../annotator/url1a41b8e9f2_mr1azl_INF345_tgz-pJ8-TestParserJ8/src/xx/XPathParser.java:2985: error: [initialization.static.field.uninitialized] static field jj_la1_2 not initialized
  static private int[] jj_la1_2;
                       ^
../annotator/url1a41b8e9f2_mr1azl_INF345_tgz-pJ8-TestParserJ8/src/xx/XPathParser.java:3006: error: [argument] incompatible argument for parameter encoding of XPathParser constructor.
     this(stream, null);
                  ^
  found   : null (NullType)
  required: @Initialized @NonNull String
../annotator/url1a41b8e9f2_mr1azl_INF345_tgz-pJ8-TestParserJ8/src/xx/XPathParser.java:3009: error: [initialization.fields.uninitialized] the constructor does not initialize fields: compiler, jj_nt, jj_scanpos, jj_lastpos, jj_expentry
  public XPathParser(java.io.InputStream stream, String encoding) {
         ^
../annotator/url1a41b8e9f2_mr1azl_INF345_tgz-pJ8-TestParserJ8/src/xx/XPathParser.java:3021: error: [argument] incompatible argument for parameter encoding of XPathParser.ReInit.
     ReInit(stream, null);
                    ^
  found   : null (NullType)
  required: @Initialized @NonNull String
../annotator/url1a41b8e9f2_mr1azl_INF345_tgz-pJ8-TestParserJ8/src/xx/XPathParser.java:3035: error: [initialization.fields.uninitialized] the constructor does not initialize fields: compiler, jj_nt, jj_scanpos, jj_lastpos, jj_expentry
  public XPathParser(java.io.Reader stream) {
         ^
../annotator/url1a41b8e9f2_mr1azl_INF345_tgz-pJ8-TestParserJ8/src/xx/XPathParser.java:3057: error: [initialization.fields.uninitialized] the constructor does not initialize fields: compiler, jj_input_stream, jj_nt, jj_scanpos, jj_lastpos, jj_expentry
  public XPathParser(XPathParserTokenManager tm) {
         ^
../annotator/url1a41b8e9f2_mr1azl_INF345_tgz-pJ8-TestParserJ8/src/xx/XPathParser.java:3088: error: [assignment] incompatible types in assignment.
            if (c.gen < jj_gen) c.first = null;
                                          ^
  found   : null (NullType)
  required: @Initialized @NonNull Token
../annotator/url1a41b8e9f2_mr1azl_INF345_tgz-pJ8-TestParserJ8/src/xx/XPathParser.java:3167: error: [dereference.of.nullable] dereference of possibly-null reference oldentry
        if (oldentry.length == jj_expentry.length) {
            ^
../annotator/url1a41b8e9f2_mr1azl_INF345_tgz-pJ8-TestParserJ8/src/xx/XPathParser.java:3264: error: [initialization.field.uninitialized] the default constructor does not initialize field first
    Token first;
          ^
../annotator/url1a41b8e9f2_mr1azl_INF345_tgz-pJ8-TestParserJ8/src/xx/XPathParser.java:3266: error: [initialization.field.uninitialized] the default constructor does not initialize field next
    JJCalls next;
            ^
../annotator/url1a41b8e9f2_mr1azl_INF345_tgz-pJ8-TestParserJ8/src/xx/ParseException.java:55: error: [initialization.fields.uninitialized] the constructor does not initialize fields: currentToken, expectedTokenSequences, tokenImage
  public ParseException() {
         ^
../annotator/url1a41b8e9f2_mr1azl_INF345_tgz-pJ8-TestParserJ8/src/xx/ParseException.java:61: error: [initialization.fields.uninitialized] the constructor does not initialize fields: currentToken, expectedTokenSequences, tokenImage
  public ParseException(String message) {
         ^
../annotator/url1a41b8e9f2_mr1azl_INF345_tgz-pJ8-TestParserJ8/src/xx/XPathParserTokenManager.java:1687: error: [assignment] incompatible types in assignment.
public static final String[] jjstrLiteralImages = {
                                                  ^
  found   : @Initialized @Nullable String @Initialized @NonNull []
  required: @Initialized @NonNull String @Initialized @NonNull []
../annotator/url1a41b8e9f2_mr1azl_INF345_tgz-pJ8-TestParserJ8/src/xx/XPathParserTokenManager.java:1688: error: [array.initializer] incompatible types in array initializer.
"", null, null, null, null, null, "\57", "\57\57", "\174", "\53", "\55", 
    ^
  found   : null (NullType)
  required: @Initialized @NonNull String
../annotator/url1a41b8e9f2_mr1azl_INF345_tgz-pJ8-TestParserJ8/src/xx/XPathParserTokenManager.java:1688: error: [array.initializer] incompatible types in array initializer.
"", null, null, null, null, null, "\57", "\57\57", "\174", "\53", "\55", 
          ^
  found   : null (NullType)
  required: @Initialized @NonNull String
../annotator/url1a41b8e9f2_mr1azl_INF345_tgz-pJ8-TestParserJ8/src/xx/XPathParserTokenManager.java:1688: error: [array.initializer] incompatible types in array initializer.
"", null, null, null, null, null, "\57", "\57\57", "\174", "\53", "\55", 
                ^
  found   : null (NullType)
  required: @Initialized @NonNull String
../annotator/url1a41b8e9f2_mr1azl_INF345_tgz-pJ8-TestParserJ8/src/xx/XPathParserTokenManager.java:1688: error: [array.initializer] incompatible types in array initializer.
"", null, null, null, null, null, "\57", "\57\57", "\174", "\53", "\55", 
                      ^
  found   : null (NullType)
  required: @Initialized @NonNull String
../annotator/url1a41b8e9f2_mr1azl_INF345_tgz-pJ8-TestParserJ8/src/xx/XPathParserTokenManager.java:1688: error: [array.initializer] incompatible types in array initializer.
"", null, null, null, null, null, "\57", "\57\57", "\174", "\53", "\55", 
                            ^
  found   : null (NullType)
  required: @Initialized @NonNull String
../annotator/url1a41b8e9f2_mr1azl_INF345_tgz-pJ8-TestParserJ8/src/xx/XPathParserTokenManager.java:1689: error: [array.initializer] incompatible types in array initializer.
"\75", "\41\75", "\74", "\74\75", "\76", "\76\75", "\44", null, null, null, null, 
                                                          ^
  found   : null (NullType)
  required: @Initialized @NonNull String
../annotator/url1a41b8e9f2_mr1azl_INF345_tgz-pJ8-TestParserJ8/src/xx/XPathParserTokenManager.java:1689: error: [array.initializer] incompatible types in array initializer.
"\75", "\41\75", "\74", "\74\75", "\76", "\76\75", "\44", null, null, null, null, 
                                                                ^
  found   : null (NullType)
  required: @Initialized @NonNull String
../annotator/url1a41b8e9f2_mr1azl_INF345_tgz-pJ8-TestParserJ8/src/xx/XPathParserTokenManager.java:1689: error: [array.initializer] incompatible types in array initializer.
"\75", "\41\75", "\74", "\74\75", "\76", "\76\75", "\44", null, null, null, null, 
                                                                      ^
  found   : null (NullType)
  required: @Initialized @NonNull String
../annotator/url1a41b8e9f2_mr1azl_INF345_tgz-pJ8-TestParserJ8/src/xx/XPathParserTokenManager.java:1689: error: [array.initializer] incompatible types in array initializer.
"\75", "\41\75", "\74", "\74\75", "\76", "\76\75", "\44", null, null, null, null, 
                                                                            ^
  found   : null (NullType)
  required: @Initialized @NonNull String
../annotator/url1a41b8e9f2_mr1azl_INF345_tgz-pJ8-TestParserJ8/src/xx/XPathParserTokenManager.java:1690: error: [array.initializer] incompatible types in array initializer.
null, null, null, null, null, "\157\162", "\141\156\144", "\155\157\144", 
^
  found   : null (NullType)
  required: @Initialized @NonNull String
../annotator/url1a41b8e9f2_mr1azl_INF345_tgz-pJ8-TestParserJ8/src/xx/XPathParserTokenManager.java:1690: error: [array.initializer] incompatible types in array initializer.
null, null, null, null, null, "\157\162", "\141\156\144", "\155\157\144", 
      ^
  found   : null (NullType)
  required: @Initialized @NonNull String
../annotator/url1a41b8e9f2_mr1azl_INF345_tgz-pJ8-TestParserJ8/src/xx/XPathParserTokenManager.java:1690: error: [array.initializer] incompatible types in array initializer.
null, null, null, null, null, "\157\162", "\141\156\144", "\155\157\144", 
            ^
  found   : null (NullType)
  required: @Initialized @NonNull String
../annotator/url1a41b8e9f2_mr1azl_INF345_tgz-pJ8-TestParserJ8/src/xx/XPathParserTokenManager.java:1690: error: [array.initializer] incompatible types in array initializer.
null, null, null, null, null, "\157\162", "\141\156\144", "\155\157\144", 
                  ^
  found   : null (NullType)
  required: @Initialized @NonNull String
../annotator/url1a41b8e9f2_mr1azl_INF345_tgz-pJ8-TestParserJ8/src/xx/XPathParserTokenManager.java:1690: error: [array.initializer] incompatible types in array initializer.
null, null, null, null, null, "\157\162", "\141\156\144", "\155\157\144", 
                        ^
  found   : null (NullType)
  required: @Initialized @NonNull String
../annotator/url1a41b8e9f2_mr1azl_INF345_tgz-pJ8-TestParserJ8/src/xx/XPathParserTokenManager.java:1708: error: [array.initializer] incompatible types in array initializer.
null, "\72", "\50", "\51", "\56", "\56\56", "\133", "\135", "\100", "\54", "\52", };
^
  found   : null (NullType)
  required: @Initialized @NonNull String
../annotator/url1a41b8e9f2_mr1azl_INF345_tgz-pJ8-TestParserJ8/src/xx/XPathParserTokenManager.java:1734: error: [method.invocation] call to SwitchTo(int) not allowed on the given receiver.
   SwitchTo(lexState);
           ^
  found   : @UnderInitialization(xx.XPathParserTokenManager.class) @NonNull XPathParserTokenManager
  required: @Initialized @NonNull XPathParserTokenManager
../annotator/url1a41b8e9f2_mr1azl_INF345_tgz-pJ8-TestParserJ8/src/xx/XPathParserTokenManager.java:1861: error: [argument] incompatible argument for parameter errorAfter of TokenMgrError constructor.
   throw new TokenMgrError(EOFSeen, curLexState, error_line, error_column, error_after, curChar, TokenMgrError.LEXICAL_ERROR);
                                                                           ^
  found   : @Initialized @Nullable String
  required: @Initialized @NonNull String
../annotator/url1a41b8e9f2_mr1azl_INF345_tgz-pJ8-TestParserJ8/src/xx/SimpleCharStream.java:521: error: [assignment] incompatible types in assignment.
    buffer = null;
             ^
  found   : null (NullType)
  required: @Initialized @NonNull char @Initialized @NonNull []
../annotator/url1a41b8e9f2_mr1azl_INF345_tgz-pJ8-TestParserJ8/src/xx/SimpleCharStream.java:522: error: [assignment] incompatible types in assignment.
    bufline = null;
              ^
  found   : null (NullType)
  required: @Initialized @NonNull int @Initialized @NonNull []
../annotator/url1a41b8e9f2_mr1azl_INF345_tgz-pJ8-TestParserJ8/src/xx/SimpleCharStream.java:523: error: [assignment] incompatible types in assignment.
    bufcolumn = null;
                ^
  found   : null (NullType)
  required: @Initialized @NonNull int @Initialized @NonNull []
../annotator/url1a41b8e9f2_mr1azl_INF345_tgz-pJ8-TestParserJ8/src/xx/Token.java:75: error: [return] incompatible types in return.
    return null;
           ^
  type of expression: null (NullType)
  method return type: @Initialized @NonNull Object
../annotator/url1a41b8e9f2_mr1azl_INF345_tgz-pJ8-TestParserJ8/src/xx/Token.java:81: error: [initialization.fields.uninitialized] the constructor does not initialize fields: image, next, specialToken
  public Token() {}
         ^
../annotator/url1a41b8e9f2_mr1azl_INF345_tgz-pJ8-TestParserJ8/src/xx/Token.java:89: error: [argument] incompatible argument for parameter image of Token constructor.
    this(kind, null);
               ^
  found   : null (NullType)
  required: @Initialized @NonNull String
../annotator/url1a41b8e9f2_mr1azl_INF345_tgz-pJ8-TestParserJ8/src/xx/Token.java:97: error: [initialization.fields.uninitialized] the constructor does not initialize fields: next, specialToken
  public Token(int kind, String image)
         ^
../annotator/url1a41b8e9f2_mr1azl_INF345_tgz-pJ8-TestParserJ8/src/xx/Token.java:142: error: [argument] incompatible argument for parameter image of Token.newToken.
    return newToken(ofKind, null);
                            ^
  found   : null (NullType)
  required: @Initialized @NonNull String
../annotator/url1a41b8e9f2_mr1azl_INF345_tgz-pJ8-TestParserJ8/src/xx/EG1TokenManager.java:151: error: [assignment] incompatible types in assignment.
public static final String[] jjstrLiteralImages = {
                                                  ^
  found   : @Initialized @Nullable String @Initialized @NonNull []
  required: @Initialized @NonNull String @Initialized @NonNull []
../annotator/url1a41b8e9f2_mr1azl_INF345_tgz-pJ8-TestParserJ8/src/xx/EG1TokenManager.java:152: error: [array.initializer] incompatible types in array initializer.
"", null, null, null, null, "\53", "\55", "\52", "\57", null, null, "\73", 
    ^
  found   : null (NullType)
  required: @Initialized @NonNull String
../annotator/url1a41b8e9f2_mr1azl_INF345_tgz-pJ8-TestParserJ8/src/xx/EG1TokenManager.java:152: error: [array.initializer] incompatible types in array initializer.
"", null, null, null, null, "\53", "\55", "\52", "\57", null, null, "\73", 
          ^
  found   : null (NullType)
  required: @Initialized @NonNull String
../annotator/url1a41b8e9f2_mr1azl_INF345_tgz-pJ8-TestParserJ8/src/xx/EG1TokenManager.java:152: error: [array.initializer] incompatible types in array initializer.
"", null, null, null, null, "\53", "\55", "\52", "\57", null, null, "\73", 
                ^
  found   : null (NullType)
  required: @Initialized @NonNull String
../annotator/url1a41b8e9f2_mr1azl_INF345_tgz-pJ8-TestParserJ8/src/xx/EG1TokenManager.java:152: error: [array.initializer] incompatible types in array initializer.
"", null, null, null, null, "\53", "\55", "\52", "\57", null, null, "\73", 
                      ^
  found   : null (NullType)
  required: @Initialized @NonNull String
../annotator/url1a41b8e9f2_mr1azl_INF345_tgz-pJ8-TestParserJ8/src/xx/EG1TokenManager.java:152: error: [array.initializer] incompatible types in array initializer.
"", null, null, null, null, "\53", "\55", "\52", "\57", null, null, "\73", 
                                                        ^
  found   : null (NullType)
  required: @Initialized @NonNull String
../annotator/url1a41b8e9f2_mr1azl_INF345_tgz-pJ8-TestParserJ8/src/xx/EG1TokenManager.java:152: error: [array.initializer] incompatible types in array initializer.
"", null, null, null, null, "\53", "\55", "\52", "\57", null, null, "\73", 
                                                              ^
  found   : null (NullType)
  required: @Initialized @NonNull String
../annotator/url1a41b8e9f2_mr1azl_INF345_tgz-pJ8-TestParserJ8/src/xx/EG1TokenManager.java:165: error: [initialization.static.field.uninitialized] static field input_stream not initialized
static protected SimpleCharStream input_stream;
                                  ^
../annotator/url1a41b8e9f2_mr1azl_INF345_tgz-pJ8-TestParserJ8/src/xx/EG1TokenManager.java:318: error: [argument] incompatible argument for parameter errorAfter of TokenMgrError constructor.
   throw new TokenMgrError(EOFSeen, curLexState, error_line, error_column, error_after, curChar, TokenMgrError.LEXICAL_ERROR);
                                                                           ^
  found   : @Initialized @Nullable String
  required: @Initialized @NonNull String
../annotator/url1a41b8e9f2_mr1azl_INF345_tgz-pJ8-TestParserJ8/src/xx/Utils.java:33: error: [return] incompatible types in return.
            return ((Node) object).getTextContent();
                                                 ^
  type of expression: @Initialized @Nullable String
  method return type: @Initialized @NonNull String
../annotator/url1a41b8e9f2_mr1azl_INF345_tgz-pJ8-TestParserJ8/src/xx/MonCompiler.java:1082: error: [accessing.nullable] accessing a possibly-null array argument
								((NodeTest) argument[0]).getSteps());
								            ^
../annotator/url1a41b8e9f2_mr1azl_INF345_tgz-pJ8-TestParserJ8/src/xx/MonCompiler.java:1096: error: [accessing.nullable] accessing a possibly-null array argument
								((NodeTest) argument[0]).getSteps());
								            ^
../annotator/url1a41b8e9f2_mr1azl_INF345_tgz-pJ8-TestParserJ8/src/xx/MonCompiler.java:1111: error: [accessing.nullable] accessing a possibly-null array argument
								((NodeTest) argument[0]).getSteps());
								            ^
../annotator/url1a41b8e9f2_mr1azl_INF345_tgz-pJ8-TestParserJ8/src/xx/MonCompiler.java:1125: error: [accessing.nullable] accessing a possibly-null array argument
						String keyword = ((NodeTest) argument[0])
						                             ^
../annotator/url1a41b8e9f2_mr1azl_INF345_tgz-pJ8-TestParserJ8/src/xx/MonCompiler.java:1139: error: [accessing.nullable] accessing a possibly-null array argument
								((NodeTest) argument[0]).getSteps());
								            ^
../annotator/url1a41b8e9f2_mr1azl_INF345_tgz-pJ8-TestParserJ8/src/xx/MonCompiler.java:1250: error: [argument] incompatible argument for parameter nx of MonCompiler.contains.
			contains(nx.getChildNodes().item(i), keyword);
			                                ^
  found   : @Initialized @Nullable Node
  required: @Initialized @NonNull Node
../annotator/url1a41b8e9f2_mr1azl_INF345_tgz-pJ8-TestParserJ8/src/xx/MonCompiler.java:1269: error: [argument] incompatible argument for parameter nx of MonCompiler.contains.
			contains(nx.getChildNodes().item(i), keyword);
			                                ^
  found   : @Initialized @Nullable Node
  required: @Initialized @NonNull Node
../annotator/url1a41b8e9f2_mr1azl_INF345_tgz-pJ8-TestParserJ8/src/xx/MonCompiler.java:1288: error: [accessing.nullable] accessing a possibly-null array args
		if (args[0].getNodeType() == NODE_TYPE_RELATIVE_LOCATIONPATH) {
		    ^
../annotator/url1a41b8e9f2_mr1azl_INF345_tgz-pJ8-TestParserJ8/src/xx/MonCompiler.java:1356: error: [accessing.nullable] accessing a possibly-null array argument
							((NodeTest) argument[0]).getSteps());
							            ^
../annotator/url1a41b8e9f2_mr1azl_INF345_tgz-pJ8-TestParserJ8/src/xx/MonCompiler.java:1377: error: [accessing.nullable] accessing a possibly-null array argument
							((NodeTest) argument[0]).getSteps());
							            ^
../annotator/url1a41b8e9f2_mr1azl_INF345_tgz-pJ8-TestParserJ8/src/xx/MonCompiler.java:1394: error: [accessing.nullable] accessing a possibly-null array argument
							((NodeTest) argument[0]).getSteps());
							            ^
../annotator/url1a41b8e9f2_mr1azl_INF345_tgz-pJ8-TestParserJ8/src/xx/MonCompiler.java:1410: error: [accessing.nullable] accessing a possibly-null array argument
							((NodeTest) argument[0]).getSteps());
							            ^
../annotator/url1a41b8e9f2_mr1azl_INF345_tgz-pJ8-TestParserJ8/src/xx/MonCompiler.java:1499: error: [accessing.nullable] accessing a possibly-null array argument
							((NodeTest) argument[0]).getSteps());
							            ^
../annotator/url1a41b8e9f2_mr1azl_INF345_tgz-pJ8-TestParserJ8/src/xx/MonCompiler.java:1580: error: [iterating.over.nullable] iterating over possibly-null reference args
		for (NodeTest arg : args) {
		                    ^
../annotator/url1a41b8e9f2_mr1azl_INF345_tgz-pJ8-TestParserJ8/src/xx/MonCompiler.java:1682: error: [return] incompatible types in return.
		return expArray;
		       ^
  type of expression: @Initialized @NonNull Element @Initialized @Nullable []
  method return type: @Initialized @NonNull Element @Initialized @NonNull []
../annotator/url1a41b8e9f2_mr1azl_INF345_tgz-pJ8-TestParserJ8/src/xx/MonCompiler.java:1702: error: [return] incompatible types in return.
		return expArray;
		       ^
  type of expression: @Initialized @NonNull NodeTest @Initialized @Nullable []
  method return type: @Initialized @NonNull NodeTest @Initialized @NonNull []
../annotator/url1a41b8e9f2_mr1azl_INF345_tgz-pJ8-TestParserJ8/src/xx/MonCompiler.java:1718: error: [return] incompatible types in return.
		return expArray;
		       ^
  type of expression: @Initialized @NonNull Step @Initialized @Nullable []
  method return type: @Initialized @NonNull Step @Initialized @NonNull []
../annotator/url1a41b8e9f2_mr1azl_INF345_tgz-pJ8-TestParserJ8/src/xx/MonCompiler.java:1821: error: [argument] incompatible argument for parameter node of MonCompiler.testNode.
					if (testNode(nodeTest, parent) && parent != null) {
					                       ^
  found   : @Initialized @Nullable Node
  required: @Initialized @NonNull Node
../annotator/url1a41b8e9f2_mr1azl_INF345_tgz-pJ8-TestParserJ8/src/xx/MonCompiler.java:1981: error: [argument] incompatible argument for parameter node of MonCompiler.testNode.
				if (testNode(nodeTest, nodeList.item(i)))
				                                    ^
  found   : @Initialized @Nullable Node
  required: @Initialized @NonNull Node
../annotator/url1a41b8e9f2_mr1azl_INF345_tgz-pJ8-TestParserJ8/src/xx/MonCompiler.java:1982: error: [argument] incompatible argument for parameter arg0 of List.add.
					ret.add(nodeList.item(i));
					                     ^
  found   : @Initialized @Nullable Node
  required: @Initialized @NonNull Node
../annotator/url1a41b8e9f2_mr1azl_INF345_tgz-pJ8-TestParserJ8/src/xx/MonCompiler.java:2014: error: [argument] incompatible argument for parameter arg0 of List.add.
			ret.add(nodeList.item(i));
			                     ^
  found   : @Initialized @Nullable Node
  required: @Initialized @NonNull Node
../annotator/url1a41b8e9f2_mr1azl_INF345_tgz-pJ8-TestParserJ8/src/xx/MonCompiler.java:2026: error: [argument] incompatible argument for parameter arg0 of List.add.
			ret.add(nodeList.item(i));
			                     ^
  found   : @Initialized @Nullable Node
  required: @Initialized @NonNull Node
../annotator/url1a41b8e9f2_mr1azl_INF345_tgz-pJ8-TestParserJ8/src/xx/MonCompiler.java:2052: error: [argument] incompatible argument for parameter node of MonCompiler.testNode.
				if (testNode(nodeTest, nodeList.item(i))) {
				                                    ^
  found   : @Initialized @Nullable Node
  required: @Initialized @NonNull Node
../annotator/url1a41b8e9f2_mr1azl_INF345_tgz-pJ8-TestParserJ8/src/xx/MonCompiler.java:2053: error: [argument] incompatible argument for parameter arg0 of List.add.
					ret.add(nodeList.item(i));
					                     ^
  found   : @Initialized @Nullable Node
  required: @Initialized @NonNull Node
../annotator/url1a41b8e9f2_mr1azl_INF345_tgz-pJ8-TestParserJ8/src/xx/MonCompiler.java:2075: error: [argument] incompatible argument for parameter arg0 of List.add.
						ret.add(nodeList.item(i));
						                     ^
  found   : @Initialized @Nullable Node
  required: @Initialized @NonNull Node
../annotator/url1a41b8e9f2_mr1azl_INF345_tgz-pJ8-TestParserJ8/src/xx/MonCompiler.java:2119: error: [argument] incompatible argument for parameter node of MonCompiler.testNode.
				if (testNode(nodeTest, node.getChildNodes().item(i))) {
				                                                ^
  found   : @Initialized @Nullable Node
  required: @Initialized @NonNull Node
../annotator/url1a41b8e9f2_mr1azl_INF345_tgz-pJ8-TestParserJ8/src/xx/MonCompiler.java:2120: error: [argument] incompatible argument for parameter arg0 of List.add.
					ret.add(node.getChildNodes().item(i));
					                                 ^
  found   : @Initialized @Nullable Node
  required: @Initialized @NonNull Node
../annotator/url1a41b8e9f2_mr1azl_INF345_tgz-pJ8-TestParserJ8/src/xx/MonCompiler.java:2122: error: [argument] incompatible argument for parameter node of MonCompiler.addDescendant.
				addDescendant(node.getChildNodes().item(i), ret, nodeTest);
				                                       ^
  found   : @Initialized @Nullable Node
  required: @Initialized @NonNull Node
../annotator/url1a41b8e9f2_mr1azl_INF345_tgz-pJ8-TestParserJ8/src/xx/MonCompiler.java:2143: error: [argument] incompatible argument for parameter namespaceURI of QName constructor.
			QName nodeName = new QName(node.getNamespaceURI(),
			                                               ^
  found   : @Initialized @Nullable String
  required: @Initialized @NonNull String
../annotator/url1a41b8e9f2_mr1azl_INF345_tgz-pJ8-TestParserJ8/src/xx/MonCompiler.java:2154: error: [argument] incompatible argument for parameter s2 of MonCompiler.equalStrings.
				if (!equalStrings(testNS, nodeNS)) {
				                          ^
  found   : @Initialized @Nullable String
  required: @Initialized @NonNull String
../annotator/url1a41b8e9f2_mr1azl_INF345_tgz-pJ8-TestParserJ8/src/xx/EG1.java:184: error: [initialization.static.field.uninitialized] static field token_source not initialized
  static public EG1TokenManager token_source;
                                ^
../annotator/url1a41b8e9f2_mr1azl_INF345_tgz-pJ8-TestParserJ8/src/xx/EG1.java:185: error: [initialization.static.field.uninitialized] static field jj_input_stream not initialized
  static SimpleCharStream jj_input_stream;
                          ^
../annotator/url1a41b8e9f2_mr1azl_INF345_tgz-pJ8-TestParserJ8/src/xx/EG1.java:187: error: [initialization.static.field.uninitialized] static field token not initialized
  static public Token token;
                      ^
../annotator/url1a41b8e9f2_mr1azl_INF345_tgz-pJ8-TestParserJ8/src/xx/EG1.java:189: error: [initialization.static.field.uninitialized] static field jj_nt not initialized
  static public Token jj_nt;
                      ^
../annotator/url1a41b8e9f2_mr1azl_INF345_tgz-pJ8-TestParserJ8/src/xx/EG1.java:193: error: [initialization.static.field.uninitialized] static field jj_la1_0 not initialized
  static private int[] jj_la1_0;
                       ^
../annotator/url1a41b8e9f2_mr1azl_INF345_tgz-pJ8-TestParserJ8/src/xx/EG1.java:204: error: [argument] incompatible argument for parameter encoding of EG1 constructor.
     this(stream, null);
                  ^
  found   : null (NullType)
  required: @Initialized @NonNull String
../annotator/url1a41b8e9f2_mr1azl_INF345_tgz-pJ8-TestParserJ8/src/xx/EG1.java:228: error: [argument] incompatible argument for parameter encoding of EG1.ReInit.
     ReInit(stream, null);
                    ^
  found   : null (NullType)
  required: @Initialized @NonNull String
../annotator/url1a41b8e9f2_mr1azl_INF345_tgz-pJ8-TestParserJ8/src/xx/EG1.java:353: error: [initialization.static.field.uninitialized] static field jj_expentry not initialized
  static private int[] jj_expentry;
                       ^
../annotator/url1a41b8e9f2_mr1azl_INF345_tgz-pJ8-TestParserJ8/src/xx/Parser.java:66: error: [return] incompatible types in return.
            return expr;
                   ^
  type of expression: @Initialized @Nullable Object
  method return type: @Initialized @NonNull Object
../annotator/url1a41b8e9f2_mr1azl_INF345_tgz-pJ8-TestParserJ8/src/xx/test/Gui.java:31: error: [initialization.field.uninitialized] the default constructor does not initialize field shell
	protected Shell shell;
	                ^
../annotator/url1a41b8e9f2_mr1azl_INF345_tgz-pJ8-TestParserJ8/src/xx/test/Gui.java:32: error: [initialization.field.uninitialized] the default constructor does not initialize field textXPath
	private Text textXPath;
	             ^
../annotator/url1a41b8e9f2_mr1azl_INF345_tgz-pJ8-TestParserJ8/src/xx/test/Gui.java:33: error: [initialization.field.uninitialized] the default constructor does not initialize field lblError
	private Label lblError;
	              ^
../annotator/url1a41b8e9f2_mr1azl_INF345_tgz-pJ8-TestParserJ8/src/xx/test/Gui.java:34: error: [initialization.field.uninitialized] the default constructor does not initialize field XMLText
	private StyledText XMLText;
	                   ^
../annotator/url1a41b8e9f2_mr1azl_INF345_tgz-pJ8-TestParserJ8/src/xx/test/Gui.java:35: error: [initialization.field.uninitialized] the default constructor does not initialize field resultText
	private StyledText resultText;
	                   ^
../annotator/url1a41b8e9f2_mr1azl_INF345_tgz-pJ8-TestParserJ8/src/xx/XPathEvaluateur.java:81: error: [argument] incompatible argument for parameter arg0 of Node.appendChild.
				root.appendChild(((NodeList) result).item(i));
				                                         ^
  found   : @Initialized @Nullable Node
  required: @Initialized @NonNull Node
../annotator/url1a41b8e9f2_mr1azl_INF345_tgz-pJ8-TestParserJ8/src/xx/XPathEvaluateur.java:110: error: [return] incompatible types in return.
	return null;
	       ^
  type of expression: null (NullType)
  method return type: @Initialized @NonNull Node
../annotator/url1a41b8e9f2_mr1azl_INF345_tgz-pJ8-TestParserJ8/src/xx/XPathEvaluateur.java:151: error: [argument] incompatible argument for parameter arg0 of Node.appendChild.
				root.appendChild(((NodeList) result).item(i));
				                                         ^
  found   : @Initialized @Nullable Node
  required: @Initialized @NonNull Node
../annotator/url1a41b8e9f2_mr1azl_INF345_tgz-pJ8-TestParserJ8/src/xx/XPathEvaluateur.java:180: error: [return] incompatible types in return.
	return null;
	       ^
  type of expression: null (NullType)
  method return type: @Initialized @NonNull Node
../annotator/url1a41b8e9f2_mr1azl_INF345_tgz-pJ8-TestParserJ8/src/xx/TokenMgrError.java:137: error: [return] incompatible types in return.
    return super.getMessage();
                           ^
  type of expression: @Initialized @Nullable String
  method return type: @Initialized @NonNull String
../annotator/url1a41b8e9f2_mr1azl_INF345_tgz-pJ8-TestParserJ8/src/org/eclipse/wb/swt/SWTResourceManager.java:162: error: [argument] incompatible argument for parameter stream of SWTResourceManager.getImage.
				image = getImage(clazz.getResourceAsStream(path));
				                                          ^
  found   : @Initialized @Nullable InputStream
  required: @Initialized @NonNull InputStream
../annotator/url1a41b8e9f2_mr1azl_INF345_tgz-pJ8-TestParserJ8/src/zz/XPathDebug.java:191: error: [argument] incompatible argument for parameter arg0 of Node.appendChild.
					root.appendChild(((NodeList) result).item(i));
					                                         ^
  found   : @Initialized @Nullable Node
  required: @Initialized @NonNull Node
../annotator/url1a41b8e9f2_mr1azl_INF345_tgz-pJ8-TestParserJ8/src/zz/XPathDebug.java:221: error: [return] incompatible types in return.
		return null;
		       ^
  type of expression: null (NullType)
  method return type: @Initialized @NonNull Node
../annotator/url1a41b8e9f2_mr1azl_INF345_tgz-pJ8-TestParserJ8/src/zz/XPathDebug.java:337: error: [dereference.of.nullable] dereference of possibly-null reference tempNode
			if (tempNode.getNodeType() == Node.ELEMENT_NODE) {
			    ^
../annotator/url1a41b8e9f2_mr1azl_INF345_tgz-pJ8-TestParserJ8/src/zz/XPathDebug.java:348: error: [dereference.of.nullable] dereference of possibly-null reference nodeMap
					for (int i = 0; i < nodeMap.getLength(); i++) {
					                    ^
../annotator/url1a41b8e9f2_mr1azl_INF345_tgz-pJ8-TestParserJ8/src/zz/XPathDebug.java:351: error: [dereference.of.nullable] dereference of possibly-null reference node
						System.out.println("attr name : " + node.getNodeName());
						                                    ^
Note: ../annotator/url1a41b8e9f2_mr1azl_INF345_tgz-pJ8-TestParserJ8/src/xx/Utils.java uses or overrides a deprecated API.
Note: Recompile with -Xlint:deprecation for details.
Note: Some input files use unchecked or unsafe operations.
Note: Recompile with -Xlint:unchecked for details.
269 errors
