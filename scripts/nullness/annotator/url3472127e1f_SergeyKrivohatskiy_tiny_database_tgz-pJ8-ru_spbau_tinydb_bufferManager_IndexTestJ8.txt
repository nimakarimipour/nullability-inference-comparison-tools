../annotator/url3472127e1f_SergeyKrivohatskiy_tiny_database_tgz-pJ8-ru_spbau_tinydb_bufferManager_IndexTestJ8/src/ru/spbau/tinydb/queries/TableNameContainer.java:31: error: [override.param] Incompatible parameter type for o.
    public boolean equals(Object o) {
                                 ^
  found   : @Initialized @NonNull Object
  required: @Initialized @Nullable Object
  Consequence: method in @Initialized @NonNull TableNameContainer
    @Initialized @NonNull boolean equals(@Initialized @NonNull TableNameContainer this, @Initialized @NonNull Object p0)
  cannot override method in @Initialized @NonNull Object
    @Initialized @NonNull boolean equals(@Initialized @NonNull Object this, @Initialized @Nullable Object p0)
../annotator/url3472127e1f_SergeyKrivohatskiy_tiny_database_tgz-pJ8-ru_spbau_tinydb_bufferManager_IndexTestJ8/src/ru/spbau/tinydb/expressions/comparison/JoinOnExpression.java:54: error: [argument] incompatible argument for parameter first of JoinOnExpression.assertClassesAreEqual.
        assertClassesAreEqual(first, second);
                              ^
  found   : @Initialized @Nullable Object
  required: @Initialized @NonNull Object
../annotator/url3472127e1f_SergeyKrivohatskiy_tiny_database_tgz-pJ8-ru_spbau_tinydb_bufferManager_IndexTestJ8/src/ru/spbau/tinydb/expressions/comparison/JoinOnExpression.java:54: error: [argument] incompatible argument for parameter second of JoinOnExpression.assertClassesAreEqual.
        assertClassesAreEqual(first, second);
                                     ^
  found   : @Initialized @Nullable Object
  required: @Initialized @NonNull Object
../annotator/url3472127e1f_SergeyKrivohatskiy_tiny_database_tgz-pJ8-ru_spbau_tinydb_bufferManager_IndexTestJ8/src/ru/spbau/tinydb/queries/SecondLevelId.java:30: error: [override.param] Incompatible parameter type for o.
    public boolean equals(Object o) {
                                 ^
  found   : @Initialized @NonNull Object
  required: @Initialized @Nullable Object
  Consequence: method in @Initialized @NonNull SecondLevelId
    @Initialized @NonNull boolean equals(@Initialized @NonNull SecondLevelId this, @Initialized @NonNull Object p0)
  cannot override method in @Initialized @NonNull Object
    @Initialized @NonNull boolean equals(@Initialized @NonNull Object this, @Initialized @Nullable Object p0)
../annotator/url3472127e1f_SergeyKrivohatskiy_tiny_database_tgz-pJ8-ru_spbau_tinydb_bufferManager_IndexTestJ8/src/ru/spbau/tinydb/expressions/bool/BinaryBooleanExpression.java:35: error: [dereference.of.nullable] dereference of possibly-null reference getSecond()
        return getSecond() != null ? executeBinaryOperation(firstValue, getSecond().execute(values)) : firstValue;
                                                                                 ^
../annotator/url3472127e1f_SergeyKrivohatskiy_tiny_database_tgz-pJ8-ru_spbau_tinydb_bufferManager_IndexTestJ8/src/ru/spbau/tinydb/expressions/bool/BinaryBooleanExpression.java:58: error: [dereference.of.nullable] dereference of possibly-null reference getSecond()
        return getSecond() != null ? "(" + result + " " + operationToString() + " " + getSecond().toString() + ")" : result;
                                                                                               ^
../annotator/url3472127e1f_SergeyKrivohatskiy_tiny_database_tgz-pJ8-ru_spbau_tinydb_bufferManager_IndexTestJ8/src/ru/spbau/tinydb/queries/Attribute.java:60: error: [unboxing.of.nullable] unboxing a possibly-null reference length
            if (length < 1) {
                ^
../annotator/url3472127e1f_SergeyKrivohatskiy_tiny_database_tgz-pJ8-ru_spbau_tinydb_bufferManager_IndexTestJ8/src/ru/spbau/tinydb/queries/Attribute.java:62: error: [unboxing.of.nullable] unboxing a possibly-null reference length
            } else if (length > 255) {
                       ^
../annotator/url3472127e1f_SergeyKrivohatskiy_tiny_database_tgz-pJ8-ru_spbau_tinydb_bufferManager_IndexTestJ8/src/ru/spbau/tinydb/queries/Attribute.java:66: error: [assignment] incompatible types in assignment.
            this.length = length;
                          ^
  found   : @Initialized @Nullable int
  required: @Initialized @NonNull int
../annotator/url3472127e1f_SergeyKrivohatskiy_tiny_database_tgz-pJ8-ru_spbau_tinydb_bufferManager_IndexTestJ8/src/ru/spbau/tinydb/grammar/GrammarTester.java:50: error: [iterating.over.nullable] iterating over possibly-null reference parser.script().result
                for (IQuery query : parser.script().result) {
                                                   ^
../annotator/url3472127e1f_SergeyKrivohatskiy_tiny_database_tgz-pJ8-ru_spbau_tinydb_bufferManager_IndexTestJ8/src/ru/spbau/tinydb/btree/BxTree.java:17: error: [assignment] incompatible types in assignment.
    	this.headerPageIndex = firstPage;
    	                       ^
  found   : @Initialized @Nullable int
  required: @Initialized @NonNull int
../annotator/url3472127e1f_SergeyKrivohatskiy_tiny_database_tgz-pJ8-ru_spbau_tinydb_bufferManager_IndexTestJ8/src/ru/spbau/tinydb/btree/BxTree.java:18: error: [method.invocation] call to loadHeader() not allowed on the given receiver.
    	loadHeader();
    	          ^
  found   : @UnderInitialization @NonNull BxTree
  required: @Initialized @NonNull BxTree
../annotator/url3472127e1f_SergeyKrivohatskiy_tiny_database_tgz-pJ8-ru_spbau_tinydb_bufferManager_IndexTestJ8/src/ru/spbau/tinydb/btree/BxTree.java:22: error: [method.invocation] call to writeHeader() not allowed on the given receiver.
    	writeHeader();
    	           ^
  found   : @UnderInitialization @NonNull BxTree
  required: @Initialized @NonNull BxTree
../annotator/url3472127e1f_SergeyKrivohatskiy_tiny_database_tgz-pJ8-ru_spbau_tinydb_bufferManager_IndexTestJ8/src/ru/spbau/tinydb/btree/BxTree.java:40: error: [argument] incompatible argument for parameter key of Node.insert.
		Split split = root.insert(key, recordId);
		                          ^
  found   : @Initialized @Nullable int
  required: @Initialized @NonNull int
../annotator/url3472127e1f_SergeyKrivohatskiy_tiny_database_tgz-pJ8-ru_spbau_tinydb_bufferManager_IndexTestJ8/src/ru/spbau/tinydb/btree/BxTree.java:51: error: [argument] incompatible argument for parameter key of Node.find.
		final Iterator<BxTreeEntry> baseIter = root.find(from, includeFrom); // >(or >=) from iterator
		                                                 ^
  found   : @Initialized @Nullable int
  required: @Initialized @NonNull int
../annotator/url3472127e1f_SergeyKrivohatskiy_tiny_database_tgz-pJ8-ru_spbau_tinydb_bufferManager_IndexTestJ8/src/ru/spbau/tinydb/btree/BxTree.java:54: error: [method.invocation] call to getNext() not allowed on the given receiver.
			@Nullable private BxTreeEntry entry = getNext();
			                                             ^
  found   : @Initialized @NonNull BxTree.@UnderInitialization(<anonymous java.util.Iterator<ru.spbau.tinydb.btree.BxTreeEntry>>.class) @NonNull <anonymous ru.spbau.tinydb.btree.BxTree$1>
  required: @Initialized @NonNull BxTree.@Initialized @NonNull <anonymous ru.spbau.tinydb.btree.BxTree$1>
../annotator/url3472127e1f_SergeyKrivohatskiy_tiny_database_tgz-pJ8-ru_spbau_tinydb_bufferManager_IndexTestJ8/src/ru/spbau/tinydb/btree/BxTree.java:56: error: [override.return] Incompatible return type.
			public BxTreeEntry next() {
			       ^
  found   : @Initialized @Nullable BxTreeEntry
  required: @Initialized @NonNull BxTreeEntry
  Consequence: method in @Initialized @NonNull BxTree.@Initialized @NonNull <anonymous ru.spbau.tinydb.btree.BxTree$1>
    @Initialized @Nullable BxTreeEntry next(@Initialized @NonNull BxTree.@Initialized @NonNull <anonymous ru.spbau.tinydb.btree.BxTree$1> this)
  cannot override method in @Initialized @NonNull Iterator<@Initialized @NonNull BxTreeEntry>
    @Initialized @NonNull BxTreeEntry next(@Initialized @NonNull Iterator<@Initialized @NonNull BxTreeEntry> this)
../annotator/url3472127e1f_SergeyKrivohatskiy_tiny_database_tgz-pJ8-ru_spbau_tinydb_bufferManager_IndexTestJ8/src/ru/spbau/tinydb/bufferManager/BufferManager.java:52: error: [method.invocation] call to init() not allowed on the given receiver.
        init();
            ^
  found   : @UnderInitialization(ru.spbau.tinydb.bufferManager.BufferManager.class) @NonNull BufferManager
  required: @Initialized @NonNull BufferManager
../annotator/url3472127e1f_SergeyKrivohatskiy_tiny_database_tgz-pJ8-ru_spbau_tinydb_bufferManager_IndexTestJ8/src/ru/spbau/tinydb/bufferManager/BufferManager.java:88: error: [unboxing.of.nullable] unboxing a possibly-null reference pageIdxToBufferPos.get(pageIndex)
            int bufferPos = pageIdxToBufferPos.get(pageIndex);
                                                  ^
../annotator/url3472127e1f_SergeyKrivohatskiy_tiny_database_tgz-pJ8-ru_spbau_tinydb_bufferManager_IndexTestJ8/src/ru/spbau/tinydb/btree/LeafNode.java:56: error: [method.invocation] call to getNext() not allowed on the given receiver.
			@Nullable private BxTreeEntry val = getNext();
			                                           ^
  found   : @Initialized @NonNull LeafNode.@UnderInitialization(<anonymous java.util.Iterator<ru.spbau.tinydb.btree.BxTreeEntry>>.class) @NonNull <anonymous ru.spbau.tinydb.btree.LeafNode$1>
  required: @Initialized @NonNull LeafNode.@Initialized @NonNull <anonymous ru.spbau.tinydb.btree.LeafNode$1>
../annotator/url3472127e1f_SergeyKrivohatskiy_tiny_database_tgz-pJ8-ru_spbau_tinydb_bufferManager_IndexTestJ8/src/ru/spbau/tinydb/btree/LeafNode.java:70: error: [dereference.of.nullable] dereference of possibly-null reference nextNode
					int nextNodePage = nextNode.getLink();
					                   ^
../annotator/url3472127e1f_SergeyKrivohatskiy_tiny_database_tgz-pJ8-ru_spbau_tinydb_bufferManager_IndexTestJ8/src/ru/spbau/tinydb/btree/LeafNode.java:77: error: [override.return] Incompatible return type.
			public BxTreeEntry next() {
			       ^
  found   : @Initialized @Nullable BxTreeEntry
  required: @Initialized @NonNull BxTreeEntry
  Consequence: method in @Initialized @NonNull LeafNode.@Initialized @NonNull <anonymous ru.spbau.tinydb.btree.LeafNode$1>
    @Initialized @Nullable BxTreeEntry next(@Initialized @NonNull LeafNode.@Initialized @NonNull <anonymous ru.spbau.tinydb.btree.LeafNode$1> this)
  cannot override method in @Initialized @NonNull Iterator<@Initialized @NonNull BxTreeEntry>
    @Initialized @NonNull BxTreeEntry next(@Initialized @NonNull Iterator<@Initialized @NonNull BxTreeEntry> this)
../annotator/url3472127e1f_SergeyKrivohatskiy_tiny_database_tgz-pJ8-ru_spbau_tinydb_bufferManager_IndexTestJ8/src/ru/spbau/tinydb/btree/IndexNode.java:16: error: [method.invocation] call to setIndexType() not allowed on the given receiver.
		setIndexType();
		            ^
  found   : @UnderInitialization(ru.spbau.tinydb.btree.IndexNode.class) @NonNull Node
  required: @Initialized @NonNull Node
../annotator/url3472127e1f_SergeyKrivohatskiy_tiny_database_tgz-pJ8-ru_spbau_tinydb_bufferManager_IndexTestJ8/src/ru/spbau/tinydb/btree/IndexNode.java:17: error: [method.invocation] call to insert(int,int,int) not allowed on the given receiver.
		insert(0, split.key, split.left);
		      ^
  found   : @UnderInitialization(ru.spbau.tinydb.btree.IndexNode.class) @NonNull Node
  required: @Initialized @NonNull Node
../annotator/url3472127e1f_SergeyKrivohatskiy_tiny_database_tgz-pJ8-ru_spbau_tinydb_bufferManager_IndexTestJ8/src/ru/spbau/tinydb/btree/IndexNode.java:18: error: [method.invocation] call to setLink(int) not allowed on the given receiver.
		setLink(split.right);
		       ^
  found   : @UnderInitialization(ru.spbau.tinydb.btree.IndexNode.class) @NonNull Node
  required: @Initialized @NonNull Node
../annotator/url3472127e1f_SergeyKrivohatskiy_tiny_database_tgz-pJ8-ru_spbau_tinydb_bufferManager_IndexTestJ8/src/ru/spbau/tinydb/engine/DataBaseEngine.java:195: error: [dereference.of.nullable] dereference of possibly-null reference joinAtr
				boolean isIntegerAtr = joinAtr.getDataType().equals(IntegerType.getInstance());
				                       ^
../annotator/url3472127e1f_SergeyKrivohatskiy_tiny_database_tgz-pJ8-ru_spbau_tinydb_bufferManager_IndexTestJ8/src/ru/spbau/tinydb/engine/DataBaseEngine.java:227: error: [dereference.of.nullable] dereference of possibly-null reference index
				Iterator<BxTreeEntry> indexIter = index.find(from, to, includeFrom, includeTo);
				                                  ^
../annotator/url3472127e1f_SergeyKrivohatskiy_tiny_database_tgz-pJ8-ru_spbau_tinydb_bufferManager_IndexTestJ8/src/ru/spbau/tinydb/metainformation/MetaInformationTable.java:87: error: [argument] incompatible argument for parameter attributeName of Attribute constructor.
                Attribute atr = new Attribute(currName, type);
                                              ^
  found   : @Initialized @Nullable String
  required: @Initialized @NonNull String
../annotator/url3472127e1f_SergeyKrivohatskiy_tiny_database_tgz-pJ8-ru_spbau_tinydb_bufferManager_IndexTestJ8/src/ru/spbau/tinydb/metainformation/MetaInformationTable.java:102: error: [unboxing.of.nullable] unboxing a possibly-null reference (Integer)recAtributes.get(VAL2_ID)
                ignore = (Integer)recAtributes.get(VAL2_ID);
                         ^
../annotator/url3472127e1f_SergeyKrivohatskiy_tiny_database_tgz-pJ8-ru_spbau_tinydb_bufferManager_IndexTestJ8/src/ru/spbau/tinydb/metainformation/MetaInformationTable.java:106: error: [unboxing.of.nullable] unboxing a possibly-null reference (Integer)recAtributes.get(VAL2_ID)
            attributesCount = (Integer)recAtributes.get(VAL2_ID);
                              ^
../annotator/url3472127e1f_SergeyKrivohatskiy_tiny_database_tgz-pJ8-ru_spbau_tinydb_bufferManager_IndexTestJ8/src/ru/spbau/tinydb/metainformation/MetaInformationTable.java:107: error: [unboxing.of.nullable] unboxing a possibly-null reference (Integer)recAtributes.get(VAL1_ID)
            firstPage = (Integer)recAtributes.get(VAL1_ID);
                        ^
../annotator/url3472127e1f_SergeyKrivohatskiy_tiny_database_tgz-pJ8-ru_spbau_tinydb_bufferManager_IndexTestJ8/src/ru/spbau/tinydb/metainformation/MetaInformationTable.java:121: error: [unboxing.of.nullable] unboxing a possibly-null reference atrIdx
    		indexes.put(attributes.get(atrIdx), new BxTree(bufferManager, firstPage));
    		                           ^
../annotator/url3472127e1f_SergeyKrivohatskiy_tiny_database_tgz-pJ8-ru_spbau_tinydb_bufferManager_IndexTestJ8/src/ru/spbau/tinydb/metainformation/MetaInformationTable.java:121: error: [unboxing.of.nullable] unboxing a possibly-null reference firstPage
    		indexes.put(attributes.get(atrIdx), new BxTree(bufferManager, firstPage));
    		                                                              ^
../annotator/url3472127e1f_SergeyKrivohatskiy_tiny_database_tgz-pJ8-ru_spbau_tinydb_bufferManager_IndexTestJ8/src/ru/spbau/tinydb/metainformation/MetaInformationTable.java:132: error: [unboxing.of.nullable] unboxing a possibly-null reference atrIdx
    		if(atrIdx == atributeIdx) {
    		   ^
../annotator/url3472127e1f_SergeyKrivohatskiy_tiny_database_tgz-pJ8-ru_spbau_tinydb_bufferManager_IndexTestJ8/src/ru/spbau/tinydb/metainformation/MetaInformationTable.java:145: error: [iterating.over.nullable] iterating over possibly-null reference table
			for(Record rec: table) {
			                ^
../annotator/url3472127e1f_SergeyKrivohatskiy_tiny_database_tgz-pJ8-ru_spbau_tinydb_bufferManager_IndexTestJ8/src/ru/spbau/tinydb/metainformation/MetaInformationTable.java:147: error: [unboxing.of.nullable] unboxing a possibly-null reference val
				index.insert(val, rec.getRecordId());
				             ^
../annotator/url3472127e1f_SergeyKrivohatskiy_tiny_database_tgz-pJ8-ru_spbau_tinydb_bufferManager_IndexTestJ8/src/ru/spbau/tinydb/metainformation/MetaInformationTable.java:161: error: [switching.nullable] switching on a possibly-null value ((Integer)row.get(VAL1_ID))
        switch ((Integer)row.get(VAL1_ID)){
               ^
../annotator/url3472127e1f_SergeyKrivohatskiy_tiny_database_tgz-pJ8-ru_spbau_tinydb_bufferManager_IndexTestJ8/src/ru/spbau/tinydb/metainformation/MetaInformationTable.java:167: error: [unboxing.of.nullable] unboxing a possibly-null reference (Integer)row.get(VAL2_ID)
                return new Attribute.VarcharType((Integer) row.get(VAL2_ID));
                                                 ^
../annotator/url3472127e1f_SergeyKrivohatskiy_tiny_database_tgz-pJ8-ru_spbau_tinydb_bufferManager_IndexTestJ8/src/ru/spbau/tinydb/table/Table.java:47: error: [method.invocation] call to getAttrSize(ru.spbau.tinydb.queries.Attribute) not allowed on the given receiver.
            recordSize += getAttrSize(attribute);
                                     ^
  found   : @UnderInitialization @NonNull Table
  required: @Initialized @NonNull Table
../annotator/url3472127e1f_SergeyKrivohatskiy_tiny_database_tgz-pJ8-ru_spbau_tinydb_bufferManager_IndexTestJ8/src/ru/spbau/tinydb/table/Table.java:115: error: [unboxing.of.nullable] unboxing a possibly-null reference atrToIdx.get(key)
		return atrToIdx.get(key);
		                   ^
../annotator/url3472127e1f_SergeyKrivohatskiy_tiny_database_tgz-pJ8-ru_spbau_tinydb_bufferManager_IndexTestJ8/src/ru/spbau/tinydb/table/TableBase.java:39: error: [method.invocation] call to loadHeader() not allowed on the given receiver.
        loadHeader();
                  ^
  found   : @UnderInitialization(ru.spbau.tinydb.table.TableBase.class) @NonNull TableBase
  required: @Initialized @NonNull TableBase
../annotator/url3472127e1f_SergeyKrivohatskiy_tiny_database_tgz-pJ8-ru_spbau_tinydb_bufferManager_IndexTestJ8/src/ru/spbau/tinydb/table/TableBase.java:193: error: [method.invocation] call to getNextView() not allowed on the given receiver.
            @Nullable private ViewWithId value = getNextView();
                                                            ^
  found   : @Initialized @NonNull TableBase.@UnderInitialization(<anonymous java.util.Iterator<ru.spbau.tinydb.table.ViewWithId>>.class) @NonNull <anonymous ru.spbau.tinydb.table.TableBase$1>
  required: @Initialized @NonNull TableBase.@Initialized @NonNull <anonymous ru.spbau.tinydb.table.TableBase$1>
../annotator/url3472127e1f_SergeyKrivohatskiy_tiny_database_tgz-pJ8-ru_spbau_tinydb_bufferManager_IndexTestJ8/src/ru/spbau/tinydb/table/TableBase.java:254: error: [override.return] Incompatible return type.
            public ViewWithId next() {
                   ^
  found   : @Initialized @Nullable ViewWithId
  required: @Initialized @NonNull ViewWithId
  Consequence: method in @Initialized @NonNull TableBase.@Initialized @NonNull <anonymous ru.spbau.tinydb.table.TableBase$1>
    @Initialized @Nullable ViewWithId next(@Initialized @NonNull TableBase.@Initialized @NonNull <anonymous ru.spbau.tinydb.table.TableBase$1> this)
  cannot override method in @Initialized @NonNull Iterator<@Initialized @NonNull ViewWithId>
    @Initialized @NonNull ViewWithId next(@Initialized @NonNull Iterator<@Initialized @NonNull ViewWithId> this)
../annotator/url3472127e1f_SergeyKrivohatskiy_tiny_database_tgz-pJ8-ru_spbau_tinydb_bufferManager_IndexTestJ8/src/ru/spbau/tinydb/cursors/NLJoinCursor.java:30: error: [method.invocation] call to getValue() not allowed on the given receiver.
        value = getValue();
                        ^
  found   : @UnderInitialization(ru.spbau.tinydb.cursors.NLJoinCursor.class) @NonNull NLJoinCursor
  required: @Initialized @NonNull NLJoinCursor
../annotator/url3472127e1f_SergeyKrivohatskiy_tiny_database_tgz-pJ8-ru_spbau_tinydb_bufferManager_IndexTestJ8/src/ru/spbau/tinydb/cursors/NLJoinCursor.java:42: error: [dereference.of.nullable] dereference of possibly-null reference secondCursor
            while (secondCursor.hasNext()) {
                   ^
../annotator/url3472127e1f_SergeyKrivohatskiy_tiny_database_tgz-pJ8-ru_spbau_tinydb_bufferManager_IndexTestJ8/src/ru/spbau/tinydb/cursors/NLJoinCursor.java:43: error: [argument] incompatible argument for parameter firstVal of Utils.join.
                Map<SecondLevelId, Object> val = Utils.join(firstVal, secondCursor.next());
                                                            ^
  found   : @Initialized @Nullable Map<@Initialized @NonNull SecondLevelId, @Initialized @NonNull Object>
  required: @Initialized @NonNull Map<@Initialized @NonNull SecondLevelId, @Initialized @NonNull Object>
../annotator/url3472127e1f_SergeyKrivohatskiy_tiny_database_tgz-pJ8-ru_spbau_tinydb_bufferManager_IndexTestJ8/src/ru/spbau/tinydb/cursors/NLJoinCursor.java:58: error: [override.return] Incompatible return type.
    public Map<SecondLevelId, Object> next() {
              ^
  found   : @Initialized @Nullable Map<@Initialized @NonNull SecondLevelId, @Initialized @NonNull Object>
  required: @Initialized @NonNull Map<@Initialized @NonNull SecondLevelId, @Initialized @NonNull Object>
  Consequence: method in @Initialized @NonNull NLJoinCursor
    @Initialized @Nullable Map<@Initialized @NonNull SecondLevelId, @Initialized @NonNull Object> next(@Initialized @NonNull NLJoinCursor this)
  cannot override method in @Initialized @NonNull Iterator<@Initialized @NonNull Map<@Initialized @NonNull SecondLevelId, @Initialized @NonNull Object>>
    @Initialized @NonNull Map<@Initialized @NonNull SecondLevelId, @Initialized @NonNull Object> next(@Initialized @NonNull Iterator<@Initialized @NonNull Map<@Initialized @NonNull SecondLevelId, @Initialized @NonNull Object>> this)
../annotator/url3472127e1f_SergeyKrivohatskiy_tiny_database_tgz-pJ8-ru_spbau_tinydb_bufferManager_IndexTestJ8/src/ru/spbau/tinydb/cursors/WhereCursor.java:28: error: [method.invocation] call to getValues() not allowed on the given receiver.
        record = getValues();
                          ^
  found   : @UnderInitialization(ru.spbau.tinydb.cursors.WhereCursor.class) @NonNull WhereCursor
  required: @Initialized @NonNull WhereCursor
../annotator/url3472127e1f_SergeyKrivohatskiy_tiny_database_tgz-pJ8-ru_spbau_tinydb_bufferManager_IndexTestJ8/src/ru/spbau/tinydb/cursors/WhereCursor.java:51: error: [override.return] Incompatible return type.
    public Record next() {
           ^
  found   : @Initialized @Nullable Record
  required: @Initialized @NonNull Record
  Consequence: method in @Initialized @NonNull WhereCursor
    @Initialized @Nullable Record next(@Initialized @NonNull WhereCursor this)
  cannot override method in @Initialized @NonNull Iterator<@Initialized @NonNull Record>
    @Initialized @NonNull Record next(@Initialized @NonNull Iterator<@Initialized @NonNull Record> this)
../annotator/url3472127e1f_SergeyKrivohatskiy_tiny_database_tgz-pJ8-ru_spbau_tinydb_bufferManager_IndexTestJ8/src/ru/spbau/tinydb/cursors/IndexJoinCursor.java:29: error: [method.invocation] call to getRow() not allowed on the given receiver.
			row = getRow();
			            ^
  found   : @UnderInitialization(ru.spbau.tinydb.cursors.IndexJoinCursor.class) @NonNull IndexJoinCursor
  required: @Initialized @NonNull IndexJoinCursor
../annotator/url3472127e1f_SergeyKrivohatskiy_tiny_database_tgz-pJ8-ru_spbau_tinydb_bufferManager_IndexTestJ8/src/ru/spbau/tinydb/cursors/IndexJoinCursor.java:42: error: [unboxing.of.nullable] unboxing a possibly-null reference key
			final Iterator<Record> iter = Utils.indexIterToRecordIter(joinTable, index.find(key, key, true, true));
			                                                                                ^
../annotator/url3472127e1f_SergeyKrivohatskiy_tiny_database_tgz-pJ8-ru_spbau_tinydb_bufferManager_IndexTestJ8/src/ru/spbau/tinydb/cursors/IndexJoinCursor.java:69: error: [override.return] Incompatible return type.
	public Map<SecondLevelId, Object> next() {
	          ^
  found   : @Initialized @Nullable Map<@Initialized @NonNull SecondLevelId, @Initialized @NonNull Object>
  required: @Initialized @NonNull Map<@Initialized @NonNull SecondLevelId, @Initialized @NonNull Object>
  Consequence: method in @Initialized @NonNull IndexJoinCursor
    @Initialized @Nullable Map<@Initialized @NonNull SecondLevelId, @Initialized @NonNull Object> next(@Initialized @NonNull IndexJoinCursor this)
  cannot override method in @Initialized @NonNull Iterator<@Initialized @NonNull Map<@Initialized @NonNull SecondLevelId, @Initialized @NonNull Object>>
    @Initialized @NonNull Map<@Initialized @NonNull SecondLevelId, @Initialized @NonNull Object> next(@Initialized @NonNull Iterator<@Initialized @NonNull Map<@Initialized @NonNull SecondLevelId, @Initialized @NonNull Object>> this)
../annotator/url3472127e1f_SergeyKrivohatskiy_tiny_database_tgz-pJ8-ru_spbau_tinydb_bufferManager_IndexTestJ8/src/ru/spbau/tinydb/bufferManager/MetaInfTest.java:36: error: [iterating.over.nullable] iterating over possibly-null reference testTable
        for(Record rec: testTable) {
                        ^
../annotator/url3472127e1f_SergeyKrivohatskiy_tiny_database_tgz-pJ8-ru_spbau_tinydb_bufferManager_IndexTestJ8/src/ru/spbau/tinydb/bufferManager/MetaInfTest.java:37: error: [dereference.of.nullable] dereference of possibly-null reference rec.getAttributes().get(new SecondLevelId("testTable", "testAttr"))
            if(!rec.getAttributes().get(new SecondLevelId("testTable", "testAttr")).equals("testValue")) {
                                       ^
../annotator/url3472127e1f_SergeyKrivohatskiy_tiny_database_tgz-pJ8-ru_spbau_tinydb_bufferManager_IndexTestJ8/src/ru/spbau/tinydb/bufferManager/TableTest.java:50: error: [unboxing.of.nullable] unboxing a possibly-null reference (Integer)recAtributes.get(new SecondLevelId("name", "Test int attr"))
            if ((Integer)recAtributes.get(new SecondLevelId("name", "Test int attr")) != 123454) {
                ^
../annotator/url3472127e1f_SergeyKrivohatskiy_tiny_database_tgz-pJ8-ru_spbau_tinydb_bufferManager_IndexTestJ8/src/ru/spbau/tinydb/utils/Utils.java:83: error: [method.invocation] call to getNext() not allowed on the given receiver.
			@Nullable private Record rec = getNext();
			                                      ^
  found   : @UnderInitialization(<anonymous java.util.Iterator<ru.spbau.tinydb.table.Record>>.class) @NonNull <anonymous ru.spbau.tinydb.utils.Utils$1>
  required: @Initialized @NonNull <anonymous ru.spbau.tinydb.utils.Utils$1>
../annotator/url3472127e1f_SergeyKrivohatskiy_tiny_database_tgz-pJ8-ru_spbau_tinydb_bufferManager_IndexTestJ8/src/ru/spbau/tinydb/utils/Utils.java:85: error: [override.return] Incompatible return type.
			public Record next() {
			       ^
  found   : @Initialized @Nullable Record
  required: @Initialized @NonNull Record
  Consequence: method in @Initialized @NonNull <anonymous ru.spbau.tinydb.utils.Utils$1>
    @Initialized @Nullable Record next(@Initialized @NonNull <anonymous ru.spbau.tinydb.utils.Utils$1> this)
  cannot override method in @Initialized @NonNull Iterator<@Initialized @NonNull Record>
    @Initialized @NonNull Record next(@Initialized @NonNull Iterator<@Initialized @NonNull Record> this)
../annotator/url3472127e1f_SergeyKrivohatskiy_tiny_database_tgz-pJ8-ru_spbau_tinydb_bufferManager_IndexTestJ8/src/ru/spbau/tinydb/repl/ConsoleREPLRunnable.java:72: error: [dereference.of.nullable] dereference of possibly-null reference (line = getStdIn().readLine())
            while (!(line = getStdIn().readLine()).equals("")) {
                    ^
../annotator/url3472127e1f_SergeyKrivohatskiy_tiny_database_tgz-pJ8-ru_spbau_tinydb_bufferManager_IndexTestJ8/src/ru/spbau/tinydb/repl/REPLRunnable.java:118: error: [conflicting.annos] invalid type: conflicting annotations [@Initialized, @NonNull, @Nullable] in type "@Initialized @NonNull @Nullable Object"
            return query.execute(DataBaseEngine.getDBInstance(dbFileName));
                                ^
../annotator/url3472127e1f_SergeyKrivohatskiy_tiny_database_tgz-pJ8-ru_spbau_tinydb_bufferManager_IndexTestJ8/src/ru/spbau/tinydb/repl/REPLRunnable.java:148: error: [argument] incompatible argument for parameter allAttributes of REPLRunnable.getSelectedAttributes.
            Set<SecondLevelId> attributes = getSelectedAttributes(attributesList, row.keySet());
                                                                                            ^
  found   : Set<@KeyFor("row") SecondLevelId>
  required: Set<SecondLevelId>
Note: ../annotator/url3472127e1f_SergeyKrivohatskiy_tiny_database_tgz-pJ8-ru_spbau_tinydb_bufferManager_IndexTestJ8/src/ru/spbau/tinydb/grammar/SQLGrammarParser.java uses or overrides a deprecated API.
Note: Recompile with -Xlint:deprecation for details.
Note: Some input files use unchecked or unsafe operations.
Note: Recompile with -Xlint:unchecked for details.
60 errors
