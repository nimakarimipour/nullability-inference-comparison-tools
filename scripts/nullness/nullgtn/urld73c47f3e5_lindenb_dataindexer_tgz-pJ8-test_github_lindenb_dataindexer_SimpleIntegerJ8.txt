../nullgtn/urld73c47f3e5_lindenb_dataindexer_tgz-pJ8-test_github_lindenb_dataindexer_SimpleIntegerJ8/src/test/github/lindenb/dataindexer/dbsnp/DBSnpLoader.java:35: error: [initialization.field.uninitialized] the default constructor does not initialize field dbSnp137File
    private File dbSnp137File;
                 ^
../nullgtn/urld73c47f3e5_lindenb_dataindexer_tgz-pJ8-test_github_lindenb_dataindexer_SimpleIntegerJ8/src/test/github/lindenb/dataindexer/dbsnp/DBSnpLoader.java:54: error: [override.param] Incompatible parameter type for obj.
        public boolean equals(Object obj) {
                                     ^
  found   : @Initialized @NonNull Object
  required: @Initialized @Nullable Object
  Consequence: method in @Initialized @NonNull Rs
    @Initialized @NonNull boolean equals(@Initialized @NonNull Rs this, @Initialized @NonNull Object p0)
  cannot override method in @Initialized @NonNull Object
    @Initialized @NonNull boolean equals(@Initialized @NonNull Object this, @Initialized @Nullable Object p0)
../nullgtn/urld73c47f3e5_lindenb_dataindexer_tgz-pJ8-test_github_lindenb_dataindexer_SimpleIntegerJ8/src/test/github/lindenb/dataindexer/dbsnp/DBSnpLoader.java:77: error: [initialization.field.uninitialized] the default constructor does not initialize field chrom
        String chrom;
               ^
../nullgtn/urld73c47f3e5_lindenb_dataindexer_tgz-pJ8-test_github_lindenb_dataindexer_SimpleIntegerJ8/src/test/github/lindenb/dataindexer/dbsnp/DBSnpLoader.java:83: error: [initialization.field.uninitialized] the default constructor does not initialize field rs_id
        Rs rs_id;
           ^
../nullgtn/urld73c47f3e5_lindenb_dataindexer_tgz-pJ8-test_github_lindenb_dataindexer_SimpleIntegerJ8/src/test/github/lindenb/dataindexer/dbsnp/DBSnpLoader.java:94: error: [override.param] Incompatible parameter type for in.
        public Snp readObject(DataInputStream in) throws IOException {
                                              ^
  found   : @Initialized @NonNull DataInputStream
  required: @Initialized @Nullable DataInputStream
  Consequence: method in @Initialized @NonNull SnpBinding
    @Initialized @NonNull Snp readObject(@Initialized @NonNull SnpBinding this, @Initialized @NonNull DataInputStream p0) throws @Initialized @NonNull IOException
  cannot override method in @Initialized @NonNull TupleBinding<@Initialized @NonNull Snp>
    @Initialized @NonNull Snp readObject(@Initialized @NonNull TupleBinding<@Initialized @NonNull Snp> this, @Initialized @Nullable DataInputStream p0) throws @Initialized @NonNull IOException
../nullgtn/urld73c47f3e5_lindenb_dataindexer_tgz-pJ8-test_github_lindenb_dataindexer_SimpleIntegerJ8/src/test/github/lindenb/dataindexer/dbsnp/DBSnpLoader.java:105: error: [override.param] Incompatible parameter type for o.
        public void writeObject(final Snp o, DataOutputStream out) throws IOException {
                                          ^
  found   : @Initialized @NonNull Snp
  required: @Initialized @Nullable Snp
  Consequence: method in @Initialized @NonNull SnpBinding
    @NonNull void writeObject(@Initialized @NonNull SnpBinding this, @Initialized @NonNull Snp p0, @Initialized @NonNull DataOutputStream p1) throws @Initialized @NonNull IOException
  cannot override method in @Initialized @NonNull TupleBinding<@Initialized @NonNull Snp>
    @NonNull void writeObject(@Initialized @NonNull TupleBinding<@Initialized @NonNull Snp> this, @Initialized @Nullable Snp p0, @Initialized @Nullable DataOutputStream p1) throws @Initialized @NonNull IOException
../nullgtn/urld73c47f3e5_lindenb_dataindexer_tgz-pJ8-test_github_lindenb_dataindexer_SimpleIntegerJ8/src/test/github/lindenb/dataindexer/dbsnp/DBSnpLoader.java:105: error: [override.param] Incompatible parameter type for out.
        public void writeObject(final Snp o, DataOutputStream out) throws IOException {
                                                              ^
  found   : @Initialized @NonNull DataOutputStream
  required: @Initialized @Nullable DataOutputStream
  Consequence: method in @Initialized @NonNull SnpBinding
    @NonNull void writeObject(@Initialized @NonNull SnpBinding this, @Initialized @NonNull Snp p0, @Initialized @NonNull DataOutputStream p1) throws @Initialized @NonNull IOException
  cannot override method in @Initialized @NonNull TupleBinding<@Initialized @NonNull Snp>
    @NonNull void writeObject(@Initialized @NonNull TupleBinding<@Initialized @NonNull Snp> this, @Initialized @Nullable Snp p0, @Initialized @Nullable DataOutputStream p1) throws @Initialized @NonNull IOException
../nullgtn/urld73c47f3e5_lindenb_dataindexer_tgz-pJ8-test_github_lindenb_dataindexer_SimpleIntegerJ8/src/test/github/lindenb/dataindexer/dbsnp/DBSnpLoader.java:146: error: [override.param] Incompatible parameter type for in.
            public Rs readObject(DataInputStream in) throws IOException {
                                                 ^
  found   : @Initialized @NonNull DataInputStream
  required: @Initialized @Nullable DataInputStream
  Consequence: method in @Initialized @NonNull DBSnpLoader.@Initialized @NonNull <anonymous test.github.lindenb.dataindexer.dbsnp.DBSnpLoader$2>
    @Initialized @NonNull Rs readObject(@Initialized @NonNull DBSnpLoader.@Initialized @NonNull <anonymous test.github.lindenb.dataindexer.dbsnp.DBSnpLoader$2> this, @Initialized @NonNull DataInputStream p0) throws @Initialized @NonNull IOException
  cannot override method in @Initialized @NonNull TupleBinding<@Initialized @NonNull Rs>
    @Initialized @NonNull Rs readObject(@Initialized @NonNull TupleBinding<@Initialized @NonNull Rs> this, @Initialized @Nullable DataInputStream p0) throws @Initialized @NonNull IOException
../nullgtn/urld73c47f3e5_lindenb_dataindexer_tgz-pJ8-test_github_lindenb_dataindexer_SimpleIntegerJ8/src/test/github/lindenb/dataindexer/dbsnp/DBSnpLoader.java:151: error: [override.param] Incompatible parameter type for o.
            public void writeObject(Rs o, DataOutputStream out) throws IOException {
                                       ^
  found   : @Initialized @NonNull Rs
  required: @Initialized @Nullable Rs
  Consequence: method in @Initialized @NonNull DBSnpLoader.@Initialized @NonNull <anonymous test.github.lindenb.dataindexer.dbsnp.DBSnpLoader$2>
    @NonNull void writeObject(@Initialized @NonNull DBSnpLoader.@Initialized @NonNull <anonymous test.github.lindenb.dataindexer.dbsnp.DBSnpLoader$2> this, @Initialized @NonNull Rs p0, @Initialized @NonNull DataOutputStream p1) throws @Initialized @NonNull IOException
  cannot override method in @Initialized @NonNull TupleBinding<@Initialized @NonNull Rs>
    @NonNull void writeObject(@Initialized @NonNull TupleBinding<@Initialized @NonNull Rs> this, @Initialized @Nullable Rs p0, @Initialized @Nullable DataOutputStream p1) throws @Initialized @NonNull IOException
../nullgtn/urld73c47f3e5_lindenb_dataindexer_tgz-pJ8-test_github_lindenb_dataindexer_SimpleIntegerJ8/src/test/github/lindenb/dataindexer/dbsnp/DBSnpLoader.java:151: error: [override.param] Incompatible parameter type for out.
            public void writeObject(Rs o, DataOutputStream out) throws IOException {
                                                           ^
  found   : @Initialized @NonNull DataOutputStream
  required: @Initialized @Nullable DataOutputStream
  Consequence: method in @Initialized @NonNull DBSnpLoader.@Initialized @NonNull <anonymous test.github.lindenb.dataindexer.dbsnp.DBSnpLoader$2>
    @NonNull void writeObject(@Initialized @NonNull DBSnpLoader.@Initialized @NonNull <anonymous test.github.lindenb.dataindexer.dbsnp.DBSnpLoader$2> this, @Initialized @NonNull Rs p0, @Initialized @NonNull DataOutputStream p1) throws @Initialized @NonNull IOException
  cannot override method in @Initialized @NonNull TupleBinding<@Initialized @NonNull Rs>
    @NonNull void writeObject(@Initialized @NonNull TupleBinding<@Initialized @NonNull Rs> this, @Initialized @Nullable Rs p0, @Initialized @Nullable DataOutputStream p1) throws @Initialized @NonNull IOException
../nullgtn/urld73c47f3e5_lindenb_dataindexer_tgz-pJ8-test_github_lindenb_dataindexer_SimpleIntegerJ8/src/test/github/lindenb/dataindexer/dbsnp/DBSnpLoader.java:158: error: [override.param] Incompatible parameter type for t.
            public Set<Rs> getSecondaryKeys(Snp t) {
                                                ^
  found   : @Initialized @NonNull Snp
  required: @Initialized @Nullable Snp
  Consequence: method in @Initialized @NonNull DBSnpLoader.@Initialized @NonNull <anonymous test.github.lindenb.dataindexer.dbsnp.DBSnpLoader$3>
    @Initialized @NonNull Set<@Initialized @NonNull Rs> getSecondaryKeys(@Initialized @NonNull DBSnpLoader.@Initialized @NonNull <anonymous test.github.lindenb.dataindexer.dbsnp.DBSnpLoader$3> this, @Initialized @NonNull Snp p0)
  cannot override method in @Initialized @NonNull SecondaryKeyCreator<@Initialized @NonNull Snp, @Initialized @NonNull Rs>
    @Initialized @NonNull Set<@Initialized @NonNull Rs> getSecondaryKeys(@Initialized @NonNull SecondaryKeyCreator<@Initialized @NonNull Snp, @Initialized @NonNull Rs> this, @Initialized @Nullable Snp p0)
../nullgtn/urld73c47f3e5_lindenb_dataindexer_tgz-pJ8-test_github_lindenb_dataindexer_SimpleIntegerJ8/src/test/github/lindenb/dataindexer/SimpleInteger.java:23: error: [override.param] Incompatible parameter type for o.
            public void writeObject(Integer o, DataOutputStream out) throws IOException {
                                            ^
  found   : @Initialized @NonNull Integer
  required: @Initialized @Nullable Integer
  Consequence: method in @Initialized @NonNull SimpleInteger.@Initialized @NonNull <anonymous test.github.lindenb.dataindexer.SimpleInteger$1>
    @NonNull void writeObject(@Initialized @NonNull SimpleInteger.@Initialized @NonNull <anonymous test.github.lindenb.dataindexer.SimpleInteger$1> this, @Initialized @NonNull Integer p0, @Initialized @NonNull DataOutputStream p1) throws @Initialized @NonNull IOException
  cannot override method in @Initialized @NonNull TupleBinding<@Initialized @NonNull Integer>
    @NonNull void writeObject(@Initialized @NonNull TupleBinding<@Initialized @NonNull Integer> this, @Initialized @Nullable Integer p0, @Initialized @Nullable DataOutputStream p1) throws @Initialized @NonNull IOException
../nullgtn/urld73c47f3e5_lindenb_dataindexer_tgz-pJ8-test_github_lindenb_dataindexer_SimpleIntegerJ8/src/test/github/lindenb/dataindexer/SimpleInteger.java:23: error: [override.param] Incompatible parameter type for out.
            public void writeObject(Integer o, DataOutputStream out) throws IOException {
                                                                ^
  found   : @Initialized @NonNull DataOutputStream
  required: @Initialized @Nullable DataOutputStream
  Consequence: method in @Initialized @NonNull SimpleInteger.@Initialized @NonNull <anonymous test.github.lindenb.dataindexer.SimpleInteger$1>
    @NonNull void writeObject(@Initialized @NonNull SimpleInteger.@Initialized @NonNull <anonymous test.github.lindenb.dataindexer.SimpleInteger$1> this, @Initialized @NonNull Integer p0, @Initialized @NonNull DataOutputStream p1) throws @Initialized @NonNull IOException
  cannot override method in @Initialized @NonNull TupleBinding<@Initialized @NonNull Integer>
    @NonNull void writeObject(@Initialized @NonNull TupleBinding<@Initialized @NonNull Integer> this, @Initialized @Nullable Integer p0, @Initialized @Nullable DataOutputStream p1) throws @Initialized @NonNull IOException
../nullgtn/urld73c47f3e5_lindenb_dataindexer_tgz-pJ8-test_github_lindenb_dataindexer_SimpleIntegerJ8/src/test/github/lindenb/dataindexer/SimpleInteger.java:28: error: [override.param] Incompatible parameter type for in.
            public Integer readObject(DataInputStream in) throws IOException {
                                                      ^
  found   : @Initialized @NonNull DataInputStream
  required: @Initialized @Nullable DataInputStream
  Consequence: method in @Initialized @NonNull SimpleInteger.@Initialized @NonNull <anonymous test.github.lindenb.dataindexer.SimpleInteger$1>
    @Initialized @NonNull Integer readObject(@Initialized @NonNull SimpleInteger.@Initialized @NonNull <anonymous test.github.lindenb.dataindexer.SimpleInteger$1> this, @Initialized @NonNull DataInputStream p0) throws @Initialized @NonNull IOException
  cannot override method in @Initialized @NonNull TupleBinding<@Initialized @NonNull Integer>
    @Initialized @NonNull Integer readObject(@Initialized @NonNull TupleBinding<@Initialized @NonNull Integer> this, @Initialized @Nullable DataInputStream p0) throws @Initialized @NonNull IOException
../nullgtn/urld73c47f3e5_lindenb_dataindexer_tgz-pJ8-test_github_lindenb_dataindexer_SimpleIntegerJ8/src/test/github/lindenb/dataindexer/SimpleInteger.java:37: error: [override.param] Incompatible parameter type for o.
            public void writeObject(Integer o, DataOutputStream out) throws IOException {
                                            ^
  found   : @Initialized @NonNull Integer
  required: @Initialized @Nullable Integer
  Consequence: method in @Initialized @NonNull SimpleInteger.@Initialized @NonNull <anonymous test.github.lindenb.dataindexer.SimpleInteger$2>
    @NonNull void writeObject(@Initialized @NonNull SimpleInteger.@Initialized @NonNull <anonymous test.github.lindenb.dataindexer.SimpleInteger$2> this, @Initialized @NonNull Integer p0, @Initialized @NonNull DataOutputStream p1) throws @Initialized @NonNull IOException
  cannot override method in @Initialized @NonNull TupleBinding<@Initialized @NonNull Integer>
    @NonNull void writeObject(@Initialized @NonNull TupleBinding<@Initialized @NonNull Integer> this, @Initialized @Nullable Integer p0, @Initialized @Nullable DataOutputStream p1) throws @Initialized @NonNull IOException
../nullgtn/urld73c47f3e5_lindenb_dataindexer_tgz-pJ8-test_github_lindenb_dataindexer_SimpleIntegerJ8/src/test/github/lindenb/dataindexer/SimpleInteger.java:37: error: [override.param] Incompatible parameter type for out.
            public void writeObject(Integer o, DataOutputStream out) throws IOException {
                                                                ^
  found   : @Initialized @NonNull DataOutputStream
  required: @Initialized @Nullable DataOutputStream
  Consequence: method in @Initialized @NonNull SimpleInteger.@Initialized @NonNull <anonymous test.github.lindenb.dataindexer.SimpleInteger$2>
    @NonNull void writeObject(@Initialized @NonNull SimpleInteger.@Initialized @NonNull <anonymous test.github.lindenb.dataindexer.SimpleInteger$2> this, @Initialized @NonNull Integer p0, @Initialized @NonNull DataOutputStream p1) throws @Initialized @NonNull IOException
  cannot override method in @Initialized @NonNull TupleBinding<@Initialized @NonNull Integer>
    @NonNull void writeObject(@Initialized @NonNull TupleBinding<@Initialized @NonNull Integer> this, @Initialized @Nullable Integer p0, @Initialized @Nullable DataOutputStream p1) throws @Initialized @NonNull IOException
../nullgtn/urld73c47f3e5_lindenb_dataindexer_tgz-pJ8-test_github_lindenb_dataindexer_SimpleIntegerJ8/src/test/github/lindenb/dataindexer/SimpleInteger.java:42: error: [override.param] Incompatible parameter type for in.
            public Integer readObject(DataInputStream in) throws IOException {
                                                      ^
  found   : @Initialized @NonNull DataInputStream
  required: @Initialized @Nullable DataInputStream
  Consequence: method in @Initialized @NonNull SimpleInteger.@Initialized @NonNull <anonymous test.github.lindenb.dataindexer.SimpleInteger$2>
    @Initialized @NonNull Integer readObject(@Initialized @NonNull SimpleInteger.@Initialized @NonNull <anonymous test.github.lindenb.dataindexer.SimpleInteger$2> this, @Initialized @NonNull DataInputStream p0) throws @Initialized @NonNull IOException
  cannot override method in @Initialized @NonNull TupleBinding<@Initialized @NonNull Integer>
    @Initialized @NonNull Integer readObject(@Initialized @NonNull TupleBinding<@Initialized @NonNull Integer> this, @Initialized @Nullable DataInputStream p0) throws @Initialized @NonNull IOException
../nullgtn/urld73c47f3e5_lindenb_dataindexer_tgz-pJ8-test_github_lindenb_dataindexer_SimpleIntegerJ8/src/test/github/lindenb/dataindexer/SimpleInteger.java:50: error: [override.param] Incompatible parameter type for t.
            public Set<Integer> getSecondaryKeys(Integer t) {
                                                         ^
  found   : @Initialized @NonNull Integer
  required: @Initialized @Nullable Integer
  Consequence: method in @Initialized @NonNull SimpleInteger.@Initialized @NonNull <anonymous test.github.lindenb.dataindexer.SimpleInteger$3>
    @Initialized @NonNull Set<@Initialized @NonNull Integer> getSecondaryKeys(@Initialized @NonNull SimpleInteger.@Initialized @NonNull <anonymous test.github.lindenb.dataindexer.SimpleInteger$3> this, @Initialized @NonNull Integer p0)
  cannot override method in @Initialized @NonNull SecondaryKeyCreator<@Initialized @NonNull Integer, @Initialized @NonNull Integer>
    @Initialized @NonNull Set<@Initialized @NonNull Integer> getSecondaryKeys(@Initialized @NonNull SecondaryKeyCreator<@Initialized @NonNull Integer, @Initialized @NonNull Integer> this, @Initialized @Nullable Integer p0)
../nullgtn/urld73c47f3e5_lindenb_dataindexer_tgz-pJ8-test_github_lindenb_dataindexer_SimpleIntegerJ8/src/com/github/lindenb/dataindexer/SecondaryDatabaseReader.java:212: error: [override.param] Incompatible parameter type for real_index.
        protected T priv_get(long real_index) throws IOException {
                                  ^
  found   : @Initialized @NonNull long
  required: @Initialized @Nullable long
  Consequence: method in @Initialized @NonNull SecondaryDatabaseReader<PRIMARY extends @Initialized @Nullable Object, T extends @Initialized @Nullable Object>.@Initialized @NonNull IntervalList
    T extends @Initialized @Nullable Object priv_get(@Initialized @NonNull SecondaryDatabaseReader<PRIMARY extends @Initialized @Nullable Object, T extends @Initialized @Nullable Object>.@Initialized @NonNull IntervalList this, @Initialized @NonNull long p0) throws @Initialized @NonNull IOException
  cannot override method in @Initialized @NonNull SecondaryDatabaseReader<PRIMARY extends @Initialized @Nullable Object, T extends @Initialized @Nullable Object>.@Initialized @NonNull AbstractIntervalList<T extends @Initialized @Nullable Object>
    T extends @Initialized @Nullable Object priv_get(@Initialized @NonNull SecondaryDatabaseReader<PRIMARY extends @Initialized @Nullable Object, T extends @Initialized @Nullable Object>.@Initialized @NonNull AbstractIntervalList<T extends @Initialized @Nullable Object> this, @Initialized @Nullable long p0) throws @Initialized @NonNull IOException
../nullgtn/urld73c47f3e5_lindenb_dataindexer_tgz-pJ8-test_github_lindenb_dataindexer_SimpleIntegerJ8/src/com/github/lindenb/dataindexer/SecondaryDatabaseReader.java:229: error: [override.param] Incompatible parameter type for real_index.
        protected Pair<PRIMARY, T> priv_get(long real_index) throws IOException {
                                                 ^
  found   : @Initialized @NonNull long
  required: @Initialized @Nullable long
  Consequence: method in @Initialized @NonNull SecondaryDatabaseReader<PRIMARY extends @Initialized @Nullable Object, T extends @Initialized @Nullable Object>.@Initialized @NonNull PrimaryList
    @Initialized @NonNull Pair<PRIMARY extends @Initialized @Nullable Object, T extends @Initialized @Nullable Object> priv_get(@Initialized @NonNull SecondaryDatabaseReader<PRIMARY extends @Initialized @Nullable Object, T extends @Initialized @Nullable Object>.@Initialized @NonNull PrimaryList this, @Initialized @NonNull long p0) throws @Initialized @NonNull IOException
  cannot override method in @Initialized @NonNull SecondaryDatabaseReader<PRIMARY extends @Initialized @Nullable Object, T extends @Initialized @Nullable Object>.@Initialized @NonNull AbstractIntervalList<@Initialized @NonNull Pair<PRIMARY extends @Initialized @Nullable Object, T extends @Initialized @Nullable Object>>
    @Initialized @NonNull Pair<PRIMARY extends @Initialized @Nullable Object, T extends @Initialized @Nullable Object> priv_get(@Initialized @NonNull SecondaryDatabaseReader<PRIMARY extends @Initialized @Nullable Object, T extends @Initialized @Nullable Object>.@Initialized @NonNull AbstractIntervalList<@Initialized @NonNull Pair<PRIMARY extends @Initialized @Nullable Object, T extends @Initialized @Nullable Object>> this, @Initialized @Nullable long p0) throws @Initialized @NonNull IOException
../nullgtn/urld73c47f3e5_lindenb_dataindexer_tgz-pJ8-test_github_lindenb_dataindexer_SimpleIntegerJ8/src/com/github/lindenb/dataindexer/SecondaryDatabaseReader.java:249: error: [override.param] Incompatible parameter type for real_index.
        protected PRIMARY priv_get(long real_index) throws IOException {
                                        ^
  found   : @Initialized @NonNull long
  required: @Initialized @Nullable long
  Consequence: method in @Initialized @NonNull SecondaryDatabaseReader<PRIMARY extends @Initialized @Nullable Object, T extends @Initialized @Nullable Object>.@Initialized @NonNull PrimaryKeyList
    PRIMARY extends @Initialized @Nullable Object priv_get(@Initialized @NonNull SecondaryDatabaseReader<PRIMARY extends @Initialized @Nullable Object, T extends @Initialized @Nullable Object>.@Initialized @NonNull PrimaryKeyList this, @Initialized @NonNull long p0) throws @Initialized @NonNull IOException
  cannot override method in @Initialized @NonNull SecondaryDatabaseReader<PRIMARY extends @Initialized @Nullable Object, T extends @Initialized @Nullable Object>.@Initialized @NonNull AbstractIntervalList<PRIMARY extends @Initialized @Nullable Object>
    PRIMARY extends @Initialized @Nullable Object priv_get(@Initialized @NonNull SecondaryDatabaseReader<PRIMARY extends @Initialized @Nullable Object, T extends @Initialized @Nullable Object>.@Initialized @NonNull AbstractIntervalList<PRIMARY extends @Initialized @Nullable Object> this, @Initialized @Nullable long p0) throws @Initialized @NonNull IOException
../nullgtn/urld73c47f3e5_lindenb_dataindexer_tgz-pJ8-test_github_lindenb_dataindexer_SimpleIntegerJ8/src/com/github/lindenb/dataindexer/AbstractDatabaseReader.java:71: error: [condition.nullable] condition on a possibly-null value (isOpen())
        if (isOpen())
           ^
../nullgtn/urld73c47f3e5_lindenb_dataindexer_tgz-pJ8-test_github_lindenb_dataindexer_SimpleIntegerJ8/src/com/github/lindenb/dataindexer/AbstractDatabaseReader.java:85: error: [dereference.of.nullable] dereference of possibly-null reference getConfig().getRandomAccessFactory()
        this.dataFile = getConfig().getRandomAccessFactory().openForReading(getConfig().getDataFile());
                                                          ^
../nullgtn/urld73c47f3e5_lindenb_dataindexer_tgz-pJ8-test_github_lindenb_dataindexer_SimpleIntegerJ8/src/com/github/lindenb/dataindexer/AbstractDatabaseReader.java:131: error: [dereference.of.nullable] dereference of possibly-null reference this.indexFile
            this.indexFile.seek(idx * 8);
                ^
../nullgtn/urld73c47f3e5_lindenb_dataindexer_tgz-pJ8-test_github_lindenb_dataindexer_SimpleIntegerJ8/src/com/github/lindenb/dataindexer/AbstractDatabaseReader.java:132: error: [dereference.of.nullable] dereference of possibly-null reference indexFile
            return indexFile.readLong();
                   ^
../nullgtn/urld73c47f3e5_lindenb_dataindexer_tgz-pJ8-test_github_lindenb_dataindexer_SimpleIntegerJ8/src/com/github/lindenb/dataindexer/AbstractDatabaseReader.java:140: error: [dereference.of.nullable] dereference of possibly-null reference this.dataFile
        this.dataFile.seek(offset);
            ^
../nullgtn/urld73c47f3e5_lindenb_dataindexer_tgz-pJ8-test_github_lindenb_dataindexer_SimpleIntegerJ8/src/com/github/lindenb/dataindexer/AbstractDatabaseReader.java:141: error: [argument] incompatible argument for parameter in of DataInputStream constructor.
        DataInputStream dis = new DataInputStream(this.dataFile);
                                                      ^
  found   : @Initialized @Nullable RandomAccessInput
  required: @Initialized @NonNull InputStream
../nullgtn/urld73c47f3e5_lindenb_dataindexer_tgz-pJ8-test_github_lindenb_dataindexer_SimpleIntegerJ8/src/com/github/lindenb/dataindexer/AbstractDatabaseReader.java:149: error: [argument] incompatible argument for parameter offset of AbstractDatabaseReader.getItemFromOffset.
        return getItemFromOffset(getOffsetFromIndex(idx));
                                                   ^
  found   : @Initialized @Nullable long
  required: @Initialized @NonNull long
../nullgtn/urld73c47f3e5_lindenb_dataindexer_tgz-pJ8-test_github_lindenb_dataindexer_SimpleIntegerJ8/src/com/github/lindenb/dataindexer/Pair.java:18: error: [return] incompatible types in return.
        return first;
               ^
  type of expression: K[ extends @Initialized @Nullable Object super @Initialized @Nullable Void]
  method return type: K[ extends @Initialized @Nullable Object super @Initialized @NonNull Void]
../nullgtn/urld73c47f3e5_lindenb_dataindexer_tgz-pJ8-test_github_lindenb_dataindexer_SimpleIntegerJ8/src/com/github/lindenb/dataindexer/Pair.java:22: error: [return] incompatible types in return.
        return second;
               ^
  type of expression: V[ extends @Initialized @Nullable Object super @Initialized @Nullable Void]
  method return type: V[ extends @Initialized @Nullable Object super @Initialized @NonNull Void]
../nullgtn/urld73c47f3e5_lindenb_dataindexer_tgz-pJ8-test_github_lindenb_dataindexer_SimpleIntegerJ8/src/com/github/lindenb/dataindexer/Pair.java:35: error: [override.param] Incompatible parameter type for obj.
    public boolean equals(Object obj) {
                                 ^
  found   : @Initialized @NonNull Object
  required: @Initialized @Nullable Object
  Consequence: method in @Initialized @NonNull Pair<K extends @Initialized @Nullable Object, V extends @Initialized @Nullable Object>
    @Initialized @NonNull boolean equals(@Initialized @NonNull Pair<K extends @Initialized @Nullable Object, V extends @Initialized @Nullable Object> this, @Initialized @NonNull Object p0)
  cannot override method in @Initialized @NonNull Object
    @Initialized @NonNull boolean equals(@Initialized @NonNull Object this, @Initialized @Nullable Object p0)
../nullgtn/urld73c47f3e5_lindenb_dataindexer_tgz-pJ8-test_github_lindenb_dataindexer_SimpleIntegerJ8/src/com/github/lindenb/dataindexer/SecondaryConfig.java:9: error: [initialization.field.uninitialized] the default constructor does not initialize field keyCreator
    protected SecondaryKeyCreator<PRIMARY, K> keyCreator;
                                              ^
../nullgtn/urld73c47f3e5_lindenb_dataindexer_tgz-pJ8-test_github_lindenb_dataindexer_SimpleIntegerJ8/src/com/github/lindenb/dataindexer/SecondaryConfig.java:11: error: [initialization.field.uninitialized] the default constructor does not initialize field comparator
    private Comparator<K> comparator;
                          ^
../nullgtn/urld73c47f3e5_lindenb_dataindexer_tgz-pJ8-test_github_lindenb_dataindexer_SimpleIntegerJ8/src/com/github/lindenb/dataindexer/SecondaryConfig.java:68: error: [override.param] Incompatible parameter type for in.
            public ObjectAndOffset<K> readObject(DataInputStream in) throws IOException {
                                                                 ^
  found   : @Initialized @NonNull DataInputStream
  required: @Initialized @Nullable DataInputStream
  Consequence: method in @Initialized @NonNull SecondaryConfig<PRIMARY extends @Initialized @Nullable Object, K extends @Initialized @Nullable Object>.@Initialized @NonNull <anonymous com.github.lindenb.dataindexer.SecondaryConfig$1>
    @Initialized @NonNull ObjectAndOffset<K extends @Initialized @Nullable Object> readObject(@Initialized @NonNull SecondaryConfig<PRIMARY extends @Initialized @Nullable Object, K extends @Initialized @Nullable Object>.@Initialized @NonNull <anonymous com.github.lindenb.dataindexer.SecondaryConfig$1> this, @Initialized @NonNull DataInputStream p0) throws @Initialized @NonNull IOException
  cannot override method in @Initialized @NonNull TupleBinding<@Initialized @NonNull ObjectAndOffset<K extends @Initialized @Nullable Object>>
    @Initialized @NonNull ObjectAndOffset<K extends @Initialized @Nullable Object> readObject(@Initialized @NonNull TupleBinding<@Initialized @NonNull ObjectAndOffset<K extends @Initialized @Nullable Object>> this, @Initialized @Nullable DataInputStream p0) throws @Initialized @NonNull IOException
../nullgtn/urld73c47f3e5_lindenb_dataindexer_tgz-pJ8-test_github_lindenb_dataindexer_SimpleIntegerJ8/src/com/github/lindenb/dataindexer/SecondaryConfig.java:69: error: [dereference.of.nullable] dereference of possibly-null reference getKeyBinding()
                K object = getKeyBinding().readObject(in);
                                        ^
../nullgtn/urld73c47f3e5_lindenb_dataindexer_tgz-pJ8-test_github_lindenb_dataindexer_SimpleIntegerJ8/src/com/github/lindenb/dataindexer/SecondaryConfig.java:75: error: [override.param] Incompatible parameter type for o.
            public void writeObject(final ObjectAndOffset<K> o, java.io.DataOutputStream out) throws IOException {
                                                             ^
  found   : @Initialized @NonNull ObjectAndOffset<K extends @Initialized @Nullable Object>
  required: @Initialized @Nullable ObjectAndOffset<K extends @Initialized @Nullable Object>
  Consequence: method in @Initialized @NonNull SecondaryConfig<PRIMARY extends @Initialized @Nullable Object, K extends @Initialized @Nullable Object>.@Initialized @NonNull <anonymous com.github.lindenb.dataindexer.SecondaryConfig$1>
    @NonNull void writeObject(@Initialized @NonNull SecondaryConfig<PRIMARY extends @Initialized @Nullable Object, K extends @Initialized @Nullable Object>.@Initialized @NonNull <anonymous com.github.lindenb.dataindexer.SecondaryConfig$1> this, @Initialized @NonNull ObjectAndOffset<K extends @Initialized @Nullable Object> p0, @Initialized @NonNull DataOutputStream p1) throws @Initialized @NonNull IOException
  cannot override method in @Initialized @NonNull TupleBinding<@Initialized @NonNull ObjectAndOffset<K extends @Initialized @Nullable Object>>
    @NonNull void writeObject(@Initialized @NonNull TupleBinding<@Initialized @NonNull ObjectAndOffset<K extends @Initialized @Nullable Object>> this, @Initialized @Nullable ObjectAndOffset<K extends @Initialized @Nullable Object> p0, @Initialized @Nullable DataOutputStream p1) throws @Initialized @NonNull IOException
../nullgtn/urld73c47f3e5_lindenb_dataindexer_tgz-pJ8-test_github_lindenb_dataindexer_SimpleIntegerJ8/src/com/github/lindenb/dataindexer/SecondaryConfig.java:75: error: [override.param] Incompatible parameter type for out.
            public void writeObject(final ObjectAndOffset<K> o, java.io.DataOutputStream out) throws IOException {
                                                                                         ^
  found   : @Initialized @NonNull DataOutputStream
  required: @Initialized @Nullable DataOutputStream
  Consequence: method in @Initialized @NonNull SecondaryConfig<PRIMARY extends @Initialized @Nullable Object, K extends @Initialized @Nullable Object>.@Initialized @NonNull <anonymous com.github.lindenb.dataindexer.SecondaryConfig$1>
    @NonNull void writeObject(@Initialized @NonNull SecondaryConfig<PRIMARY extends @Initialized @Nullable Object, K extends @Initialized @Nullable Object>.@Initialized @NonNull <anonymous com.github.lindenb.dataindexer.SecondaryConfig$1> this, @Initialized @NonNull ObjectAndOffset<K extends @Initialized @Nullable Object> p0, @Initialized @NonNull DataOutputStream p1) throws @Initialized @NonNull IOException
  cannot override method in @Initialized @NonNull TupleBinding<@Initialized @NonNull ObjectAndOffset<K extends @Initialized @Nullable Object>>
    @NonNull void writeObject(@Initialized @NonNull TupleBinding<@Initialized @NonNull ObjectAndOffset<K extends @Initialized @Nullable Object>> this, @Initialized @Nullable ObjectAndOffset<K extends @Initialized @Nullable Object> p0, @Initialized @Nullable DataOutputStream p1) throws @Initialized @NonNull IOException
../nullgtn/urld73c47f3e5_lindenb_dataindexer_tgz-pJ8-test_github_lindenb_dataindexer_SimpleIntegerJ8/src/com/github/lindenb/dataindexer/SecondaryConfig.java:76: error: [dereference.of.nullable] dereference of possibly-null reference getKeyBinding()
                getKeyBinding().writeObject(o.getObject(), out);
                             ^
../nullgtn/urld73c47f3e5_lindenb_dataindexer_tgz-pJ8-test_github_lindenb_dataindexer_SimpleIntegerJ8/src/com/github/lindenb/dataindexer/SecondaryConfig.java:89: error: [override.return] Incompatible return type.
    public TupleBinding<ObjectAndOffset<K>> getDataBinding() {
                       ^
  found   : @Initialized @Nullable TupleBinding<@Initialized @NonNull ObjectAndOffset<K extends @Initialized @Nullable Object>>
  required: @Initialized @NonNull TupleBinding<@Initialized @NonNull ObjectAndOffset<K extends @Initialized @Nullable Object>>
  Consequence: method in @Initialized @NonNull SecondaryConfig<PRIMARY extends @Initialized @Nullable Object, K extends @Initialized @Nullable Object>
    @Initialized @Nullable TupleBinding<@Initialized @NonNull ObjectAndOffset<K extends @Initialized @Nullable Object>> getDataBinding(@Initialized @NonNull SecondaryConfig<PRIMARY extends @Initialized @Nullable Object, K extends @Initialized @Nullable Object> this)
  cannot override method in @Initialized @NonNull AbstractConfig<@Initialized @NonNull ObjectAndOffset<K extends @Initialized @Nullable Object>>
    @Initialized @NonNull TupleBinding<@Initialized @NonNull ObjectAndOffset<K extends @Initialized @Nullable Object>> getDataBinding(@Initialized @NonNull AbstractConfig<@Initialized @NonNull ObjectAndOffset<K extends @Initialized @Nullable Object>> this)
../nullgtn/urld73c47f3e5_lindenb_dataindexer_tgz-pJ8-test_github_lindenb_dataindexer_SimpleIntegerJ8/src/com/github/lindenb/dataindexer/AbstractConfig.java:13: error: [initialization.field.uninitialized] the default constructor does not initialize field homeDir
    private File homeDir;
                 ^
../nullgtn/urld73c47f3e5_lindenb_dataindexer_tgz-pJ8-test_github_lindenb_dataindexer_SimpleIntegerJ8/src/com/github/lindenb/dataindexer/AbstractConfig.java:15: error: [initialization.field.uninitialized] the default constructor does not initialize field name
    private String name;
                   ^
../nullgtn/urld73c47f3e5_lindenb_dataindexer_tgz-pJ8-test_github_lindenb_dataindexer_SimpleIntegerJ8/src/com/github/lindenb/dataindexer/AbstractConfig.java:17: error: [initialization.field.uninitialized] the default constructor does not initialize field sizeof_item
    private Integer sizeof_item;
                    ^
../nullgtn/urld73c47f3e5_lindenb_dataindexer_tgz-pJ8-test_github_lindenb_dataindexer_SimpleIntegerJ8/src/com/github/lindenb/dataindexer/AbstractConfig.java:85: error: [return] incompatible types in return.
        return logger;
               ^
  type of expression: @Initialized @Nullable Logger
  method return type: @Initialized @NonNull Logger
../nullgtn/urld73c47f3e5_lindenb_dataindexer_tgz-pJ8-test_github_lindenb_dataindexer_SimpleIntegerJ8/src/com/github/lindenb/dataindexer/PrimaryConfig.java:5: error: [initialization.field.uninitialized] the default constructor does not initialize field dataBinding
    private TupleBinding<T> dataBinding;
                            ^
../nullgtn/urld73c47f3e5_lindenb_dataindexer_tgz-pJ8-test_github_lindenb_dataindexer_SimpleIntegerJ8/src/com/github/lindenb/dataindexer/DefaultRandomAccessFactory.java:13: error: [override.param] Incompatible parameter type for file.
    public RandomAccessOutput openForWriting(File file) throws IOException {
                                                  ^
  found   : @Initialized @NonNull File
  required: @Initialized @Nullable File
  Consequence: method in @Initialized @NonNull DefaultRandomAccessFactory
    @Initialized @NonNull RandomAccessOutput openForWriting(@Initialized @NonNull DefaultRandomAccessFactory this, @Initialized @NonNull File p0) throws @Initialized @NonNull IOException
  cannot override method in @Initialized @NonNull RandomAccessFactory
    @Initialized @NonNull RandomAccessOutput openForWriting(@Initialized @NonNull RandomAccessFactory this, @Initialized @Nullable File p0) throws @Initialized @NonNull IOException
../nullgtn/urld73c47f3e5_lindenb_dataindexer_tgz-pJ8-test_github_lindenb_dataindexer_SimpleIntegerJ8/src/com/github/lindenb/dataindexer/PrimaryDataIndexWriter.java:46: error: [dereference.of.nullable] dereference of possibly-null reference getConfig().getRandomAccessFactory()
            this.dataOutput = getConfig().getRandomAccessFactory().openForWriting(getConfig().getDataFile());
                                                                ^
../nullgtn/urld73c47f3e5_lindenb_dataindexer_tgz-pJ8-test_github_lindenb_dataindexer_SimpleIntegerJ8/src/com/github/lindenb/dataindexer/PrimaryDataIndexWriter.java:58: error: [argument] incompatible argument for parameter out of DataOutputStream constructor.
        DataOutputStream daos = new DataOutputStream(dataOutput);
                                                     ^
  found   : @Initialized @Nullable RandomAccessOutput
  required: @Initialized @NonNull OutputStream
../nullgtn/urld73c47f3e5_lindenb_dataindexer_tgz-pJ8-test_github_lindenb_dataindexer_SimpleIntegerJ8/src/com/github/lindenb/dataindexer/PrimaryDataIndexWriter.java:59: error: [dereference.of.nullable] dereference of possibly-null reference getDataBinding()
        getDataBinding().writeObject(item, daos);
                      ^
../nullgtn/urld73c47f3e5_lindenb_dataindexer_tgz-pJ8-test_github_lindenb_dataindexer_SimpleIntegerJ8/src/com/github/lindenb/dataindexer/PrimaryDataIndexWriter.java:65: error: [dereference.of.nullable] dereference of possibly-null reference dataOutput
        offset = dataOutput.getOffset();
                 ^
../nullgtn/urld73c47f3e5_lindenb_dataindexer_tgz-pJ8-test_github_lindenb_dataindexer_SimpleIntegerJ8/src/com/github/lindenb/dataindexer/PrimaryDataIndexWriter.java:75: error: [dereference.of.nullable] dereference of possibly-null reference dataOutput
            dataOutput.close();
            ^
../nullgtn/urld73c47f3e5_lindenb_dataindexer_tgz-pJ8-test_github_lindenb_dataindexer_SimpleIntegerJ8/src/com/github/lindenb/dataindexer/SecondaryDataWriter.java:32: error: [initialization.fields.uninitialized] the constructor does not initialize fields: tmpFile1
    public SecondaryDataWriter(SecondaryConfig<PRIMARY, K> config, PrimaryDataIndexWriter<PRIMARY> owner) throws IOException {
           ^
../nullgtn/urld73c47f3e5_lindenb_dataindexer_tgz-pJ8-test_github_lindenb_dataindexer_SimpleIntegerJ8/src/com/github/lindenb/dataindexer/SecondaryDataWriter.java:39: error: [argument] incompatible argument for parameter db2 of PrimaryDataIndexWriter.addSecondary.
        this.owner.addSecondary(this);
                                ^
  found   : @UnderInitialization(com.github.lindenb.dataindexer.AbstractDataIndexer.class) @NonNull SecondaryDataWriter<PRIMARY extends @Initialized @Nullable Object, K extends @Initialized @Nullable Object>
  required: @Initialized @NonNull SecondaryDataWriter<PRIMARY extends @Initialized @Nullable Object, ? extends @Initialized @Nullable Object>
../nullgtn/urld73c47f3e5_lindenb_dataindexer_tgz-pJ8-test_github_lindenb_dataindexer_SimpleIntegerJ8/src/com/github/lindenb/dataindexer/SecondaryDataWriter.java:54: error: [dereference.of.nullable] dereference of possibly-null reference getDataBinding()
            getDataBinding().writeObject(oao, this.tmpOut);
                          ^
../nullgtn/urld73c47f3e5_lindenb_dataindexer_tgz-pJ8-test_github_lindenb_dataindexer_SimpleIntegerJ8/src/com/github/lindenb/dataindexer/SecondaryDataWriter.java:63: error: [dereference.of.nullable] dereference of possibly-null reference tmpOut
            tmpOut.close();
            ^
../nullgtn/urld73c47f3e5_lindenb_dataindexer_tgz-pJ8-test_github_lindenb_dataindexer_SimpleIntegerJ8/src/com/github/lindenb/dataindexer/SecondaryDataWriter.java:65: error: [assignment] incompatible types in assignment.
            this.tmpFile1 = null;
                            ^
  found   : null (NullType)
  required: @Initialized @NonNull File
../nullgtn/urld73c47f3e5_lindenb_dataindexer_tgz-pJ8-test_github_lindenb_dataindexer_SimpleIntegerJ8/src/com/github/lindenb/dataindexer/SecondaryDataWriter.java:77: error: [initialization.field.uninitialized] the default constructor does not initialize field file
        File file;
             ^
../nullgtn/urld73c47f3e5_lindenb_dataindexer_tgz-pJ8-test_github_lindenb_dataindexer_SimpleIntegerJ8/src/com/github/lindenb/dataindexer/SecondaryDataWriter.java:98: error: [dereference.of.nullable] dereference of possibly-null reference getDataBinding()
            ObjectAndOffset<K> oao = getDataBinding().readObject(this.in);
                                                   ^
../nullgtn/urld73c47f3e5_lindenb_dataindexer_tgz-pJ8-test_github_lindenb_dataindexer_SimpleIntegerJ8/src/com/github/lindenb/dataindexer/SecondaryDataWriter.java:104: error: [dereference.of.nullable] dereference of possibly-null reference getDataBinding()
            getDataBinding().writeObject(oao, this.out);
                          ^
../nullgtn/urld73c47f3e5_lindenb_dataindexer_tgz-pJ8-test_github_lindenb_dataindexer_SimpleIntegerJ8/src/com/github/lindenb/dataindexer/SecondaryDataWriter.java:113: error: [dereference.of.nullable] dereference of possibly-null reference out
                out.close();
                ^
../nullgtn/urld73c47f3e5_lindenb_dataindexer_tgz-pJ8-test_github_lindenb_dataindexer_SimpleIntegerJ8/src/com/github/lindenb/dataindexer/SecondaryDataWriter.java:176: error: [dereference.of.nullable] dereference of possibly-null reference this.objectAndOffsetComparator
                        if (this.objectAndOffsetComparator.compare(objectItem, diskItem) <= 0) {
                                ^
../nullgtn/urld73c47f3e5_lindenb_dataindexer_tgz-pJ8-test_github_lindenb_dataindexer_SimpleIntegerJ8/src/com/github/lindenb/dataindexer/SecondaryDataWriter.java:211: error: [dereference.of.nullable] dereference of possibly-null reference getConfig().getRandomAccessFactory()
        RandomAccessOutput dataOut = getConfig().getRandomAccessFactory().openForWriting(getConfig().getDataFile());
                                                                       ^
../nullgtn/urld73c47f3e5_lindenb_dataindexer_tgz-pJ8-test_github_lindenb_dataindexer_SimpleIntegerJ8/src/com/github/lindenb/dataindexer/SecondaryDataWriter.java:229: error: [dereference.of.nullable] dereference of possibly-null reference getDataBinding()
                getDataBinding().writeObject(o, daos);
                              ^
../nullgtn/urld73c47f3e5_lindenb_dataindexer_tgz-pJ8-test_github_lindenb_dataindexer_SimpleIntegerJ8/src/com/github/lindenb/dataindexer/SecondaryDataWriter.java:238: error: [dereference.of.nullable] dereference of possibly-null reference prevFile
        prevFile.close();
        ^
../nullgtn/urld73c47f3e5_lindenb_dataindexer_tgz-pJ8-test_github_lindenb_dataindexer_SimpleIntegerJ8/src/com/github/lindenb/dataindexer/BlockCompressedRandomAccessFactory.java:15: error: [override.param] Incompatible parameter type for file.
    public RandomAccessOutput openForWriting(File file) throws IOException {
                                                  ^
  found   : @Initialized @NonNull File
  required: @Initialized @Nullable File
  Consequence: method in @Initialized @NonNull BlockCompressedRandomAccessFactory
    @Initialized @NonNull RandomAccessOutput openForWriting(@Initialized @NonNull BlockCompressedRandomAccessFactory this, @Initialized @NonNull File p0) throws @Initialized @NonNull IOException
  cannot override method in @Initialized @NonNull RandomAccessFactory
    @Initialized @NonNull RandomAccessOutput openForWriting(@Initialized @NonNull RandomAccessFactory this, @Initialized @Nullable File p0) throws @Initialized @NonNull IOException
../nullgtn/urld73c47f3e5_lindenb_dataindexer_tgz-pJ8-test_github_lindenb_dataindexer_SimpleIntegerJ8/src/com/github/lindenb/dataindexer/BlockCompressedRandomAccessFactory.java:66: error: [unboxing.of.nullable] unboxing a possibly-null reference (Integer)this.readMethod.invoke(this.blockCompressedInputStream, b, off, len)
                return (Integer) this.readMethod.invoke(this.blockCompressedInputStream, b, off, len);
                       ^
../nullgtn/urld73c47f3e5_lindenb_dataindexer_tgz-pJ8-test_github_lindenb_dataindexer_SimpleIntegerJ8/src/com/github/lindenb/dataindexer/BlockCompressedRandomAccessFactory.java:125: error: [unboxing.of.nullable] unboxing a possibly-null reference (Long)this.offsetMethod.invoke(this.blockCompressedOutputStream)
                return (Long) this.offsetMethod.invoke(this.blockCompressedOutputStream);
                       ^
66 errors
